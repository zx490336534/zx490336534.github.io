<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>测试游记</title>
  
  
  <link href="http://zx490336534.github.io/atom.xml" rel="self"/>
  
  <link href="http://zx490336534.github.io/"/>
  <updated>2021-04-22T14:34:11.422Z</updated>
  <id>http://zx490336534.github.io/</id>
  
  <author>
    <name>测试游记</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>11-其他协议</title>
    <link href="http://zx490336534.github.io/article/49ec7e33.html"/>
    <id>http://zx490336534.github.io/article/49ec7e33.html</id>
    <published>2021-04-22T14:56:00.000Z</published>
    <updated>2021-04-22T14:34:11.422Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11-其他协议"><a href="#11-其他协议" class="headerlink" title="11-其他协议"></a>11-其他协议</h1><h2 id="CSV数据文件设置"><a href="#CSV数据文件设置" class="headerlink" title="CSV数据文件设置"></a>CSV数据文件设置</h2><h3 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h3><ul><li><p>通过「浏览」来选择，这个路径是「绝对路径」</p></li><li><p>「相对路径」</p></li></ul><p>写法：</p><p>使用<code>./</code> 或<code>.\</code>开始。建议使用<code>.\</code>。因为这个是linux下的写法，并且在windows下也可以正常使用</p><p>从哪个地方相对开始：</p><p>从当前<code>jmx</code>文件保存的路径</p><span id="more"></span><h3 id="忽略首行"><a href="#忽略首行" class="headerlink" title="忽略首行"></a>忽略首行</h3><p>选择「True」，则从第二行开始</p><h3 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h3><p>默认以「，」来进行分隔</p><p>当分隔出多列，但是其中某些列不需要使用。在「变量名称」中使用「空格+英文逗号」进行占位</p><h3 id="是否允许带引号（英文双引号）"><a href="#是否允许带引号（英文双引号）" class="headerlink" title="是否允许带引号（英文双引号）"></a>是否允许带引号（英文双引号）</h3><ul><li>True：引用变量携带引号</li><li>False：引用变量自动去除引号</li></ul><h3 id="遇到文件结束符再次循环"><a href="#遇到文件结束符再次循环" class="headerlink" title="遇到文件结束符再次循环"></a>遇到文件结束符再次循环</h3><p>比如文件有2行，循环6次，</p><ul><li>True：则2行2行的运行6次</li><li>False：运行2行后剩余4次运行失败</li></ul><h3 id="遇到文件结束符停止线程"><a href="#遇到文件结束符停止线程" class="headerlink" title="遇到文件结束符停止线程"></a>遇到文件结束符停止线程</h3><ul><li>True：文件读取完停止任务</li><li>False：运行到线程次数结束</li></ul><h2 id="其他协议"><a href="#其他协议" class="headerlink" title="其他协议"></a>其他协议</h2><blockquote><p>soap</p><p>jdbc</p><p>websocket</p><p>mq</p><p>dubbo</p></blockquote><h3 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP"></a>SOAP</h3><p><code>webservice</code>是一个web的应用程序，使用xml向外界暴露可供调用的API接口</p><p>SOAP以「http+xml」进行数据传输</p><p>测试地址：<a href="http://www.webxml.com.cn/zh_cn/web_services.aspx">http://www.webxml.com.cn/zh_cn/web_services.aspx</a></p><p> 获得中国省份、直辖市、地区和与之对应的ID：<a href="http://ws.webxml.com.cn/WebServices/WeatherWS.asmx?op=getRegionProvince">http://ws.webxml.com.cn/WebServices/WeatherWS.asmx?op=getRegionProvince</a></p><h4 id="soap1-1"><a href="#soap1-1" class="headerlink" title="soap1.1"></a>soap1.1</h4><blockquote><p>xml中为soap</p><p>头部中需要有：<code>SOAPAction</code></p></blockquote><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /WebServices/WeatherWS.asmx HTTP/1.1</span><br><span class="line">Host: ws.webxml.com.cn</span><br><span class="line">Content-Type: text/xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line">SOAPAction: "http://WebXml.com.cn/getRegionProvince"</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getRegionProvince</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlmhps1aj313v0df75y.jpg" alt="请求头"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlmcplrpj313v0dfq5o.jpg" alt="请求"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlmsoi07j313v0rjte1.jpg" alt="结果"></p><h4 id="soap1-2"><a href="#soap1-2" class="headerlink" title="soap1.2"></a>soap1.2</h4><blockquote><p>xml中为soap12</p></blockquote><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /WebServices/WeatherWS.asmx HTTP/1.1</span><br><span class="line">Host: ws.webxml.com.cn</span><br><span class="line">Content-Type: application/soap+xml; charset=utf-8</span><br><span class="line">Content-Length: length</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">soap12:Envelope</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:xsd</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> <span class="attr">xmlns:soap12</span>=<span class="string">"http://www.w3.org/2003/05/soap-envelope"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">getRegionProvince</span> <span class="attr">xmlns</span>=<span class="string">"http://WebXml.com.cn/"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">soap12:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap12:Envelope</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlr3sxh0j313v06f404.jpg" alt="请求头"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlralvq2j313v0cnn05.jpg" alt="请求体"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlrinj26j313v0r4q8h.jpg" alt="结果"></p><h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><blockquote><p>是一种用于执行SQL语句的JAVA API</p><p>通过这个api可以直接直接sql脚本</p></blockquote><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><ul><li><p>将<code>mysql-connector-java-***.jar</code>放到jmeter的<code>lib</code>目录下</p></li><li><p>重启jmeter</p></li><li><p>配置元件Config Element&gt;数据库连接配置JDBC Connection Configuration</p></li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprlx69z6cj308k0bvjso.jpg" alt="截屏2021-04-21 下午7.49.36"></p><blockquote><p>jmeter中引入jar包，建议放入到<code>lib</code>路径下</p><p>不推荐使用引入的方式</p></blockquote><h3 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h3><ul><li>添加取样器&gt;JDBC Request</li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprm32be3qj306c0ceq43.jpg" alt="取样器"></p><ul><li>添加数据库连接信息</li></ul><ol><li>Variable Name for created pool 创建一个连接池</li><li>database URL：不同数据库的连接方式不一样。</li></ol><p>sqLite:<code>jdbc:sqlite:c:\*.db</code></p><p>mysql:<code>jdbc:mysql://&lt;host&gt;:&lt;port&gt;/&lt;database_name&gt;</code></p><p>Oracle:<code>oracle:thin:@//&lt;host&gt;:&lt;port&gt;/ServiceName</code></p><p>Microsoft SQL Server:<code>jdbc:sqlserver://&lt;server_name&gt;:&lt;port&gt;</code></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprmc27quoj30xr0u0wlr.jpg" alt="数据库连接"></p><ol start="3"><li>在取样器中填写上连接池的名字</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprmeo3ddyj313v07y0ub.jpg" alt="取样器"></p><ol start="4"><li>运行后查看结果</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprmfcvpz8j313v0tmahx.jpg" alt="运行结果"></p><h3 id="Query-Type"><a href="#Query-Type" class="headerlink" title="Query Type"></a>Query Type</h3><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1gprmmw1zj8j313v0ax76q.jpg" alt="查询方式"></p><p>不带参数：</p><ul><li>Select Statement 查询</li><li>Update Statement 更新</li></ul><p>携带参数：</p><ul><li>Prepared Select Statement</li><li>Prepared Update Statement</li></ul><h2 id="脚本性能转换"><a href="#脚本性能转换" class="headerlink" title="脚本性能转换"></a>脚本性能转换</h2><ul><li>逻辑控制器：事务控制器</li><li>造测试数据库：DDT数据驱动性能测试（CSV文件设置）</li><li>线程组配置（性能场景设计）</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;11-其他协议&quot;&gt;&lt;a href=&quot;#11-其他协议&quot; class=&quot;headerlink&quot; title=&quot;11-其他协议&quot;&gt;&lt;/a&gt;11-其他协议&lt;/h1&gt;&lt;h2 id=&quot;CSV数据文件设置&quot;&gt;&lt;a href=&quot;#CSV数据文件设置&quot; class=&quot;headerlink&quot; title=&quot;CSV数据文件设置&quot;&gt;&lt;/a&gt;CSV数据文件设置&lt;/h2&gt;&lt;h3 id=&quot;文件名&quot;&gt;&lt;a href=&quot;#文件名&quot; class=&quot;headerlink&quot; title=&quot;文件名&quot;&gt;&lt;/a&gt;文件名&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过「浏览」来选择，这个路径是「绝对路径」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「相对路径」&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写法：&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;./&lt;/code&gt; 或&lt;code&gt;.\&lt;/code&gt;开始。建议使用&lt;code&gt;.\&lt;/code&gt;。因为这个是linux下的写法，并且在windows下也可以正常使用&lt;/p&gt;
&lt;p&gt;从哪个地方相对开始：&lt;/p&gt;
&lt;p&gt;从当前&lt;code&gt;jmx&lt;/code&gt;文件保存的路径&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>10-逻辑控制器</title>
    <link href="http://zx490336534.github.io/article/ad741ca2.html"/>
    <id>http://zx490336534.github.io/article/ad741ca2.html</id>
    <published>2021-04-19T14:56:00.000Z</published>
    <updated>2021-04-22T14:34:11.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-逻辑控制器"><a href="#10-逻辑控制器" class="headerlink" title="10-逻辑控制器"></a>10-逻辑控制器</h1><h2 id="IF条件控制器"><a href="#IF条件控制器" class="headerlink" title="IF条件控制器"></a>IF条件控制器</h2><ol><li><code>Interpret Condition as Variable Expression?</code>默认勾选：</li></ol><ul><li><p>条件结果为<code>true</code>才会执行子取样器</p></li><li><p>需要使用<code>${__jexl3(,)}</code>和<code>${__groovy(,)}</code>进行逻辑判断</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">${__jexl3(<span class="string">"${var1}"</span>==<span class="string">"value"</span>,)}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppdhvqu4lj313u0cetbo.jpg" alt="如果（if）控制器"></p><ol start="2"><li>不勾选<code>Interpret Condition as Variable Expression?</code>会直接用<code>JavaScript</code>   语法</li></ol><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"${var1}"</span>==<span class="string">"value"</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li><code>Evaluate for all children?</code> 执行子节点前先计算表达式真假<span id="more"></span><h2 id="循环控制器"><a href="#循环控制器" class="headerlink" title="循环控制器"></a>循环控制器</h2></li></ol><p>循环次数 控制循环的次数</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppdxx7f5aj30tp04tjry.jpg" alt="循环控制器"></p><p>循环控制器+计数器=foreach控制器</p><p>循环完内容后还是会打印，直到达到循环次数</p><h2 id="foreach控制器"><a href="#foreach控制器" class="headerlink" title="foreach控制器"></a>foreach控制器</h2><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppdyz9ssyj30tp084758.jpg" alt="foreach控制器"></p><p>假如有3个变量：<code>user_1</code>,<code>user_2</code>,<code>user_3</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppe1ub9qcj30tp084my4.jpg" alt="填写"></p><p>之后使用<code>${dr}</code>就可以使用这个变量了</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure><p>循环内容被循环完之后不再继续打印</p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>jdbc协议，从数据库中，获取数据，进行循环使用</p><h2 id="仅一次控制器"><a href="#仅一次控制器" class="headerlink" title="仅一次控制器"></a>仅一次控制器</h2><p>每个用户都只执行一次</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppey4vzqhj30tp084jry.jpg" alt="仅一次控制器"></p><h2 id="临界部分控制器"><a href="#临界部分控制器" class="headerlink" title="临界部分控制器"></a>临界部分控制器</h2><p>把jmeter脚本的并行执行，强制变成串行执行</p><ul><li><p>固定锁，强制把多用户并行执行，变成单通道串行执行</p></li><li><p>动态锁，锁名称修改为<code>global_lock_${__threadNum}</code></p></li></ul><blockquote><h1 id="Critical-Section-Controller-临界部分控制器-到底该如何用"><a href="#Critical-Section-Controller-临界部分控制器-到底该如何用" class="headerlink" title="Critical Section Controller (临界部分控制器) 到底该如何用?"></a>Critical Section Controller (临界部分控制器) 到底该如何用?</h1><p>有同学在使用 jmeter 做性能测试的时候，有这样一个诉求，就是一个完整的业务包含多个接口请求，且有先后顺序。在做性能测试的时候，要求接口请求顺序永远按照自己定义好的请求顺序执行。</p><p>于是，他就在 jmeter 中线程组下按顺序添加了多个接口请求取样器，模拟并发请求调试。看到效果如下图(图一)：</p><p><img src="http://testingpai.com/upload/file/2020/5eed103b-4553-4591-8654-14e4accf7b97.gif" alt="image.png"></p><p>脚本调试是通了，但是，他看到查看结果树中显示请求结果数据好像不是按照顺序请求(没有仔细去分析，根据结果自认为的)，认为这样不符合自己的诉求，于是开始寻找新的办法。通过长时间的摸索，终于找到了一个貌似能解决的办法，增加一个 critical section controller(临界部分控制器)，认为增加一个锁，能控制执行顺序。于是修改脚本生成如图(图二):</p><p><img src="http://testingpai.com/upload/file/2020/2ed3450c-0ec3-4376-968c-bfb6be4c193c.gif" alt="image.png"></p><p>看到 查看结果树中显示的请求顺序与预期一致，是按照接口的顺序执行的，于是认为这样就是正确的。</p><p><strong>但是</strong>，不知道大家看了这两个图后，有没有注意一个细节？</p><p><em>第一种方式：</em></p><p><img src="http://testingpai.com/upload/file/2020/7dd05c73-246f-41a9-93ba-068e30cc979c.jpg" alt="image.png"></p><p>728 x 334 1199 x 550</p><p><img src="http://testingpai.com/upload/file/2020/ef1615be-70e6-46b9-8dfe-480bbf2f1f3a.jpg" alt="image.png"></p><p><em>第二种方式：</em></p><p><img src="http://testingpai.com/upload/file/2020/e8c17d01-0b4e-4f09-a386-07230731897e.jpg" alt="image.png"></p><p>728 x 338 1197 x 555</p><p><img src="http://testingpai.com/upload/file/2020/669f3afc-0226-4666-a430-ea1c7cdb61a9.jpg" alt="image.png"></p><p>第一种方式，整个执行过程只用了 4 秒种，第二种方式，执行过程耗时 13 秒，汇总报告中的吞吐量是按每分钟计算。*</p><p>这句话什么意思呢？就是说，第二种方式，虽然眼睛是看到了查看结果树中的数据是按照自定义的顺序执行的，但是执行时间远远大于第一种方式，换句话说，服务器的压力要远远小于第一种方式。<strong>人为的方式导致性能测试指标值错误</strong>。</p><p><strong>哪我们应该怎么做呢？</strong></p><p>首先，对于这样一种，遇到问题时，自主思考和学习的行为能力，还是值得表扬和肯定的。只是，需要学习的时候，再深入一点点，再细致一点点。</p><p>接下来，我们讲讲该怎么做。首先，我们要知道，在 jmeter 中，同层级无逻辑控制器控制的取样器，执行顺序是从上往下，顺序执行的。这句话，怎么理解？在我们单个用户脚本调试阶段，执行顺序是从上往下；在多用户并发时，每一个并发用户(线程)，也都是从上往下执行的，只是因为是并发，同一时刻，可能有不同用户(线程)做完了不同接口请求，查看结果树只是按照完成时间的先后显示请求结果。为了验证我说的这句话，我们可以再看下下图(图三)</p><p><img src="http://testingpai.com/upload/file/2020/5792442b-64e9-4965-b569-94793a97880b.gif" alt="image.png"></p><p>从查看结果树中，我们看 ThreadNum 号想同的请求，请求的顺序是不是都从 sample1 到 sample3。这样，其实已经满足了预期诉求。</p><p>哪 critical section controller(临界部分控制器)到底怎么用呢？我们先看下官方给我们的解答：</p><p><img src="http://testingpai.com/upload/file/2020/798642a1-cebb-4b3a-aefe-8e8d1825f959.jpg" alt="image.png"></p><p>临界部分控制器确保其子元素(采样器\控制器等)将仅由一个线程执行，在执行控制器的子元素之前先命名一个锁锁定。</p><p><img src="http://testingpai.com/upload/file/2020/f76f4d50-eab9-4e3a-b0a8-efc076372bfc.jpg" alt="image.png"></p><p>说直白点，就是并发请求(线程)这个控制器时，会先根据‘锁名称’生成一个‘锁’，锁定控制器下的所有子元素，等到所有子元素都执行完‘锁’才会释放，下一个请求(线程)才能执行，即，把原本的并发请求的并行处理方式，变成了串行处理。所以，就会看到上面我们说到的第二种方式的时间远远大于第一种方式。哪如何让 critical section controller 可以并行处理呢？我们再看看官方给的解释，它说的是，线程执行时，先根据‘锁名称’生成锁，串行，是因为锁名称相同，已经被占用，无法生成新的锁，所以只能等待锁的释放，哪我们是不是可以考虑让锁名称变成动态的呢？每个线程要用的时候，生成一个新的锁名称而且不重复，是不是就可以并行处理了。想要锁名称变成动态，方法很多，使用随机数函数、使用时间戳函数、使用线程数函数……, 是不是很多，只要用个自动生成值的函数就可以。</p><p><img src="http://testingpai.com/upload/file/2020/49d0dcc6-62d0-4023-adc7-342cd922e3fe.gif" alt="image.png"></p><p>这个，就是修改了 critical section controller 的锁名称为动态值，当某个线程调用时，就会自动生成一个新的锁名称。看最后执行的时间 5 秒，汇总报告中的吞吐量，是不是和第一种方式基本相同？</p><p>当然，有的同学比较追求完美，就是想看到最后的结果一定要按顺序展示。没问题，满足你的要求。</p><p><img src="http://testingpai.com/upload/file/2020/d924c77b-51eb-435f-932a-cdd02518e29b.gif" alt="image.png"></p><p>是不是，看到结果也是你指定的顺序，执行的时间也和第一种相同，最后的汇总报告中，看到了一个事务总数据。</p><p>好了，critical section controller(临界部分控制器)的使用，你是否已经掌握了呢？</p><p>作者：Allen<br>链接：<a href="http://testingpai.com/article/1595507267745">http://testingpai.com/article/1595507267745</a><br>来源：测试派<br>协议：CC BY-SA 4.0 <a href="https://creativecommons.org/licenses/by-sa/4.0/">https://creativecommons.org/licenses/by-sa/4.0/</a></p></blockquote><h2 id="随机控制器"><a href="#随机控制器" class="headerlink" title="随机控制器"></a>随机控制器</h2><p>多个取样器中随机选一个</p><h2 id="随机顺序控制器"><a href="#随机顺序控制器" class="headerlink" title="随机顺序控制器"></a>随机顺序控制器</h2><p>多个取样器随机顺序执行</p><h2 id="吞吐量控制器"><a href="#吞吐量控制器" class="headerlink" title="吞吐量控制器"></a>吞吐量控制器</h2><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppfcgse61j30tp084wf7.jpg" alt="吞吐量"></p><h1 id="DDT数据驱动性能测试"><a href="#DDT数据驱动性能测试" class="headerlink" title="DDT数据驱动性能测试"></a>DDT数据驱动性能测试</h1><h2 id="CSV文件"><a href="#CSV文件" class="headerlink" title="CSV文件"></a>CSV文件</h2><p>文本文件，是用英文逗号分隔的文本文件</p><h2 id="CSV数据文件设置"><a href="#CSV数据文件设置" class="headerlink" title="CSV数据文件设置"></a>CSV数据文件设置</h2><p>这个方法，是使用人数最多的数据驱动性能测试方法</p><p>但是，这个不是最优的数据驱性能测试方法</p><ul><li>文件名：必传，文本文件（txt，csv，xls）</li></ul><blockquote><p> 推荐用txt，是操作系统默认的文本文件格式</p><p>txt默认编码是utf8</p></blockquote><blockquote><p>csv文件，保存采用默认编码，不是utf8</p><p>csv文件打开比txt消耗大</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gppfuo16qdj30tp0csjt3.jpg" alt="csv数据文件设置"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;10-逻辑控制器&quot;&gt;&lt;a href=&quot;#10-逻辑控制器&quot; class=&quot;headerlink&quot; title=&quot;10-逻辑控制器&quot;&gt;&lt;/a&gt;10-逻辑控制器&lt;/h1&gt;&lt;h2 id=&quot;IF条件控制器&quot;&gt;&lt;a href=&quot;#IF条件控制器&quot; class=&quot;headerlink&quot; title=&quot;IF条件控制器&quot;&gt;&lt;/a&gt;IF条件控制器&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Interpret Condition as Variable Expression?&lt;/code&gt;默认勾选：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;条件结果为&lt;code&gt;true&lt;/code&gt;才会执行子取样器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要使用&lt;code&gt;${__jexl3(,)}&lt;/code&gt;和&lt;code&gt;${__groovy(,)}&lt;/code&gt;进行逻辑判断&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;${__jexl3(&lt;span class=&quot;string&quot;&gt;&quot;${var1}&quot;&lt;/span&gt;==&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;,)}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008eGmZEly1gppdhvqu4lj313u0cetbo.jpg&quot; alt=&quot;如果（if）控制器&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;不勾选&lt;code&gt;Interpret Condition as Variable Expression?&lt;/code&gt;会直接用&lt;code&gt;JavaScript&lt;/code&gt;   语法&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;${var1}&quot;&lt;/span&gt;==&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;code&gt;Evaluate for all children?&lt;/code&gt; 执行子节点前先计算表达式真假&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>9-正则提取器</title>
    <link href="http://zx490336534.github.io/article/c04862c6.html"/>
    <id>http://zx490336534.github.io/article/c04862c6.html</id>
    <published>2021-04-19T13:22:00.000Z</published>
    <updated>2021-04-22T14:34:11.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9-正则提取器"><a href="#9-正则提取器" class="headerlink" title="9-正则提取器"></a>9-正则提取器</h1><h2 id="正则提取器"><a href="#正则提取器" class="headerlink" title="正则提取器"></a>正则提取器</h2><h3 id="apply-to"><a href="#apply-to" class="headerlink" title="apply to"></a>apply to</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl6zeymgoj30ti09bt9n.jpg" alt="apply to"></p><ul><li>Main sample and sub-samples 主取样器+子取样器</li><li>Main sample only 主取样器</li><li>Sub-sample only 子取样器</li><li>JMeter Variable Name to use：从一个变量中再提取想要的信息。直接写变量名称即可</li></ul><p>正则提取式的写法：左边界(正则式)右边界</p><p>「模版」的固定格式：<code>$数字$</code> 这个数字从1开始</p><span id="more"></span><h3 id="提取信息测试"><a href="#提取信息测试" class="headerlink" title="提取信息测试"></a>提取信息测试</h3><p>填写后进行测试：</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl79zzutzj30ti09b3zj.jpg" alt="填写"></p><p>在「调试取样器」中可以看到<code>reg_msg</code>被正确赋值为我们正则匹配到的内容</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl7awymsvj30ti0mctd7.jpg" alt="查看结果"></p><h3 id="进行二次提取"><a href="#进行二次提取" class="headerlink" title="进行二次提取"></a>进行二次提取</h3><p>使用「JMeter Variable Name to use」对「token」进行二次提取</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl7ovralhj30ti099my7.jpg" alt="二次提取"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl7q03i4jj30ti0o7gpt.jpg" alt="结果"></p><h3 id="提取响应头"><a href="#提取响应头" class="headerlink" title="提取响应头"></a>提取响应头</h3><p>选择「Request Headers」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl7tv2q06j30ti09odgx.jpg" alt="响应头"></p><p>运行测试</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl7uqj0ocj30ti0qn433.jpg" alt="查看结果"></p><h2 id="脚本性能转换"><a href="#脚本性能转换" class="headerlink" title="脚本性能转换"></a>脚本性能转换</h2><p>在jmeter中，默认一个取样器的一次请求，就是一个事务</p><p>如果想要把多个接口<strong>合并</strong>成为一个事务，合计「tps」值。</p><p>需要添加「事务控制器」 一定要勾选「generate parent sample」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl8cxvhz5j30ti056t8z.jpg" alt="事务控制器"></p><h2 id="聚合报告"><a href="#聚合报告" class="headerlink" title="聚合报告"></a>聚合报告</h2><ul><li>样本：事务的总请求次数</li><li>平均值、中位数、90%、95%、99%、最小值、最大值：都是响应时间<ul><li>xx% 的时间都是小于xxx响应时间</li></ul></li><li>异常</li><li>吞吐量：在固定不变的并发用户数情况下，且没有网络瓶颈时，与tps相等</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpl8ffg929j313u0biact.jpg" alt="聚合报告"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;9-正则提取器&quot;&gt;&lt;a href=&quot;#9-正则提取器&quot; class=&quot;headerlink&quot; title=&quot;9-正则提取器&quot;&gt;&lt;/a&gt;9-正则提取器&lt;/h1&gt;&lt;h2 id=&quot;正则提取器&quot;&gt;&lt;a href=&quot;#正则提取器&quot; class=&quot;headerlink&quot; title=&quot;正则提取器&quot;&gt;&lt;/a&gt;正则提取器&lt;/h2&gt;&lt;h3 id=&quot;apply-to&quot;&gt;&lt;a href=&quot;#apply-to&quot; class=&quot;headerlink&quot; title=&quot;apply to&quot;&gt;&lt;/a&gt;apply to&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008eGmZEly1gpl6zeymgoj30ti09bt9n.jpg&quot; alt=&quot;apply to&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Main sample and sub-samples 主取样器+子取样器&lt;/li&gt;
&lt;li&gt;Main sample only 主取样器&lt;/li&gt;
&lt;li&gt;Sub-sample only 子取样器&lt;/li&gt;
&lt;li&gt;JMeter Variable Name to use：从一个变量中再提取想要的信息。直接写变量名称即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正则提取式的写法：左边界(正则式)右边界&lt;/p&gt;
&lt;p&gt;「模版」的固定格式：&lt;code&gt;$数字$&lt;/code&gt; 这个数字从1开始&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>8-Json提取器</title>
    <link href="http://zx490336534.github.io/article/602b9665.html"/>
    <id>http://zx490336534.github.io/article/602b9665.html</id>
    <published>2021-04-15T22:39:00.000Z</published>
    <updated>2021-04-22T14:34:11.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="8-Json提取器"><a href="#8-Json提取器" class="headerlink" title="8-Json提取器"></a>8-Json提取器</h1><h2 id="属性函数"><a href="#属性函数" class="headerlink" title="属性函数"></a>属性函数</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>以<code>.properties</code>结尾的文件，都是属性配置文件</p><span id="more"></span><h3 id="变量与属性"><a href="#变量与属性" class="headerlink" title="变量与属性"></a>变量与属性</h3><ul><li><p>变量：变量是自己在脚本中定义的</p></li><li><p>属性：jmeter启动时获取</p><ul><li><p><strong>静态属性</strong>：在属性配置文件中配置</p></li><li><p><strong>动态属性</strong>：在jmeter运行过程中，动态设置的</p></li><li><p><strong>系统属性</strong>：Jmeter运行环境属性</p></li></ul></li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjh464092j30gg09p76p.jpg" alt="属性显示"></p><ul><li>查看Jmeter属性</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjh4o1xvpj30xr0u0thj.jpg" alt="Jmeter属性"></p><ul><li>查看系统属性</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjh6p1g98j30xr0u0tjb.jpg" alt="系统属性"></p><h3 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h3><ul><li><code>${__P(,)}</code></li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjhbqaxgqj30lv0hgwhe.jpg" alt="P"></p><ul><li><code>${__property(,,)}</code></li></ul><p>调用属性</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjhcjsbruj30lv0hgmzq.jpg" alt="property"></p><p>在「函数助手」中设置属性名称为<code>jmeter.version</code>后点击生成。可以看到结果与「属性显示」中一致</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjhf3wlepj30lb0feabq.jpg" alt="获取值"></p><h3 id="设置属性"><a href="#设置属性" class="headerlink" title="设置属性"></a>设置属性</h3><p><code>${__setProperty(,,)}</code></p><p>给内容或变量设置属性名称</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjhdacxf3j30lv0d375w.jpg" alt="setProperty"></p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>在DDT，混合场景时候会用到</p><h2 id="拼接函数"><a href="#拼接函数" class="headerlink" title="拼接函数"></a>拼接函数</h2><p><code>${__V(,)}</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjhoqlblaj30lb0eqtak.jpg" alt="V函数"></p><p>假如要拼接几个字符串</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user_1</span><br><span class="line">user_2</span><br><span class="line">user_3</span><br></pre></td></tr></tbody></table></figure><p>使用拼接函数<code>${__V(user_${__counter(,)},)}</code></p><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>在jdbc从数据库获取数据中，会使用到</p><h2 id="Json提取器"><a href="#Json提取器" class="headerlink" title="Json提取器"></a>Json提取器</h2><p><code>Match No.</code>:提取内容的索引，-1表示全部</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjii1v3k0j30ti07u3z7.jpg" alt="Json提取器"></p><p>提取式：<code>$.</code>开头</p><p>可以在「查看结果树」中调试</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjij20b2wj30ti0ftq5h.jpg" alt="查看结果树"></p><p>采用<code>$..</code>+末梢节点名称：相对路径提取方法</p><p>如果末梢节点存在多个，会返回数组「多个结果」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjikk5cpgj30ti0ftwh1.jpg" alt="相对位置"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjily0rmjj30ti0gpacl.jpg" alt="多个结果"></p><h3 id="提取多个值"><a href="#提取多个值" class="headerlink" title="提取多个值"></a>提取多个值</h3><p>每个内容之间都需要使用<code>;</code>来分隔</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjiwzdzynj30ti081q3o.jpg" alt="提取多个"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpjiwev1oej30ti0iljuq.jpg" alt="查看结果"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;8-Json提取器&quot;&gt;&lt;a href=&quot;#8-Json提取器&quot; class=&quot;headerlink&quot; title=&quot;8-Json提取器&quot;&gt;&lt;/a&gt;8-Json提取器&lt;/h1&gt;&lt;h2 id=&quot;属性函数&quot;&gt;&lt;a href=&quot;#属性函数&quot; class=&quot;headerlink&quot; title=&quot;属性函数&quot;&gt;&lt;/a&gt;属性函数&lt;/h2&gt;&lt;h3 id=&quot;属性&quot;&gt;&lt;a href=&quot;#属性&quot; class=&quot;headerlink&quot; title=&quot;属性&quot;&gt;&lt;/a&gt;属性&lt;/h3&gt;&lt;p&gt;以&lt;code&gt;.properties&lt;/code&gt;结尾的文件，都是属性配置文件&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>7-Jmeter函数</title>
    <link href="http://zx490336534.github.io/article/13f41b93.html"/>
    <id>http://zx490336534.github.io/article/13f41b93.html</id>
    <published>2021-04-10T07:39:00.000Z</published>
    <updated>2021-04-22T14:34:11.429Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7-Jmeter函数"><a href="#7-Jmeter函数" class="headerlink" title="7-Jmeter函数"></a>7-Jmeter函数</h1><h2 id="用户参数"><a href="#用户参数" class="headerlink" title="用户参数"></a>用户参数</h2><h3 id="每次迭代更新一次"><a href="#每次迭代更新一次" class="headerlink" title="每次迭代更新一次"></a>每次迭代更新一次</h3><p><code>每次迭代更新一次</code>：勾选的话，在当前线程组中，所有取样器执行完一轮请求，才会更新一次，没有执行完不会更新值</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpen4zlozbj30x406ymz5.jpg" alt="每次跌打更新一次"></p><span id="more"></span><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>做性能测试时，先注册随机账号，然后再用账号登录，不需要提前准备测试数据</p><p>如果使用<code>用户定义变量</code>的话，生成的手机号，一直不发生改变，只有第一次注册成功，之后都是注册失败。但是登录可以一直成功。</p><h2 id="变量的引用与定义"><a href="#变量的引用与定义" class="headerlink" title="变量的引用与定义"></a>变量的引用与定义</h2><h3 id="变量的命名规则"><a href="#变量的命名规则" class="headerlink" title="变量的命名规则"></a>变量的命名规则</h3><p>字母、数字、下划线</p><h2 id="函数助手"><a href="#函数助手" class="headerlink" title="函数助手"></a>函数助手</h2><p>写法：双下划线开头+函数名称(区分大小写)+小括号+括号中以逗号分隔的参数</p><h3 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">${__counter(,)} </span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenhv0bchj30q40icdi8.jpg" alt="函数例子"></p><p>新建一个「调试取样器」，并将名称修改为<code>${__counter(,)}</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenphxn32j30x406y0uh.jpg" alt="调试取样器"></p><p>修改「线程组」循环次数为5次</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenq1kybaj30y40aqdi4.jpg" alt="线程组"></p><p>运行后查看「查看结果树」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenrcucbuj30z70c8di7.jpg" alt="查看结果树"></p><h3 id="统计函数类似元件-计数器"><a href="#统计函数类似元件-计数器" class="headerlink" title="统计函数类似元件-计数器"></a>统计函数类似元件-计数器</h3><p>新建一个「计数器」</p><ul><li>设置它的引用名称为<code>${d}</code></li><li>开始值为1</li><li>递增值为2</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenx104m7j30z70c8q58.jpg" alt="计数器"></p><p>新建一个「调试取样器」，并将名称修改为<code>${d}</code></p><p>运行后查看「查看结果树」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpenxv0rabj30z70c8mzk.jpg" alt="查看结果树"></p><h3 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeoy1ibfbj30um092q4n.jpg" alt="时间"></p><ul><li><p><code>${__time(,)}</code>：获取当前时间戳</p></li><li><p><code>${__timeShift(,,,,)}</code>：时间位移</p></li><li><p><code>${__dateTimeConvert(,,,)}</code>：时间戳转为本地时间</p></li><li><p><code>${__RandomDate(,,,,)}</code>：随机时间</p></li></ul><h4 id="获取当前时间戳函数-time"><a href="#获取当前时间戳函数-time" class="headerlink" title="获取当前时间戳函数${__time(,)}"></a>获取当前时间戳函数<code>${__time(,)}</code></h4><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeo6bbawtj30lr0nrq6i.jpg" alt="time"></p><p>可能用的最多的就是通过这个函数，可以生成<strong>当前时间的时间戳</strong>，或者<strong>格式化当前时间</strong>。</p><p>常用于接口参数需要时间时的参数。</p><p>这个函数，有两个可填参数。</p><ul><li>如果都不填，那么获得的是当前时间的时间戳；</li><li>如果填第一个参数，就是<strong>格式化当前时间</strong>，填写对应的时间格式，把当前时间用对应的格式返回；如果想要格式化时间精确到毫秒：<code>${__time(yyyy-MM-dd HH:mm:ss:SSS,)}</code></li><li>如果填第二个参数，就是把时间结果用一个<strong>变量</strong>接收</li></ul><p>但是，不管怎么用，都只能<strong>获取当前时间</strong>。</p><h4 id="时间位移-timeShift"><a href="#时间位移-timeShift" class="headerlink" title="时间位移${__timeShift(,,,,)}"></a>时间位移<code>${__timeShift(,,,,)}</code></h4><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeo5sztc1j30lr0qijw3.jpg" alt="timeShift"></p><p>这个函数，是离获取当前时间的 time 函数最近的一个函数，也是大家最容易与 time 函数混淆的函数。是<strong>时间位移</strong>函数。</p><p>常见于脚本中需要做时间偏移计算时用。</p><p>这个函数，它有五个可选参数：</p><p>如果所有的都不填，哪也是获取当前的时间戳；</p><p>第 1 个参数，是<strong>格式化时间</strong>，如果不填，时间戳精确到毫秒，如果填了，就格式化输出时间；</p><p>第 2 个参数，<strong>日期</strong>，上一个参数的格式返回这个日期，如：<code>${__timeShift(yyyy-MM-dd,20200915,,,)}</code> 如果未填，则为当前日期；</p><p>第 3 个参数，<strong>时间位移</strong>，以可选的正号‘+’ 和负号‘-’开头，负号‘-’开头，表示整个时间相减；再以大小写 p 为前缀，后面跟具体位移数和单位，单位’D’为天，’H’为小时，’M’为分钟， ‘S’为秒，而’T’必须在任意一个 H\M\S 出现之前，数字可以是正数或负数；天\时\分，前的数字为整数，秒，可以是小数。如在当前日期上增加 2 天 4 小数 6 分 10.234 秒：<code>${__timeShift(yyyy-MM-dd HH:mm:ss:SSS,,p2dt4h6m10.234s,,)}</code></p><p>第 4 个参数，<strong>区域语言设置</strong></p><p>第 5 个参数，定义<strong>存储结果的变量名</strong></p><h4 id="时间戳转为本地时间-dateTimeConvert"><a href="#时间戳转为本地时间-dateTimeConvert" class="headerlink" title="时间戳转为本地时间${__dateTimeConvert(,,,)}"></a>时间戳转为本地时间<code>${__dateTimeConvert(,,,)}</code></h4><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeo7bsjp0j30lr0j6wha.jpg" alt="dateTimeConvert"></p><p><strong>将时间戳转换为本地时间</strong>。</p><p>常用于对接口响应结果中的时间戳进行转换。</p><p>这个函数，有四个参数</p><p>第 1 个参数，<strong>被转换的时间</strong>，为空时，表示当前时间戳，精确到毫秒</p><p>第 2 个参数，被转换时间的<strong>时间格式</strong>，上面时间的格式</p><p>第 3 个参数，<strong>转换后的时间格式</strong>，   </p><ul><li>例：<code>${__dateTimeConvert(09102020011034,MMddyyyyHHmmss,yyyyMMddHHmmss,)}</code> 原始时间格式为：月日年时分秒，转换后为：年月日时分秒</li><li>例 2：<code>${__dateTimeConvert(1599723255000,,yyyyMMdd HHmmss,)}</code> 一个精确到毫秒的时间戳，转换为：年月日 时分秒 格式时间</li></ul><p>第 4 个参数，定义<strong>存储结果的变量名称</strong></p><h4 id="随机时间-RandomDate"><a href="#随机时间-RandomDate" class="headerlink" title="随机时间${__RandomDate(,,,,)}"></a>随机时间<code>${__RandomDate(,,,,)}</code></h4><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeo8nijzzj30li0jv0vs.jpg" alt="RandomDate"></p><p>它是<strong>随机日期函数</strong>。可以在一个随机日期之间，随机选一个日期返回。注意，这个函数操作的是 <strong>日期</strong>。</p><p>这个函数，有五个参数</p><p>第 1 个参数，<strong>日期格式</strong>，默认为 年-月-日</p><p>第 2 个参数，<strong>起始日期</strong>，随机日期区间起始值，包含起始值，空时，默认为当前日期</p><p>第 3 个参数，<strong>结束日期</strong>，随机日期区间结束值，不包含结束值   </p><ul><li>例：<code>${__RandomDate(yyyyMMdd,20200718,20200918,,)}</code> 从一个日期格式为 yyyyMMdd 日期区间随机区一个日期</li></ul><p>第 4 个参数，<strong>区域语言设置</strong></p><p>第 5 个参数，定义<strong>存储的变量名称</strong></p><h3 id="简单加密"><a href="#简单加密" class="headerlink" title="简单加密"></a>简单加密</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpep0j2gxzj30lr0o7n0i.jpg" alt="简单加密"></p><p><code>${__digest(,,,,)}</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpeozt8yxvj30o40jj41v.jpg" alt="加密"></p><h3 id="整数java运算"><a href="#整数java运算" class="headerlink" title="整数java运算"></a>整数java运算</h3><p><code>${__intSum(1,2,)}</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpep26id01j30ql0jcq5o.jpg" alt="运算"></p><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><p><code>__jexl3</code>：支持jython、groovy、javascript</p><h3 id="打印日志"><a href="#打印日志" class="headerlink" title="打印日志"></a>打印日志</h3><p><code>__log</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpep3s564lj30qo0jn0vy.jpg" alt="打印日志"></p><h3 id="获取当前IP"><a href="#获取当前IP" class="headerlink" title="获取当前IP"></a>获取当前IP</h3><p><code>${__machineIP()}</code></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpep453i8vj30o40gt773.jpg" alt="当前IP"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;7-Jmeter函数&quot;&gt;&lt;a href=&quot;#7-Jmeter函数&quot; class=&quot;headerlink&quot; title=&quot;7-Jmeter函数&quot;&gt;&lt;/a&gt;7-Jmeter函数&lt;/h1&gt;&lt;h2 id=&quot;用户参数&quot;&gt;&lt;a href=&quot;#用户参数&quot; class=&quot;headerlink&quot; title=&quot;用户参数&quot;&gt;&lt;/a&gt;用户参数&lt;/h2&gt;&lt;h3 id=&quot;每次迭代更新一次&quot;&gt;&lt;a href=&quot;#每次迭代更新一次&quot; class=&quot;headerlink&quot; title=&quot;每次迭代更新一次&quot;&gt;&lt;/a&gt;每次迭代更新一次&lt;/h3&gt;&lt;p&gt;&lt;code&gt;每次迭代更新一次&lt;/code&gt;：勾选的话，在当前线程组中，所有取样器执行完一轮请求，才会更新一次，没有执行完不会更新值&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008eGmZEly1gpen4zlozbj30x406ymz5.jpg&quot; alt=&quot;每次跌打更新一次&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>6-手写Jmeter与录制</title>
    <link href="http://zx490336534.github.io/article/a44ae78a.html"/>
    <id>http://zx490336534.github.io/article/a44ae78a.html</id>
    <published>2021-04-09T12:39:00.000Z</published>
    <updated>2021-04-22T14:34:11.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-手写Jmeter与录制"><a href="#6-手写Jmeter与录制" class="headerlink" title="6-手写Jmeter与录制"></a>6-手写Jmeter与录制</h1><h2 id="元件作用域"><a href="#元件作用域" class="headerlink" title="元件作用域"></a>元件作用域</h2><h3 id="「取样器」"><a href="#「取样器」" class="headerlink" title="「取样器」"></a>「取样器」</h3><p>作用：只作用于自身</p><p>作用域：无作用域</p><span id="more"></span><h3 id="「逻辑控制器」"><a href="#「逻辑控制器」" class="headerlink" title="「逻辑控制器」"></a>「逻辑控制器」</h3><p>作用：控制子节点</p><p>作用域：作用于子节点</p><h3 id="「前置处理器」"><a href="#「前置处理器」" class="headerlink" title="「前置处理器」"></a>「前置处理器」</h3><p>作用：在取样器执行前执行</p><p>作用域：影响所有取样器</p><h3 id="「后置处理器」"><a href="#「后置处理器」" class="headerlink" title="「后置处理器」"></a>「后置处理器」</h3><p>作用：在取样器之后执行，影响在此之后的取样器</p><p>作用域：后续取样器</p><h3 id="「断言」"><a href="#「断言」" class="headerlink" title="「断言」"></a>「断言」</h3><p>作用：取样器之后执行</p><p>作用域：当前取样器</p><h3 id="「定时器」"><a href="#「定时器」" class="headerlink" title="「定时器」"></a>「定时器」</h3><p>作用：影响同级及子级取样器</p><p>作用域：同级及子级</p><h3 id="「配置元件」"><a href="#「配置元件」" class="headerlink" title="「配置元件」"></a>「配置元件」</h3><p>作用：影响同级及子级元件</p><p>作用域：同级及子级</p><h3 id="「监听器」"><a href="#「监听器」" class="headerlink" title="「监听器」"></a>「监听器」</h3><p>作用：收集取样器执行数据</p><p>作用域：同级</p><h2 id="取样器执行顺序"><a href="#取样器执行顺序" class="headerlink" title="取样器执行顺序"></a>取样器执行顺序</h2><p>在没有<strong>逻辑控制器</strong>控制时，执行顺序为「从上往下」</p><p><strong>查看结果树</strong>中显示的顺序是根据「收到响应的时间先后」排序的</p><h2 id="狭义并发与广义并发"><a href="#狭义并发与广义并发" class="headerlink" title="狭义并发与广义并发"></a>狭义并发与广义并发</h2><p>一般情况下，不会加集合点，不加集合点，是广义并发，请求量相对更大，更能体现服务器的性能</p><p>狭义的并发：需要加上集合点，总请求量会被强制降低，服务器的性能结果就不一定准确       </p><h2 id="手写脚本"><a href="#手写脚本" class="headerlink" title="手写脚本"></a>手写脚本</h2><h3 id="HTTP请求默认值"><a href="#HTTP请求默认值" class="headerlink" title="HTTP请求默认值"></a>HTTP请求默认值</h3><p>写一次「服务器名称或IP」，其他HTTP取样器可以不用填写</p><p>取样器填写后会覆盖默认值</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd4grd6xfj313u0bv0w0.jpg" alt="HTTP请求默认值"></p><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>当有登录接口，和需要登录之后才能正常请求的接口时，<strong>一定要加上</strong></p><p>cookie管理器，特殊情况下才需要修改</p><h3 id="缓存管理器"><a href="#缓存管理器" class="headerlink" title="缓存管理器"></a>缓存管理器</h3><p>大多数情况下不使用</p><h2 id="录制脚本"><a href="#录制脚本" class="headerlink" title="录制脚本"></a>录制脚本</h2><h3 id="badboy录制"><a href="#badboy录制" class="headerlink" title="badboy录制"></a>badboy录制</h3><ol><li>打开badboy，url地址输入访问的网址，进行相关操作</li><li>工具 file-&gt;export to jmeter</li><li>jmeter打开导出文件</li></ol><p>不推荐使用</p><ul><li>工具不再维护</li><li>这个工具，对应新的前端写法不兼容</li></ul><h3 id="http代理服务器"><a href="#http代理服务器" class="headerlink" title="http代理服务器"></a>http代理服务器</h3><ol><li>新建一个项目</li><li>「测试计划」下添加「线程组」</li><li>添加「非测试元件-&gt;http代理服务器」</li><li>目标控制器选择 「测试计划-&gt;线程组」</li><li>点击「启动」，出现一个证书弹窗，自动生成证书</li></ol><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd4zjykz2j30po0betba.jpg" alt="证书"></p><ol start="6"><li><p>打开计算机的代理设置或者配置浏览器代理</p></li><li><p>操作网页</p></li></ol><h4 id="配置浏览器代理"><a href="#配置浏览器代理" class="headerlink" title="配置浏览器代理"></a>配置浏览器代理</h4><p>使用「SwitchyOmega」</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd54scy8cj30bh064mxj.jpg" alt="浏览器代理"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd5b0tgmyj313k0gymz8.jpg" alt="添加情景模式"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpdr6rcg06j31h40u0q9f.jpg" alt="录制结果"></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>新建一个「用户参数」</p><p>点击「添加变量」，名称为<code>myuser</code>,用户_1为：<code>15168230666</code></p><p>变量引用:<code>${muser}</code></p><h2 id="函数助手"><a href="#函数助手" class="headerlink" title="函数助手"></a>函数助手</h2><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpdqu1anksj30x4035q40.jpg" alt="函数助手"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd5wl0wotj30o40gtacy.jpg" alt="函数助手"></p><p>修改我们的变量</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd5y0mpg8j313l04sjsc.jpg" alt="修改变量"></p><p>修改使用处</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd60r6k1ej313l0h6goi.jpg" alt="修改入参"></p><p>查看运行结果</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpd6087espj313l0h6gpe.jpg" alt="查看结果"></p><h3 id="用户定义变量与用户参数"><a href="#用户定义变量与用户参数" class="headerlink" title="用户定义变量与用户参数"></a>用户定义变量与用户参数</h3><ul><li>「用户定义变量」是全局变量，启动运行时，调用一次，在运行过程中不再调用</li><li>「用户参数」是局部变量，在启动时调用一次，在运行过程中，使用时也会再次调用</li></ul><p>全局变量，只要在作用域范围内，都可以使用</p><p>局部变量，在线程组之外，是不能被使用的</p><p>jmeter的线程组之间，不能直接传递参数（局部变量）。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;6-手写Jmeter与录制&quot;&gt;&lt;a href=&quot;#6-手写Jmeter与录制&quot; class=&quot;headerlink&quot; title=&quot;6-手写Jmeter与录制&quot;&gt;&lt;/a&gt;6-手写Jmeter与录制&lt;/h1&gt;&lt;h2 id=&quot;元件作用域&quot;&gt;&lt;a href=&quot;#元件作用域&quot; class=&quot;headerlink&quot; title=&quot;元件作用域&quot;&gt;&lt;/a&gt;元件作用域&lt;/h2&gt;&lt;h3 id=&quot;「取样器」&quot;&gt;&lt;a href=&quot;#「取样器」&quot; class=&quot;headerlink&quot; title=&quot;「取样器」&quot;&gt;&lt;/a&gt;「取样器」&lt;/h3&gt;&lt;p&gt;作用：只作用于自身&lt;/p&gt;
&lt;p&gt;作用域：无作用域&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>5-HTTP请求注意事项</title>
    <link href="http://zx490336534.github.io/article/3afe7420.html"/>
    <id>http://zx490336534.github.io/article/3afe7420.html</id>
    <published>2021-04-08T22:39:00.000Z</published>
    <updated>2021-04-22T14:34:11.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="5-HTTP请求注意事项"><a href="#5-HTTP请求注意事项" class="headerlink" title="5-HTTP请求注意事项"></a>5-HTTP请求注意事项</h1><h2 id="HTTP请求注意事项"><a href="#HTTP请求注意事项" class="headerlink" title="HTTP请求注意事项"></a>HTTP请求注意事项</h2><h3 id="Web服务器-协议"><a href="#Web服务器-协议" class="headerlink" title="Web服务器-协议"></a>Web服务器-协议</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpasx263h6j30tf0dataa.jpg" alt="协议"></p><p><code>http</code>可以写，可以不写</p><p><code>https</code>必须写</p><span id="more"></span><h3 id="Web服务器-服务器名称或IP"><a href="#Web服务器-服务器名称或IP" class="headerlink" title="Web服务器-服务器名称或IP"></a>Web服务器-服务器名称或IP</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpasz3addcj30tf0dataa.jpg" alt="服务器名称或IP"></p><p>只能写域名或者IP。不能有<code>/</code></p><h3 id="Web服务器-端口"><a href="#Web服务器-端口" class="headerlink" title="Web服务器-端口"></a>Web服务器-端口</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpaszs5l11j30tf0dataa.jpg" alt="端口"></p><p>不写默认为80端口</p><h3 id="HTTP请求-方法"><a href="#HTTP请求-方法" class="headerlink" title="HTTP请求-方法"></a>HTTP请求-方法</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpat3hk85uj30tf0dataa.jpg" alt="方法"></p><p>根据接口文档选择</p><blockquote><p>浏览器地址栏中，只能执行get方法，不能执行post方法</p></blockquote><h3 id="HTTP请求-路径"><a href="#HTTP请求-路径" class="headerlink" title="HTTP请求-路径"></a>HTTP请求-路径</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpat597w8sj30tf0dataa.jpg" alt="路径"></p><p>不要在这个地址中写<code>domain</code>和<code>端口</code>信息，只写路径信息</p><p>不要忘记开头的<code>/</code></p><p>前后的空格要删除。如果没有删除，请求的时候会多<code>%20</code></p><h3 id="HTTP请求-内容编码"><a href="#HTTP请求-内容编码" class="headerlink" title="HTTP请求-内容编码"></a>HTTP请求-内容编码</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpat7a5jouj30tf0dataa.jpg" alt="内容编码"></p><p>默认<code>utf-8</code></p><p>只对<strong>请求体</strong>进行编码，对<strong>响应体</strong>无效</p><p>http请求的四部分：</p><ul><li>请求行</li><li>请求头 request-header</li><li>空行</li><li>请求体 request-body</li></ul><p>http响应的四部分</p><ul><li>响应头</li><li>响应体 response-header</li><li>空行</li><li>响应体 response-body</li></ul><h4 id="当请求中出现乱码"><a href="#当请求中出现乱码" class="headerlink" title="当请求中出现乱码"></a>当请求中出现乱码</h4><ol><li>内容编码设置为utf-8</li><li>消息头<code>Content-Type:;charset=utf-8</code></li><li>参数格式中的<code>编码</code>复选框<ol><li>当参数为中文时一定要勾选编码</li><li>当参数为<code>+=</code>等特殊符号时「常见于密码被加密」一定要勾选编码</li></ol></li></ol><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpatdimb18j30tf0daq4a.jpg" alt="编码"></p><h4 id="当响应中出现乱码"><a href="#当响应中出现乱码" class="headerlink" title="当响应中出现乱码"></a>当响应中出现乱码</h4><blockquote><p>原因：jmeter的gui图形界面，默认的编码是操作系统的编码</p><p>国内Windows系统的编码是 936gbk</p></blockquote><p>解决办法</p><p>打开<code>/apache-jmeter-5.1.1/bin/jmeter.properties</code></p><p>找到</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># The encoding to be used if none is provided (default ISO-8859-1)</span><br><span class="line">#sampleresult.default.encoding=ISO-8859-1</span><br></pre></td></tr></tbody></table></figure><p>根据响应信息中的编码修改<code>sampleresult.default.encoding</code>值。修改后保存重启Jmeter</p><p>查看方法：</p><p>请求相应地址后查看<code>网页源代码</code>在头部找到「meta-content」</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"always"</span> <span class="attr">name</span>=<span class="string">"referrer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"theme-color"</span> <span class="attr">content</span>=<span class="string">"#2932e1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"/favicon.ico"</span> <span class="attr">type</span>=<span class="string">"image/x-icon"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">sizes</span>=<span class="string">"any"</span> <span class="attr">mask</span> <span class="attr">href</span>=<span class="string">"//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"search"</span> <span class="attr">type</span>=<span class="string">"application/opensearchdescription+xml"</span> <span class="attr">href</span>=<span class="string">"/content-search.xml"</span> <span class="attr">title</span>=<span class="string">"百度搜索"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>可以看出上面这段代码的编码为<code>utf-8</code></p><h3 id="HTTP请求-自动重定向"><a href="#HTTP请求-自动重定向" class="headerlink" title="HTTP请求-自动重定向"></a>HTTP请求-自动重定向</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpatx8rw59j30tf0dataa.jpg" alt="重定向"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpav09nqirj30xv0u0doc.jpg" alt="自动重定向"></p><p>都是重定向。HTTP响应码都是300系列</p><p>没有中间过程，无法进行中间数据提取</p><h3 id="HTTP请求-跟随重定向"><a href="#HTTP请求-跟随重定向" class="headerlink" title="HTTP请求-跟随重定向"></a>HTTP请求-跟随重定向</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpauz1yru4j30xr0u0dpl.jpg" alt="跟随重定向"></p><p>默认勾选</p><p>可以提取中间过程，用于后续关联</p><p>从图中可以看到，它将每次跳转都展示给了我们，可以展开查看每次跳转情况</p><h3 id="HTTP请求-使用KeepAlive"><a href="#HTTP请求-使用KeepAlive" class="headerlink" title="HTTP请求-使用KeepAlive"></a>HTTP请求-使用KeepAlive</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpatyd3k5xj30tf0dataa.jpg" alt="使用KeepAlive"></p><p>默认都是长连接</p><h3 id="HTTP请求-消息体数据"><a href="#HTTP请求-消息体数据" class="headerlink" title="HTTP请求-消息体数据"></a>HTTP请求-消息体数据</h3><p>参数-消息体数据是互斥的，写了之后无法写另一个</p><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><blockquote><p>优先级越高，越先执行</p></blockquote><p>配置元件中的所有元件，优先级是最高的</p><p>前置处理器-取样器-后置处理器 </p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gpauq2qwq7j309y06wgm6.jpg" alt="优先级"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;5-HTTP请求注意事项&quot;&gt;&lt;a href=&quot;#5-HTTP请求注意事项&quot; class=&quot;headerlink&quot; title=&quot;5-HTTP请求注意事项&quot;&gt;&lt;/a&gt;5-HTTP请求注意事项&lt;/h1&gt;&lt;h2 id=&quot;HTTP请求注意事项&quot;&gt;&lt;a href=&quot;#HTTP请求注意事项&quot; class=&quot;headerlink&quot; title=&quot;HTTP请求注意事项&quot;&gt;&lt;/a&gt;HTTP请求注意事项&lt;/h2&gt;&lt;h3 id=&quot;Web服务器-协议&quot;&gt;&lt;a href=&quot;#Web服务器-协议&quot; class=&quot;headerlink&quot; title=&quot;Web服务器-协议&quot;&gt;&lt;/a&gt;Web服务器-协议&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008eGmZEly1gpasx263h6j30tf0dataa.jpg&quot; alt=&quot;协议&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http&lt;/code&gt;可以写，可以不写&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https&lt;/code&gt;必须写&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>4-使用Jmeter编写第一个脚本</title>
    <link href="http://zx490336534.github.io/article/8aebc491.html"/>
    <id>http://zx490336534.github.io/article/8aebc491.html</id>
    <published>2021-04-01T23:39:00.000Z</published>
    <updated>2021-04-22T14:34:11.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-使用Jmeter编写第一个脚本"><a href="#4-使用Jmeter编写第一个脚本" class="headerlink" title="4-使用Jmeter编写第一个脚本"></a>4-使用Jmeter编写第一个脚本</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>java编写的开源、免费、接口、自动化、性能测试工具</p><p>它的运行环境：<code>jre</code> 我们必须安装jdk才能运行jmeter</p><h3 id="查看java版本"><a href="#查看java版本" class="headerlink" title="查看java版本"></a>查看java版本</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> java -version</span></span><br></pre></td></tr></tbody></table></figure><p>需要使用的jdk大版本是<code>1.8</code></p><p>官方只在1.8下进行开发和测试，其他jdk版本，可能存在兼容性问题</p><span id="more"></span><h3 id="jmeter版本"><a href="#jmeter版本" class="headerlink" title="jmeter版本"></a>jmeter版本</h3><p>使用的是<code>apache-jmeter-5.1.1</code></p><p>链接: <a href="https://pan.baidu.com/s/1DxiOyzo8VxFJGrFhJQKPaQ">https://pan.baidu.com/s/1DxiOyzo8VxFJGrFhJQKPaQ</a>  密码: fws3</p><h3 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h3><h4 id="临时切换中文"><a href="#临时切换中文" class="headerlink" title="临时切换中文"></a>临时切换中文</h4><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp39vg304rj30ka0bhdij.jpg" alt="临时切换中文"></p><h3 id="永久修改中文"><a href="#永久修改中文" class="headerlink" title="永久修改中文"></a>永久修改中文</h3><p>修改<code>jmeter.properties</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第37行</span><br><span class="line">language=en</span><br><span class="line">修改为</span><br><span class="line">language=zh_CN</span><br></pre></td></tr></tbody></table></figure><h2 id="使用Jmeter写脚本"><a href="#使用Jmeter写脚本" class="headerlink" title="使用Jmeter写脚本"></a>使用Jmeter写脚本</h2><h3 id="写脚本的依赖"><a href="#写脚本的依赖" class="headerlink" title="写脚本的依赖"></a>写脚本的依赖</h3><ul><li>接口文档</li><li>API文档</li><li>swagger：接口管理平台</li><li>抓包：F12，Fiddler，Charles，Wireshark，Tcpdump</li></ul><h3 id="Jmeter文件夹"><a href="#Jmeter文件夹" class="headerlink" title="Jmeter文件夹"></a>Jmeter文件夹</h3><h4 id="bin"><a href="#bin" class="headerlink" title="bin"></a>bin</h4><ul><li>启动jmeter的所有文件</li><li>properties结尾的文件，都是jmeter的属性配置文件，最主要的是<code>jmeter.properties</code></li><li>create-rmi-keystore：创建证书</li><li>jmeter.log：日志打印</li></ul><h4 id="docs"><a href="#docs" class="headerlink" title="docs"></a>docs</h4><p>开发人员使用的api文档</p><p>有java能力相对Jmeter进行二次开发的API文档</p><h4 id="extras"><a href="#extras" class="headerlink" title="extras"></a>extras</h4><p>持续集成CI/CD使用</p><h4 id="lib"><a href="#lib" class="headerlink" title="lib"></a>lib</h4><p>jmeter工具的源码二进制jar包</p><p><code>/ext</code>：使用第三方插件时，把第三方jar放到该目录</p><h4 id="printable-docs"><a href="#printable-docs" class="headerlink" title="printable_docs"></a>printable_docs</h4><p>jmeter工具，<code>离线</code>帮助文档</p><p>在线、离线文档的差异</p><ul><li><code>离线文档</code>：当前jmeter版本的帮助文档</li><li><code>在线文档</code>：永远都是最新版本的</li></ul><h3 id="jmeter-GUI"><a href="#jmeter-GUI" class="headerlink" title="jmeter-GUI"></a>jmeter-GUI</h3><h4 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h4><p>并不包含Jmeter的主要功能，只包含必要的辅助功能</p><h4 id="左侧结构树"><a href="#左侧结构树" class="headerlink" title="左侧结构树"></a>左侧结构树</h4><blockquote><p>元件：通过右键添加的 所有可选定的内容，都是元件</p></blockquote><p>测试计划TestPlan：脚本根目录</p><p>选中某个元件，从右键中，选择功能</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp50tghocgj30f708f75x.jpg" alt="脚本根目录"></p><h4 id="右侧的编辑区"><a href="#右侧的编辑区" class="headerlink" title="右侧的编辑区"></a>右侧的编辑区</h4><p>脚本编辑区，不同的元件，内容不一样</p><h4 id="元件"><a href="#元件" class="headerlink" title="元件"></a>元件</h4><ul><li>线程组</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp50zx7k4zj308401s74h.jpg" alt="线程组"></p><blockquote><p>性能测试中，进行性能场景设计，在功能测试时，一般不做任何修改</p></blockquote><p>线程组：普通性能场景设计用的线程组，也是用的最多的线程</p><p>setUp线程、teardown线程组：和线程组差别不大，一般用作环境准备与清理</p><ul><li>配置元件</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp510k6u4ej30b00bddhc.jpg" alt="配置元件"></p><blockquote><p>请求内容的头</p></blockquote><p>最大的特点：优先级<code>最高</code></p><p>重点关注：用户定义变量</p><ul><li>监听器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp5122y6l8j308c0ahgmw.jpg" alt="监听器"></p><blockquote><p>结果监听与处理</p></blockquote><ul><li>定时器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp512lhflcj308m07ijsb.jpg" alt="定时器"></p><blockquote><p>集合点，狭义并发</p></blockquote><p>现在 性能测试一般不再使用</p><p>设置<code>思考时间</code></p><ul><li>前置处理器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp514kdn3oj309007vq3x.jpg" alt="前置处理器"></p><p>重点关注：用户参数</p><ul><li>后置处理器</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp5172muh8j309j09x75k.jpg" alt="后置处理器"></p><p>response结果提取</p><ul><li>断言</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp517ls6ubj308e0blmyb.jpg" alt="断言"></p><p>测试结果与预期结果进行比较</p><ul><li>测试片段</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp519b7l8mj308e06cdgg.jpg" alt="测试片段"></p><p>管理测试用例</p><ul><li>非测试元件</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp519vphyyj308707iaat.jpg" alt="非测试元件"></p><p>设置代理服务器等环境</p><h3 id="编写http脚本"><a href="#编写http脚本" class="headerlink" title="编写http脚本"></a>编写http脚本</h3><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51j2hez0j30nx0jutb1.jpg" alt="注册接口"></p><ol><li>添加线程组</li><li>添加取样器：HTTP请求</li></ol><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51e3mwacj30f60cpad5.jpg" alt="取样器"></p><ol start="3"><li>添加HTTP信息头管理器</li></ol><p>从文档中:请求头：Content-Type：application/json;charset=utf-8 </p><p>点击<code>添加</code>按钮后输入它的请求头</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51l0coz6j30xr0u00yl.jpg" alt="添加HTTP信息头管理器"></p><ol start="4"><li>编辑HTTP请求</li></ol><p>输入协议<code>HTTP</code></p><p>IP:<code>192.168.9.2</code></p><p>端口号:<code>8080</code></p><p>方法:<code>POST</code></p><p>路径:<code>/app/mobile/api/user/register</code></p><p>消息体数据</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"mobile"</span>: <span class="string">"15800000001"</span>,</span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"123456"</span>,</span><br><span class="line">    <span class="attr">"code"</span>: <span class="string">"3367"</span>,</span><br><span class="line">    <span class="attr">"platform"</span>: <span class="string">"w indows"</span>,</span><br><span class="line">    <span class="attr">"username"</span>: <span class="string">"test11"</span>,</span><br><span class="line">    <span class="attr">"sex"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"age"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"email"</span>: <span class="string">"158000000011@test. com"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51n40bg5j30xr0u0q9u.jpg" alt="编辑HTTP请求"></p><ol start="5"><li>添加 监听器-查看结果树</li><li>运行</li></ol><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51s1x2o3j30na04wjsg.jpg" alt="运行"></p><p>运行的时候它会提示让你先保存</p><ol start="7"><li>查看结果</li></ol><ul><li>绿色：仅代表网络是通的</li><li>红色：代表失败，但是具体是什么原因失败，要去分析</li></ul><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gp51wkzqhtj30xr0u0dnj.jpg" alt="查看结果"></p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>1、请求体为json时，一定要加上消息头管理器</p><p>2、请求体，写在消息体数据中，是json格式</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;4-使用Jmeter编写第一个脚本&quot;&gt;&lt;a href=&quot;#4-使用Jmeter编写第一个脚本&quot; class=&quot;headerlink&quot; title=&quot;4-使用Jmeter编写第一个脚本&quot;&gt;&lt;/a&gt;4-使用Jmeter编写第一个脚本&lt;/h1&gt;&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;java编写的开源、免费、接口、自动化、性能测试工具&lt;/p&gt;
&lt;p&gt;它的运行环境：&lt;code&gt;jre&lt;/code&gt; 我们必须安装jdk才能运行jmeter&lt;/p&gt;
&lt;h3 id=&quot;查看java版本&quot;&gt;&lt;a href=&quot;#查看java版本&quot; class=&quot;headerlink&quot; title=&quot;查看java版本&quot;&gt;&lt;/a&gt;查看java版本&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; java -version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要使用的jdk大版本是&lt;code&gt;1.8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;官方只在1.8下进行开发和测试，其他jdk版本，可能存在兼容性问题&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>3-性能测试知识面</title>
    <link href="http://zx490336534.github.io/article/bd78ee6b.html"/>
    <id>http://zx490336534.github.io/article/bd78ee6b.html</id>
    <published>2021-03-28T00:45:00.000Z</published>
    <updated>2021-04-22T14:34:11.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-性能测试知识面"><a href="#3-性能测试知识面" class="headerlink" title="3-性能测试知识面"></a>3-性能测试知识面</h1><h2 id="脚本开发相关"><a href="#脚本开发相关" class="headerlink" title="脚本开发相关"></a>脚本开发相关</h2><blockquote><p>根据不同协议，选择不同工具</p></blockquote><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><ul><li><p>http</p></li><li><p>jdbc</p></li><li><p>soap</p></li><li><p>websocket</p></li><li><p>dubbo</p></li><li><p>MQ</p><span id="more"></span><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3></li><li><p> Jmeter「线程」</p></li><li><p>loadrunner「进程、线程（默认）」</p></li><li><p>wrk</p></li><li><p>ab</p></li><li><p>ngrinder「jpython、groovy」</p></li><li><p>locust「协程」</p></li></ul><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>Jmeter支持的语言：</p><ul><li>java</li><li>python</li><li>jython</li><li>groovy</li><li>javascript</li></ul><h2 id="性能知识面"><a href="#性能知识面" class="headerlink" title="性能知识面"></a>性能知识面</h2><h3 id="Vmware"><a href="#Vmware" class="headerlink" title="Vmware"></a>Vmware</h3><p>虚拟机管理软件，允许一台真实的电脑在一个操作系统中同时打开并运行多个不同的操作系统</p><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><p>偷工减料版操作系统「namespace」「vfs」「cgroup」</p><p>是一个简化版的操作系统，提供我们项目运行的基本依赖</p><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个 可移植的容器中,然后发布到任何流行的 Linux 机器或 Windows 机器上,也可以实现虚拟化, 容器是完全使用沙箱机制,相互之间不会有任何接口。</p><p>Docker 使用客户端-服务器 (C/S) 架构模式，使用远程 API 来管理和创建 Docker 容器。 Docker 容器通过 Docker 镜像来创建。</p><p>docker 是基于 LXC 的轻量及虚拟化，相比 KVM 启动更快，占用资源更少。 LXC:Linux Container 容器是一种操作系统层虚拟化技术，可以提供轻量级的虚拟化，以 便隔离进程和资源.</p><p>KVM:是 Kernel-based Virtual Machine 基于内核的虚拟机,是一种用于 Linux 内核中的虚拟 化基础设施，可将 Linux 内核转化为一个虚拟机监视器。 Docker 并不是全能的,也不是 KVM 之类虚拟化手段的替代品.Docker 是基于 Linux 64bit 的，无法在 32bit 的 linux/Windows/unix 环境下使用。 Docker 在本质上是一个附加系统。 Docker 有两种文件格式，Dockerfile 和 Compose file。Dockerfile 定义了单个容器的内容 和启动时候的行为。Compose file 定义了一个多容器应用。 Docker 可以按照 Dockerfile 的内容，构建镜像。 Compose file 是一个 YAML 文件，定义了服务（service）、网络、卷（volume）</p><h3 id="K8s"><a href="#K8s" class="headerlink" title="K8s"></a>K8s</h3><p>K8s 是 kubernetes 的简写。是一个开源的，用于管理云平台中多个主机上的容器化的应 用，Kubernetes 的目标是让部署容器化的应用简单并且高效（powerful）,Kubernetes 提供了 应用部署，规划，更新，维护的一种机制。Kubernetes 是 Google 开源的一个容器编排引擎， 它支持自动化部署、大规模可伸缩、应用容器化管理。</p><p><a href="https://www.kubernetes.org.cn/k8s">https://www.kubernetes.org.cn/k8s</a></p><h3 id="Linux基本技能"><a href="#Linux基本技能" class="headerlink" title="Linux基本技能"></a>Linux基本技能</h3><blockquote><p><strong>鸟哥的 Linux 私房菜</strong>:<a href="https://www.showapi.com/book/view/2089/0">https://www.showapi.com/book/view/2089/0</a></p></blockquote><h3 id="CPU工作原理"><a href="#CPU工作原理" class="headerlink" title="CPU工作原理"></a>CPU工作原理</h3><p>CPU， 中央处理器。影响 cpu 性能的主要因素分两大块：主频、架构； </p><p>CPU 的结构主要由运算器、控制器、寄存器三大块组成 控制单元：是整个 cpu 的指挥控制中心，由指令寄存器 IR(Instruction Register)、指 令译码器 ID(Instruction Decoder)和操作控制器 OC(Operation Controller)等 </p><p>运算单元：是运算器的核心，执行运算操作</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gozb7w4n9fj30jn0cgtbo.jpg" alt="CPU"></p><p><a href="https://baijiahao.baidu.com/s?id=1619812694399963397&amp;wfr=spider&amp;for=pc">CPU科普文：5分钟让你看懂CPU的结构和工作原理</a></p><p><a href="http://blog.chinaunix.net/uid-23069658-id-3563960.html">CPU的内部架构和工作原理</a></p><h3 id="内存知识"><a href="#内存知识" class="headerlink" title="内存知识"></a>内存知识</h3><p>内存 memory，是 cpu 与其他设备沟通的桥梁，主要用来临时存放数据，配合 cpu 工作， 协调 cpu 的处理速度。</p><p><a href="https://blog.csdn.net/qq_39312683/article/details/96026884">内存的基础知识</a></p><h3 id="JVM知识"><a href="#JVM知识" class="headerlink" title="JVM知识"></a>JVM知识</h3><p>JVM 是 Java Virtual Machine（Java 虚拟机）的缩写，JVM 是一种用于计算设备的规 范，它是一个虚构出来的能够运行 Java bytecode 的虚拟计算机，是通过在实际的计算 机上仿真模拟各种计算机功能来实现的。</p><p>Java 虚拟机有自己完善的硬体架构（如处理器、堆栈、寄存器等），还具有相应的指令系统。</p><p>Java 虚拟机本质上就是一个程序，当它在命令行上启动的时候，就开始执行保存在 文件中的字节码指令。Java 语言的可移植性正是建立在 Java 虚拟机的基础上。任何平 台只要装有针对于该平台的 Java 虚拟机，字节码文件（.class）就可以在该平台上运行。 Java 虚拟机主要分为五大模块：类装载器子系统、运行时数据区、执行引擎、本地方法接口和垃圾收集模块。</p><p>Java 虚拟机没有寄存器，所以指令集是使用 Java 栈来存储中间数据。 对于 Java 运行时涉及到的存储区域主要包括：程序计数器、Java 虚拟机栈(调用栈)、本地方法栈、java堆、方法区以及直接内存等等。 程序计数器：主要是取下一条指令，在 Java 里面主要是取下一条指令的字节码文件；</p><p>Java 虚拟机栈：主要是利用栈先进后出的特性存储局部变量表，动态链接等，主要 包括堆内存和栈内存，对于程序员内存分析而言是特别重要的。 本地方法栈：与上边的栈基本作用差不多，只不过这里是为 Java 方法而服务。 Java 堆：是内存管理中最大的一块，所有的线程共享这一块内容，同时该部分也是 垃圾收集器的主要区域。 Java 虚拟机的垃圾回收，动态分配和回收。 内存回收首先就是判断某一个部分是生存还是死亡，具体的算法常见的有二种：</p><p><a href="https://baijiahao.baidu.com/s?id=1651319476120132392&amp;wfr=spider&amp;for=pc">gc原理以及gc日志剖析</a></p><p><a href="https://www.jianshu.com/p/2f4a8e04c657">GC垃圾回收机制详解</a></p><h3 id="Apache基础知识"><a href="#Apache基础知识" class="headerlink" title="Apache基础知识"></a>Apache基础知识</h3><p>Apache HTTP Server（简称 Apache）是 Apache 软件基金会的一个开放源码的网页服务器 软件，可以在大多数电脑操作系统中运行。由于其跨平台和安全性，被广泛使用，是最流行 的 Web 服务器软件之一。它可以运行在几乎所有广泛使用的计算机平台上。 </p><p>LAMP 是 一 组 通 常 一 起 使 用 来 运 行 动 态 网 站 的 自 由 软 件 的 首 字 母 缩 写 ： Linux+Apache+Mysql(MariaDB)+PHP</p><p>官网：<a href="https://httpd.apache.org/">https://httpd.apache.org/</a></p><p>文档：<a href="https://httpd.apache.org/docs/2.4/">https://httpd.apache.org/docs/2.4/</a></p><p>Ubuntu 系统中 apache 安装指南： <a href="https://wiki.ubuntu.org.cn/Apache">https://wiki.ubuntu.org.cn/Apache</a></p><p>Centos 系统中搭建 apache 环境：</p><p><a href="https://blog.csdn.net/weixin_42199590/article/details/94410946">https://blog.csdn.net/weixin_42199590/article/details/94410946</a></p><p><a href="https://www.cnblogs.com/xiangqs/p/8663947.html">https://www.cnblogs.com/xiangqs/p/8663947.html</a></p><h3 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h3><p>一个轻量级的 web 应用服务区，使用于并发性不是很高的系统中。 Tomcat 中最顶层</p><p>的是 server， 代表整个服务器，一个 server 可以包含至少一个 service， 每个 service 可以包 含多个 connector 和一个 container。Connector 用于处理连接相关的事情，并提供 Socket 与 Request 和 Response 相关的转化;Container 用于封装和管理 Servlet， 以及具体处理 Request 请求；多个 connector 就可以配置多种类型连接，如 http\https。</p><p>Tomcat 的 conf 目录中的 server.xml 是其最重要的配置文件</p><h3 id="Dubbo-zookeeper"><a href="#Dubbo-zookeeper" class="headerlink" title="Dubbo + zookeeper"></a>Dubbo + zookeeper</h3><p>Dubbo 是一款高性能、轻量级的开源 java RPC 框架，它提供了三大核心能力：面 向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。</p><p><a href="http://dubbo.apache.org/zh-cn/">http://dubbo.apache.org/zh-cn/</a></p><p>Dubbo 缺省协议采用单一长连接和 NIO 异步通讯，适合小数量大并发的服务调用，以 及服务消费者机器数远大于服务提供者机器数的情况。</p><p>Dubbo 接口，手工测试时，可以使用 telnet 方式： <a href="http://dubbo.apache.org/zh-cn/docs/user/references/telnet.html">http://dubbo.apache.org/zh-cn/docs/user/references/telnet.html</a> </p><p>Zookeeper 注册中心：zookeeper 是一个树型的目录服务，支持变更推送，适合作为 dubbo 服务的注册中心，工业强度高，可用于生产环境，并推荐使用。</p><p> 参考学习材料：<a href="http://dubbo.apache.org/zh-cn/docs/user/quick-start.html">http://dubbo.apache.org/zh-cn/docs/user/quick-start.html</a></p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>Nginx (engine x) 是一个采用 C 进行编写的高性能的 HTTP 和反向代理 web 服务器 其特点是占有内存少，并发能力强</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gozbmom73yj30ok0bfgs7.jpg" alt="Nginx"></p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gozbna4aouj30nd0bb7ac.jpg" alt="Nginx2"></p><p>Nginx 配置详解： <a href="https://www.runoob.com/w3cnote/nginx-setup-intro.html">https://www.runoob.com/w3cnote/nginx-setup-intro.html</a></p><p>Nginx 服务器安装及配置文件详解： <a href="https://www.runoob.com/w3cnote/nginx-install-and-config.html">https://www.runoob.com/w3cnote/nginx-install-and-config.html</a></p><p>Linux 下 Nginx+Tomcat 负载均衡和动静分离配置要点 <a href="https://www.runoob.com/w3cnote/linux-nginx-tomcat.html">https://www.runoob.com/w3cnote/linux-nginx-tomcat.html</a></p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>负载均衡（Load balancing）是一种计算机技术，用来在多个计算机（计算机集群）、 网络连接、CPU、磁盘驱动器或其他资源中分配负载，以达到最优化资源使用、最大化吞吐 率、最小化响应时间、同时避免过载的目的。 使用带有负载均衡的多个服务器组件，取代 单一的组件，可以通过冗余提高可靠性。负载均衡服务通常是由专用软件和硬件来完成。 主 要作用是将大量作业合理地分摊到多个操作单元上进行执行，用于解决互联网架构中的高并 发和高可用的问题。</p><p>负载均衡有软件和硬件负载均衡，硬件负载均衡 F5、软件负载均衡 nginx、阿里的 SLB。</p><p>负载均衡算法：主要分为静态和动态两类。静态负载均衡算法以固定的概率分配任务， 不考虑服务器的状态信息，如轮转算法、加权轮转算法等；动态负载均衡算法以服务器的实 时负载状态信息来决定任务的分配，如最小连接法、加权最小连接法等。</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gozbo3yoi2j30nq0h6tet.jpg" alt="负载均衡"></p><p>参考学习材料：</p><p> <a href="https://www.sohu.com/a/277818965_411876">https://www.sohu.com/a/277818965_411876</a></p><p><a href="https://blog.csdn.net/bpb_cx/article/details/82771168">https://blog.csdn.net/bpb_cx/article/details/82771168</a></p><h3 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h3><p>计算机集群（computer cluster）简称集群，是一种计算机系统， 它通过一组松散集成 的计算机软件或硬件连接起来高度紧密地协作完成计算工作。在某种意义上，他们可以被看 作是一台计算机。</p><p>负载均衡集群运行时一般通过一个或者多个前端负载均衡器将工作负载分发到后端的 一组服务器上，从而达到整个系统的高性能和高可用性。</p><p>参考学习资料：</p><p><a href="https://blog.csdn.net/qq_16116549/article/details/88551090">https://blog.csdn.net/qq_16116549/article/details/88551090</a></p><h3 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h3><p>关系数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来 处理数据库中的数据。现实世界中的各种实体以及实体之间的各种联系均用关系模型来表 示。标准数据查询语言 SQL 就是一种基于关系数据库，这种语言执行对关系数据库中数据的 检索和操作。</p><p>关系模型由关系数据结构、关系操作集合、关系完整性约束三部分组成。 关系型数据库是由多张能互相联接的二维行列表格组成的数据库 主流的关系型数据库有 Oracle、DB2、Microsoft SQL Server、Microsoft Access、MySQL、 postgresql、 mariaDB、sqlite 等</p><p>参考学习资料： <a href="https://www.php.cn/sql/421899.html">https://www.php.cn/sql/421899.html</a></p><h3 id="Mysql数据库"><a href="#Mysql数据库" class="headerlink" title="Mysql数据库"></a>Mysql数据库</h3><p>MySQL 是一种开源的关系型数据库管理系统，关系数据库将数据保存在不同的表中， 而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。 MySQL 支持大型的数据库。可以处理拥有上千万条记录的大型数据库。 MySQL 使用标准的 SQL 数据语言形式。 MySQL 可以运行于多个系统上，并且支持多种语言。</p><p>推荐学习地址：</p><p> <a href="https://www.showapi.com/book/view/2147/0">https://www.showapi.com/book/view/2147/0</a></p><p><a href="https://www.runoob.com/mysql/mysql-install.html">https://www.runoob.com/mysql/mysql-install.html</a></p><h3 id="Postgresql-数据库知识"><a href="#Postgresql-数据库知识" class="headerlink" title="Postgresql 数据库知识"></a>Postgresql 数据库知识</h3><p>PostgreSQL 是一个功能非常强大的、源代码开放的客户/服务器关系型数据库 管理系统。 </p><p>参考学习资料：</p><p><a href="https://www.runoob.com/postgresql/postgresql-tutorial.html">https://www.runoob.com/postgresql/postgresql-tutorial.html</a></p><p><a href="http://www.postgres.cn/v2/document">http://www.postgres.cn/v2/document</a></p><h3 id="非关系型数据库"><a href="#非关系型数据库" class="headerlink" title="非关系型数据库"></a>非关系型数据库</h3><p>NoSQL(Not Only SQL)， 泛指非关系型的数据库。 NoSQL 数据库的产生就是为了解决大规 模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。</p><p> NoSQL 有如下优点：易扩展， NoSQL 数据库种类繁多，但是一个共同的特点都是去掉关 系数据库的关系型特性。数据之间无关系，这样就非常容易扩展。无形之间也在架构的层面上带来了可扩展的能力。大数据量，高性能， NoSQL 数据库都具有非常高的读写性能，尤其 在大数据量下，同样表现优秀。这得益于它的无关系性，数据库的结构简单。 </p><p>分类：</p><ul><li><p>键值(Key-Value)存储数据库，这一类数据库主要会使用到一个哈希表，这个表中 有一个特定的键和一个指针指向特定的数据。典型代表：Redis </p></li><li><p>列存储数据库：这部分数据库通常是用来应对分布式存储的海量数据，键仍然存在， 但是它们的特点是指向了多个列。这些列是由列家族来安排的。典型代表：HBase </p></li><li><p>文档型数据库：该类型的数据模型是版本化的文档，半结构化的文档以特定的格式 存储。典型代表：MongoDb、SequoiaDB </p></li><li><p>图形(Graph)数据库：它是使用灵活的图形模型，并且能够扩展到多个服务器上</p></li></ul><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><p>Redis 是一个高性能的 key-value 数据库， redis 支持各种不同方式的排序。与 memcached 一样，为了保证效率，数据都是缓存在内存中，使用内存存储。区别的是 redis 会周期性的 把更新的数据写入磁盘或者把修改操作写入追加的记录文件， 并且在此基础上实现了 master-slave(主从)同步。</p><p>Redis 支持主从同步。数据可以从主服务器向任意数量的从服务器上同步，从服务器可 以是关联其他从服务器的主服务器。这使得 Redis 可执行单层树复制</p><p>推荐学习地址：</p><p><a href="https://www.runoob.com/redis/redis-tutorial.html">https://www.runoob.com/redis/redis-tutorial.html</a></p><p>Redis 设计与实现：<a href="https://www.showapi.com/book/view/2054/0">https://www.showapi.com/book/view/2054/0</a></p><h3 id="Memcache"><a href="#Memcache" class="headerlink" title="Memcache"></a>Memcache</h3><p>memcache 是一套分布式的高速缓存系统，将数据调用到内存中，然后从内存中读取， 从而大大提高读取速度。 </p><p>最 大 30 天 的 数 据 过 期 时 间 , 设 置 为 永 久 的 也 会 在 这 个 时 间 过 期 ， </p><p>常 量 REALTIME_MAXDELTA 最大键长为 250 字节，大于该长度无法存储，</p><p>常量 KEY_MAX_LENGTH 单个 item 最大数据是 1MB， 超过 1MB 数据不予存储，</p><p>常量 POWER_BLOCK 最大同时连接数是 200， 通过 conn_init()中的 freetotal 进行控制，最大软连接数是 1024， 通过 settings.maxconns=1024 进行控制</p><p>参考学习资料：</p><p><a href="https://www.runoob.com/memcached/memcached-tutorial.html">https://www.runoob.com/memcached/memcached-tutorial.html</a></p><h3 id="Mongodb"><a href="#Mongodb" class="headerlink" title="Mongodb"></a>Mongodb</h3><p>MongoDB 是一个基于分布式文件存储的数据库，介于关系数据库和非关系数据库之间 的产品。是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散， 是类似 json 的 bson 格式，因此可以存储比较复杂的数据类型。 Mongo 最大的特点是它支持 的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据 库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p>参考学习材料：<a href="https://www.runoob.com/mongodb/mongodb-tutorial.html">https://www.runoob.com/mongodb/mongodb-tutorial.html</a></p><h3 id="时序型数据库"><a href="#时序型数据库" class="headerlink" title="时序型数据库"></a>时序型数据库</h3><p>时序数据库全称为时间序列数据库。时间序列数据库主要用于指处理带时间标签 （按照时间的顺序变化，即时间序列化）的数据，带时间标签的数据也称为时间序列数 据。时序大数据解决方案通过使用特殊的存储方式，使得时序大数据可以高效存储和快 速处理海量时序大数据，是解决海量数据处理的一项重要技术。该技术采用特殊数据存 储方式，极大提高了时间相关数据的处理能力，相对于关系型数据库它的存储空间减半， 查询速度极大的提高。</p><p>典型代表“influxdb、prometheus”</p><h3 id="Influxdb"><a href="#Influxdb" class="headerlink" title="Influxdb"></a>Influxdb</h3><p>InfluxDB 是一个由 InfluxData 开发的开源时序型数据库。它由 Go 写成，着力于高性能地 查询与存储时序型数据。InfluxDB 被广泛应用于存储系统的监控数据。 InfluxDB 存储的数据从逻辑上由 Measurement, tag 组以及 field 组以及一个时间戳组成的</p><ul><li>Measurement： 由一个字符串表示该条记录对应的含义 </li><li>tag 组： 由一组键值对组成，表示的是该条记录的一系列属性信息 </li><li>field 组：也是由一组键值对组成，表示的是该条记录具体的 value 信息(有名称) </li><li>时间戳：就是该条记录的时间属性</li></ul><p>参考学习资料： <a href="https://www.cntofu.com/book/118/readme.html">https://www.cntofu.com/book/118/readme.html</a></p><h3 id="Prometheus-基础知识"><a href="#Prometheus-基础知识" class="headerlink" title="Prometheus 基础知识"></a>Prometheus 基础知识</h3><p> Prometheus 它是由谷歌研发的一款开源的监控软件，目前已经被云计算本地基金会托管。</p><p>一个多维数据模型，其中包含通过度量标准名称和键/值对标识的时间序列数据 PromQL，一种灵活的查询语言 ，可利用此维度 不依赖分布式存储；单服务器节点是自治的 时间序列收集通过 HTTP 上的拉模型进行 通过中间网关支持推送时间序列 通过服务发现或静态配置发现目标 多种图形和仪表板支持模式 易于管理、轻易获取服务内部状态、高效灵活的查询语句、支持本地和远程存储、采用 http 协议，默认 pull 模式拉取数据，也可以通过中间网关 push 数据、支持自动发现、可扩 展、易集成</p><p>参考学习资料：</p><p><a href="https://prometheus.io/docs/introduction/overview/">https://prometheus.io/docs/introduction/overview/</a> </p><p><a href="https://www.cnblogs.com/fatyao/p/11007357.html">https://www.cnblogs.com/fatyao/p/11007357.html</a></p><p><a href="https://www.cnblogs.com/zqj-blog/p/10871033.html">https://www.cnblogs.com/zqj-blog/p/10871033.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;3-性能测试知识面&quot;&gt;&lt;a href=&quot;#3-性能测试知识面&quot; class=&quot;headerlink&quot; title=&quot;3-性能测试知识面&quot;&gt;&lt;/a&gt;3-性能测试知识面&lt;/h1&gt;&lt;h2 id=&quot;脚本开发相关&quot;&gt;&lt;a href=&quot;#脚本开发相关&quot; class=&quot;headerlink&quot; title=&quot;脚本开发相关&quot;&gt;&lt;/a&gt;脚本开发相关&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;根据不同协议，选择不同工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;协议&quot;&gt;&lt;a href=&quot;#协议&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;http&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;jdbc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;soap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;websocket&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dubbo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MQ&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>2-性能测试知识面</title>
    <link href="http://zx490336534.github.io/article/260b04bf.html"/>
    <id>http://zx490336534.github.io/article/260b04bf.html</id>
    <published>2021-03-25T23:48:00.000Z</published>
    <updated>2021-04-22T14:34:11.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-性能测试知识面"><a href="#2-性能测试知识面" class="headerlink" title="2-性能测试知识面"></a>2-性能测试知识面</h1><h2 id="性能测试指标"><a href="#性能测试指标" class="headerlink" title="性能测试指标"></a>性能测试指标</h2><h3 id="响应时间RT（重要指标）"><a href="#响应时间RT（重要指标）" class="headerlink" title="响应时间RT（重要指标）"></a>响应时间RT（重要指标）</h3><blockquote><p>RT是一个非常重要的性能指标</p></blockquote><p>从发起请求的时间点，经过网络传输时间+服务器处理的时间+通过网络传输返回的时间</p><p>我们做性能测试时，尽可能的降低网络延迟时间，这样RT时间才会无限的接近我们的服务器处理时间</p><ul><li>带宽加宽</li><li>局域网</li><li>在性能测试中，不要使用无线网络（排除专门的无线网络测试）</li></ul><p>使用有线网络时要注意</p><ul><li>网络传输的带宽</li><li>降低网络传输的节点与距离（不能使用跳板机）</li><li>独立网络环境<span id="more"></span><h3 id="TPS-QPS（最主要指标）"><a href="#TPS-QPS（最主要指标）" class="headerlink" title="TPS/QPS（最主要指标）"></a>TPS/QPS（最主要指标）</h3></li></ul><h4 id="TPS-Transactions-per-Second"><a href="#TPS-Transactions-per-Second" class="headerlink" title="TPS(Transactions per Second)"></a>TPS(Transactions per Second)</h4><p><strong>服务器</strong>每秒处理事务数，衡量服务器处理能力的最主要指标</p><h4 id="QPS-Queries-per-Second"><a href="#QPS-Queries-per-Second" class="headerlink" title="QPS(Queries per Second)"></a>QPS(Queries per Second)</h4><p>每秒查询率</p><h4 id="差异"><a href="#差异" class="headerlink" title="差异"></a>差异</h4><p>一个TPS可能有多个QPS</p><h4 id="HPS-Hit-per-Second"><a href="#HPS-Hit-per-Second" class="headerlink" title="HPS(Hit per Second)"></a>HPS(Hit per Second)</h4><p>每秒点击数（用户端）</p><h4 id="RPS-request-per-Second"><a href="#RPS-request-per-Second" class="headerlink" title="RPS(request per Second)"></a>RPS(request per Second)</h4><p>每秒请求数</p><h4 id="衡量主体角度"><a href="#衡量主体角度" class="headerlink" title="衡量主体角度"></a>衡量主体角度</h4><p>TPS：服务器处理能力。响应时间小、tps可以增大</p><p>QPS：并发用户发起的查询 接口查询多+人多，qps可以增大</p><p>RPS：并发用户发起请求 人多，rps可以增大</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><blockquote><p>是衡量<strong>网络</strong>处理能力的</p></blockquote><p>单位时间内处理的请求数量（事务/s）</p><p>在没有网络影响时，吞吐量=TPS</p><h3 id="吞吐率"><a href="#吞吐率" class="headerlink" title="吞吐率"></a>吞吐率</h3><blockquote><p>网络传输速率</p></blockquote><p>单位时间通过的数据的平均速率（kB/s）</p><h3 id="点击率"><a href="#点击率" class="headerlink" title="点击率"></a>点击率</h3><p>每秒点击数</p><h3 id="资源利用率"><a href="#资源利用率" class="headerlink" title="资源利用率"></a>资源利用率</h3><p>服务器资源的使用率</p><ul><li>cpu利用率</li><li>内存利用率</li><li>磁盘I/O</li><li>网络带宽利用率</li><li>一般都不要超过80%</li></ul><h2 id="性能测试环境"><a href="#性能测试环境" class="headerlink" title="性能测试环境"></a>性能测试环境</h2><p>性能测试是要自己独立搭建性能环境，网络环境</p><ul><li>绝对不能用生产环境</li><li>不能用功能测试、自动化环境</li><li>这个性能环境，包括应用服务器和数据库服务器</li></ul><h3 id="性能环境硬件资源怎么确定"><a href="#性能环境硬件资源怎么确定" class="headerlink" title="性能环境硬件资源怎么确定"></a>性能环境硬件资源怎么确定</h3><ol><li><p>数量要和生产环境的数量一致吗？</p><p>不用和生产一样那么多服务器的数量，通过逐步增加服务器数量来评估大致的性能瓶颈</p><p>比如生产环境有8台服务器，性能测试从2台开始，增加到3台。可以大致评估增加数量提升的性能指标</p></li><li><p>每一台的硬件配置要和生产环境一致吗？</p><p>要和生产环境的配置一致</p><p>如果性能测试环境的硬件配置不如生产环境的硬件配置，性能测试结果得到的性能指标值，只能说 是否存在性能瓶颈，不能作为生产性能指标低的参考</p></li></ol><h2 id="性能测试流程"><a href="#性能测试流程" class="headerlink" title="性能测试流程"></a>性能测试流程</h2><p>性能测试准备=&gt;搭建性能测试环境-&gt;性能测试脚本开发-&gt;性能测试脚本执行-&gt;结果分析与调优-&gt;测试报告与结果跟踪</p><h3 id="性能测试准备"><a href="#性能测试准备" class="headerlink" title="性能测试准备"></a>性能测试准备</h3><ol><li>理解需求、测试计划、测试模型、工作量评估</li><li>了解架构(数据流)</li><li>要明确需求的性能指标</li></ol><p>例如500w访问量的并发</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照每天8小时有人访问</span></span><br><span class="line">500w/<span class="number">8</span>/<span class="number">3600</span>=<span class="number">174</span></span><br><span class="line"><span class="comment"># 按照二八原则</span></span><br><span class="line">500w*<span class="number">0.8</span>/（<span class="number">24</span>*<span class="number">0.2</span>*<span class="number">3600</span>)=<span class="number">232</span></span><br><span class="line"><span class="comment"># 一般需要1.2~1.5倍的TPS</span></span><br><span class="line"><span class="number">232</span>*（<span class="number">1.2</span>~<span class="number">1.5</span>) = <span class="number">278</span>~<span class="number">348</span> </span><br></pre></td></tr></tbody></table></figure><h3 id="性能测试脚本开发"><a href="#性能测试脚本开发" class="headerlink" title="性能测试脚本开发"></a>性能测试脚本开发</h3><ul><li>选取协议</li><li>制作脚本</li><li>调试脚本</li><li>验证脚本</li></ul><p>先对接测试环境，开发调试脚本完成，再对接性能环境</p><h3 id="性能执行"><a href="#性能执行" class="headerlink" title="性能执行"></a>性能执行</h3><ul><li>试运行</li><li>场景执行</li></ul><h3 id="性能测试结果分析与调优"><a href="#性能测试结果分析与调优" class="headerlink" title="性能测试结果分析与调优"></a>性能测试结果分析与调优</h3><ul><li>分析思路：服务器硬件&gt;网络&gt;操作系统软件层的配置&gt;应用的瓶颈</li></ul><h3 id="性能测试报告与结果跟踪"><a href="#性能测试报告与结果跟踪" class="headerlink" title="性能测试报告与结果跟踪"></a>性能测试报告与结果跟踪</h3><ul><li>性能测试报告</li><li>性能测试问题跟踪</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;2-性能测试知识面&quot;&gt;&lt;a href=&quot;#2-性能测试知识面&quot; class=&quot;headerlink&quot; title=&quot;2-性能测试知识面&quot;&gt;&lt;/a&gt;2-性能测试知识面&lt;/h1&gt;&lt;h2 id=&quot;性能测试指标&quot;&gt;&lt;a href=&quot;#性能测试指标&quot; class=&quot;headerlink&quot; title=&quot;性能测试指标&quot;&gt;&lt;/a&gt;性能测试指标&lt;/h2&gt;&lt;h3 id=&quot;响应时间RT（重要指标）&quot;&gt;&lt;a href=&quot;#响应时间RT（重要指标）&quot; class=&quot;headerlink&quot; title=&quot;响应时间RT（重要指标）&quot;&gt;&lt;/a&gt;响应时间RT（重要指标）&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;RT是一个非常重要的性能指标&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从发起请求的时间点，经过网络传输时间+服务器处理的时间+通过网络传输返回的时间&lt;/p&gt;
&lt;p&gt;我们做性能测试时，尽可能的降低网络延迟时间，这样RT时间才会无限的接近我们的服务器处理时间&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带宽加宽&lt;/li&gt;
&lt;li&gt;局域网&lt;/li&gt;
&lt;li&gt;在性能测试中，不要使用无线网络（排除专门的无线网络测试）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用有线网络时要注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络传输的带宽&lt;/li&gt;
&lt;li&gt;降低网络传输的节点与距离（不能使用跳板机）&lt;/li&gt;
&lt;li&gt;独立网络环境&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>1-性能测试入门</title>
    <link href="http://zx490336534.github.io/article/cbb71895.html"/>
    <id>http://zx490336534.github.io/article/cbb71895.html</id>
    <published>2021-03-23T23:04:00.000Z</published>
    <updated>2021-04-22T14:34:11.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-性能测试入门"><a href="#1-性能测试入门" class="headerlink" title="1-性能测试入门"></a>1-性能测试入门</h1><h2 id="测试思维"><a href="#测试思维" class="headerlink" title="测试思维"></a>测试思维</h2><blockquote><p>性能测试思维和功能测试思维完全不一样。</p></blockquote><p>功能测试/自动化测试需要确定Bug</p><p>怎么确定是Bug？</p><ul><li>预期结果与实际结果进行比较，如果不一致则发现bug</li><li>潜在的一个前提：模拟<code>一个用户</code>对产品进行使用，能否正常</li></ul><p>性能测试：1+1不等于2</p><p>模拟多个人同时操作产品，关注点不再是功能是否正常</p><p>如果单人操作没有问题，多人操作出现异常，是出现了<strong>性能瓶颈</strong>而不是功能问题</p><p>1个人循环做10次，不是性能测试</p><p>10个人同时做一件事，是性能测试</p><span id="more"></span><h2 id="性能入门知识"><a href="#性能入门知识" class="headerlink" title="性能入门知识"></a>性能入门知识</h2><h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><p>事务、物品的某些特性的评价值</p><h3 id="软件性能测试"><a href="#软件性能测试" class="headerlink" title="软件性能测试"></a>软件性能测试</h3><p>通过工具，<code>找出</code>或<code>获得</code>系统在不同工况下的性能指标值</p><h3 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h3><ul><li>RT响应时间</li><li>错误率</li><li>服务器资源消耗</li></ul><blockquote><p>隐藏的前提：功能测试已经通过，才做性能测试</p></blockquote><p>性能测试，得到的都是性能指标值，不是功能的bug数量</p><h2 id="前端性能测试"><a href="#前端性能测试" class="headerlink" title="前端性能测试"></a>前端性能测试</h2><p>前端性能测试，影响因素非常多，而且不通用，所以测试工具很多，没有统一标准</p><ul><li>前端性能测试，并不一定是多用户</li><li>前端与端设备有直接关系</li><li>前端与设备配置有关系</li></ul><h3 id="常用的前端性能测试工具"><a href="#常用的前端性能测试工具" class="headerlink" title="常用的前端性能测试工具"></a>常用的前端性能测试工具</h3><ul><li>PageSpeed Insights:<a href="https://developers.google.cn/speed/pagespeed/insights/">https://developers.google.cn/speed/pagespeed/insights/</a></li></ul><p>谷歌开发的一个免费的<a href="https://developers.google.cn/speed/pagespeed/insights/?utm_source=testingpai.com">网页分析工具</a>，在地址栏中输入被分析的网站 url 地址，点击分析，</p><p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1goun20zgdbj30xr0u010f.jpg" alt="PageSpeed Insights"></p><ul><li>Lighthouse</li></ul><p>Lighthouse 是谷歌开源的一款 Web 前端性能测试工具，用于改进网络应用的质量，适用于网页版和移动端。能生成一个包括页面性能、PWA（Progressive Web apps，渐进式 Web 应用）、可访问性（无障碍）、最佳实践、SEO 的报告清单提供参考，看看可以采取哪些措施来改进您的应用。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g lighthouse</span><br></pre></td></tr></tbody></table></figure><ul><li>SiteSpeed:<a href="https://www.sitespeed.io/">https://www.sitespeed.io/</a></li></ul><p>SiteSpeed 是一款开源的，可以用于监控和检查网站性能的工具。可以通过 docker 镜像或 npm 方式来使用。这个工具，并不是单一的，而是一组工具集合，可以根据自己需要，选择适合自己的工具。</p><ul><li>Speedcurve:<a href="https://speedcurve.com/">https://speedcurve.com/</a></li></ul><p>Speedcurve 是一个前端性能综合监控网站，可以在网站输入被测网站的 url 地址，进行测试</p><ul><li>webpagetest:<a href="https://www.webpagetest.org/">https://www.webpagetest.org/</a></li></ul><p>webpagetest和上面的 speedcurve 相似，也是在一个网站中，输入被测试的网站 ip 地址，就可以对被测网站页面进行分析。但是，这个网站在国内，被友好的和谐了，会出现无法正常进行测试的情况。</p><h2 id="接口性能"><a href="#接口性能" class="headerlink" title="接口性能"></a>接口性能</h2><blockquote><p>有不同协议的http协议族</p></blockquote><p>协议：提供者和使用者之间的一个数据约束</p><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><blockquote><p>通过工具、找出或者验证，系统在不同工况下的性能指标</p></blockquote><h3 id="通过工具"><a href="#通过工具" class="headerlink" title="通过工具"></a>通过工具</h3><p>性能测试，不能靠手工</p><p>常用的工具：</p><ul><li>jmeter</li><li>loadrunner</li><li>python+locust</li><li>ngrinder</li></ul><h3 id="找出「基准测试」"><a href="#找出「基准测试」" class="headerlink" title="找出「基准测试」"></a>找出「基准测试」</h3><p>在完全没有性能指标可以做参考时，通过性能测试得到性能指标值</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>在接口升级之后，对接口再次进行性能测试，对比基准测试结果</p><h2 id="压测-负载测试-性能测试-最大并发用户数下的性能指标"><a href="#压测-负载测试-性能测试-最大并发用户数下的性能指标" class="headerlink" title="压测=负载测试+性能测试=最大并发用户数下的性能指标"></a>压测=负载测试+性能测试=最大并发用户数下的性能指标</h2><h3 id="负载测试：逐步增加"><a href="#负载测试：逐步增加" class="headerlink" title="负载测试：逐步增加"></a>负载测试：逐步增加</h3><p>逐步增加：逐步增加同时请求的数量，来观察系统能承受的<strong>最大负载区间</strong></p><p>在逐步增加后 会得到一个<code>拐点</code>的区间</p><hr><p>问：一个系统完全没有做过性能测试，如何找出最大并发用户数</p><p>答：进行负载测试，逐步增加并发数</p><h3 id="压力测试：较长时间-较大压力"><a href="#压力测试：较长时间-较大压力" class="headerlink" title="压力测试：较长时间+较大压力"></a>压力测试：较长时间+较大压力</h3><p>在一定并发用户数请求下，持续运行一段时间，看系统服务及各资源利用情况，是否存在稳定性问题</p><ul><li>时间：较长，以小时为单位，一般是几个小时或几天</li><li>目的：看服务器是否稳定</li></ul><p>当服务器出现不稳定情况宕机，我们就要进行压力测试了</p><h3 id="可靠性测试"><a href="#可靠性测试" class="headerlink" title="可靠性测试"></a>可靠性测试</h3><p>在给定一定的业务压力下，持续运行一段时间，查看系统是否稳定</p><p>关键词：是否<code>稳定</code>，一定业务压力</p><h3 id="容量测试"><a href="#容量测试" class="headerlink" title="容量测试"></a>容量测试</h3><p>在一定的软、硬件条件下，在数据库不同数量级数据量的情况时，对系统中读/写比进行测试，从而获得不同数据量级下的性能指标值。</p><ul><li>要与生产的数据库的数量级别保持一致</li><li>如果产品没有上线，看数据库是什么数据库来评定量级。一般mysql为100w级</li></ul><p>问：为什么数据库要有这样一个数据量的数据准备？</p><p>答：数据库在10w、100w数据时，索引会对性能造成非常大的影响。百万级数据库，如果有索引，而且生效，sql的时间毫秒到秒之间，但是没有索引，或者索引无效，需要在几秒以上</p><p>性能测试环境的数据量要与生产一致。一定要注意数据脱敏/</p><h2 id="性能测试前提"><a href="#性能测试前提" class="headerlink" title="性能测试前提"></a>性能测试前提</h2><blockquote><p>性能测试，有前提，并不是什么时候，什么接口都可以做性能测试。</p></blockquote><h3 id="性能测试的必要性研究：关键项评估"><a href="#性能测试的必要性研究：关键项评估" class="headerlink" title="性能测试的必要性研究：关键项评估"></a>性能测试的必要性研究：关键项评估</h3><ul><li>主管部门、监管部门审核</li><li>设计生命财产安全</li><li>大型新系统</li><li>核心系统</li><li>架构调整</li><li>业务剧增</li><li>最大缺陷修复</li></ul><h3 id="可测性：可量化为性能指标值"><a href="#可测性：可量化为性能指标值" class="headerlink" title="可测性：可量化为性能指标值"></a>可测性：可量化为性能指标值</h3><h2 id="性能测试工具"><a href="#性能测试工具" class="headerlink" title="性能测试工具"></a>性能测试工具</h2><ul><li><p>Jmeter</p></li><li><p>loadrunner</p></li><li><p>python+locust</p></li></ul><h2 id="关注点"><a href="#关注点" class="headerlink" title="关注点"></a>关注点</h2><h3 id="企业关注"><a href="#企业关注" class="headerlink" title="企业关注"></a>企业关注</h3><ul><li>服务器利用情况：资源利用率</li><li>能支持的最大用户：系统容量</li><li>能支持的最大并发用户：并发用户数</li><li>是不是可以更换硬件提供性能：可扩展</li><li>能不能持续运行长时间不宕机：稳定性</li></ul><h3 id="开发人员"><a href="#开发人员" class="headerlink" title="开发人员"></a>开发人员</h3><ul><li>架构设计是否合理：系统架构</li><li>数据库设计：数据库</li><li>代码逻辑：代码</li></ul><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>狭义：同一时间多个人做同一件事情</p><p>广义：同一时间多个人发起请求，事情可能不一样</p><p>现在的性能测试都是广义并发</p><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>客户机向服务器发送请求，然后服务器做出反应的过程</p><p>jmeter中有两种事务</p><ul><li>一个请求就是一个事务</li><li>添加了事务控制器，把多个接口合并在一起作为一个事务</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-性能测试入门&quot;&gt;&lt;a href=&quot;#1-性能测试入门&quot; class=&quot;headerlink&quot; title=&quot;1-性能测试入门&quot;&gt;&lt;/a&gt;1-性能测试入门&lt;/h1&gt;&lt;h2 id=&quot;测试思维&quot;&gt;&lt;a href=&quot;#测试思维&quot; class=&quot;headerlink&quot; title=&quot;测试思维&quot;&gt;&lt;/a&gt;测试思维&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;性能测试思维和功能测试思维完全不一样。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能测试/自动化测试需要确定Bug&lt;/p&gt;
&lt;p&gt;怎么确定是Bug？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;预期结果与实际结果进行比较，如果不一致则发现bug&lt;/li&gt;
&lt;li&gt;潜在的一个前提：模拟&lt;code&gt;一个用户&lt;/code&gt;对产品进行使用，能否正常&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;性能测试：1+1不等于2&lt;/p&gt;
&lt;p&gt;模拟多个人同时操作产品，关注点不再是功能是否正常&lt;/p&gt;
&lt;p&gt;如果单人操作没有问题，多人操作出现异常，是出现了&lt;strong&gt;性能瓶颈&lt;/strong&gt;而不是功能问题&lt;/p&gt;
&lt;p&gt;1个人循环做10次，不是性能测试&lt;/p&gt;
&lt;p&gt;10个人同时做一件事，是性能测试&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="http://zx490336534.github.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试开发" scheme="http://zx490336534.github.io/tags/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    <category term="性能测试" scheme="http://zx490336534.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(Hybrid应用自动化 35)</title>
    <link href="http://zx490336534.github.io/article/cb028af5.html"/>
    <id>http://zx490336534.github.io/article/cb028af5.html</id>
    <published>2020-10-17T12:22:40.216Z</published>
    <updated>2021-04-22T13:58:48.553Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-Hybrid应用自动化-35"><a href="#Java自动化测试-Hybrid应用自动化-35" class="headerlink" title="Java自动化测试(Hybrid应用自动化 35)"></a>Java自动化测试(Hybrid应用自动化 35)</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>准备android4.4+版本以上的手机/模拟器</li><li>在app源码中将webview调试模式打开</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webview.setWebContentsDebuggingEnabled(<span class="keyword">true</span>);</span><br></pre></td></tr></tbody></table></figure><span id="more"></span><ul><li>安装UC开发者工具</li></ul><h2 id="查看ChromeDriver版本"><a href="#查看ChromeDriver版本" class="headerlink" title="查看ChromeDriver版本"></a>查看ChromeDriver版本</h2><p>进入<code>设置</code>-&gt;<code>应用</code>，点击<code>显示系统进程</code></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjslu6oar3j30sg1bm45n.jpg" alt="显示系统进程"></p><p>找到<code>Android System WebView</code>,它的版本也就是<code>75.0.3770.143</code></p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjslurkg7ej30u01cktia.jpg" alt="Android System WebView"></p><blockquote><p>在chromedriver中找到对应的版本</p><p><a href="https://npm.taobao.org/mirrors/chromedriver/?utm_source=testingpai.com">https://npm.taobao.org/mirrors/chromedriver/?utm_source=testingpai.com</a></p></blockquote><h2 id="使用UC-开发者调试工具定位页面"><a href="#使用UC-开发者调试工具定位页面" class="headerlink" title="使用UC 开发者调试工具定位页面"></a>使用UC 开发者调试工具定位页面</h2><blockquote><p><a href="https://dev.ucweb.com/docs/pwa/docs-zh/xy3whu">https://dev.ucweb.com/docs/pwa/docs-zh/xy3whu</a></p></blockquote><h3 id="修改设置"><a href="#修改设置" class="headerlink" title="修改设置"></a>修改设置</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjsmtrtlehj312f0u0n8g.jpg" alt="设置"></p><h3 id="查看当前页面"><a href="#查看当前页面" class="headerlink" title="查看当前页面"></a>查看当前页面</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjsmulb91fj31a40u01dl.jpg" alt="查看Home"></p><h2 id="进入网页"><a href="#进入网页" class="headerlink" title="进入网页"></a>进入网页</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>{</span><br><span class="line">    androidDriver.findElement(MobileBy.xpath(<span class="string">"//*[@text='柠檬社区']"</span>)).click();</span><br><span class="line">    System.out.println(androidDriver.getContextHandles());<span class="comment">//[NATIVE_APP, WEBVIEW_com.lemon.lemonban]</span></span><br><span class="line">    <span class="comment">//切换到WEBVIEW_com.lemon.lemonban</span></span><br><span class="line">    androidDriver.context(<span class="string">"WEBVIEW_com.lemon.lemonban"</span>);</span><br><span class="line">    <span class="comment">//进入web页面点击注册按钮</span></span><br><span class="line">    androidDriver.findElement(MobileBy.xpath(<span class="string">"//span[contains(text(),'注册')]"</span>)).click();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h2><p>由于腾讯系QQ/微信是基于腾讯自研的X5内核，不是谷歌原生webview，所以调试会有差异</p><p>微信小程序只能够支持手机，模拟器是不行的。</p><h3 id="Step1-打开微信小程序webview开关"><a href="#Step1-打开微信小程序webview开关" class="headerlink" title="Step1:打开微信小程序webview开关"></a>Step1:打开微信小程序webview开关</h3><blockquote><p><a href="https://debugx5.qq.com/">https://debugx5.qq.com/</a></p><p><a href="http://debugmm.qq.com/?forcex5=true">http://debugmm.qq.com/?forcex5=true</a></p></blockquote><h3 id="Step2-UC开发者工具识别小程序的web元素信息"><a href="#Step2-UC开发者工具识别小程序的web元素信息" class="headerlink" title="Step2:UC开发者工具识别小程序的web元素信息"></a>Step2:UC开发者工具识别小程序的web元素信息</h3><h3 id="Step3-确认微信小程序对应的进程名"><a href="#Step3-确认微信小程序对应的进程名" class="headerlink" title="Step3:确认微信小程序对应的进程名"></a>Step3:确认微信小程序对应的进程名</h3><h3 id="Step4-X5内核启动参数配置"><a href="#Step4-X5内核启动参数配置" class="headerlink" title="Step4:X5内核启动参数配置"></a>Step4:X5内核启动参数配置</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 支持X5内核应用自动化配置</span></span><br><span class="line">desiredCapabilities.setCapability(<span class="string">"recreateChromeDriverSession"</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// ChromeOptions 使用来定制启动选项，因为在appium中切换context识别webview的时候，</span></span><br><span class="line"><span class="comment">// 把com.tencent.mm:toolsmp的webview识别成com.tencent.mm的webview</span></span><br><span class="line"><span class="comment">// 为了规避这个问题，加上androidProcess: com.tencent.mm:toolsmp</span></span><br><span class="line">ChromeOptions options = <span class="keyword">new</span> ChromeOptions();</span><br><span class="line">options.setExperimentalOption(<span class="string">"androidProcess"</span>,<span class="string">"com.tencent.mm:appbrand0"</span>);</span><br><span class="line">desiredCapabilities.setCapability(ChromeOptions.CAPABILITY,options);</span><br><span class="line"><span class="comment">// 初始化会默认将chrome浏览器打开，需要将Browser置为空</span></span><br><span class="line">desiredCapabilities.setBrowserName(<span class="string">""</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="Step5-编写脚本实现自动化测试用例"><a href="#Step5-编写脚本实现自动化测试用例" class="headerlink" title="Step5:编写脚本实现自动化测试用例"></a>Step5:编写脚本实现自动化测试用例</h3><blockquote><p>注意：不清除微信的数据的方法</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">capabilities.setCapability(<span class="string">"noReset"</span>, <span class="keyword">true</span>);</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-Hybrid应用自动化-35&quot;&gt;&lt;a href=&quot;#Java自动化测试-Hybrid应用自动化-35&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(Hybrid应用自动化 35)&quot;&gt;&lt;/a&gt;Java自动化测试(Hybrid应用自动化 35)&lt;/h1&gt;&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;准备android4.4+版本以上的手机/模拟器&lt;/li&gt;
&lt;li&gt;在app源码中将webview调试模式打开&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;webview.setWebContentsDebuggingEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(App特殊元素定位 34)</title>
    <link href="http://zx490336534.github.io/article/f873292f.html"/>
    <id>http://zx490336534.github.io/article/f873292f.html</id>
    <published>2020-10-13T13:28:31.956Z</published>
    <updated>2021-04-22T13:58:48.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-App特殊元素定位-34"><a href="#Java自动化测试-App特殊元素定位-34" class="headerlink" title="Java自动化测试(App特殊元素定位 34)"></a>Java自动化测试(App特殊元素定位 34)</h1><h2 id="手势操作-滑动"><a href="#手势操作-滑动" class="headerlink" title="手势操作-滑动"></a>手势操作-滑动</h2><blockquote><p>滑动操作 = 点击屏幕某一点 + 移动 + 松开</p></blockquote><span id="more"></span><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">// 滑动操作 = 点击屏幕某一点 + 移动 + 松开</span></span><br><span class="line">    <span class="comment">// 点击 (365,170) 拖动(365,966)</span></span><br><span class="line">    TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    PointOption startPoint = PointOption.point(<span class="number">365</span>, <span class="number">170</span>);</span><br><span class="line">    PointOption endPoint = PointOption.point(<span class="number">365</span>, <span class="number">966</span>);</span><br><span class="line">    touchAction.press(startPoint).moveTo(endPoint).release().perform();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如上操作不会出现下拉刷新的情况</p><h2 id="滑动决定因素：距离-时间"><a href="#滑动决定因素：距离-时间" class="headerlink" title="滑动决定因素：距离/时间"></a>滑动决定因素：距离/时间</h2><ul><li>滑动距离</li><li>滑动时间</li></ul><p>现在增加滑动的时间</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Duration duration = Duration.ofMillis(<span class="number">2000</span>);</span><br><span class="line">WaitOptions waitOptions = WaitOptions.waitOptions(duration);</span><br><span class="line">touchAction.press(startPoint).waitAction(waitOptions).moveTo(endPoint).release().perform();</span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjo2pqc5s0g30ea0msb2d.gif" alt="下拉刷新"></p><p>为了使它更通用使用屏幕的分辨率来计算坐标</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> width = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line"><span class="keyword">int</span> height = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">PointOption startPoint = PointOption.point(width / <span class="number">2</span>, height / <span class="number">4</span>);</span><br><span class="line">PointOption endPoint = PointOption.point(width / <span class="number">2</span>, <span class="number">3</span> * height / <span class="number">4</span>);</span><br></pre></td></tr></tbody></table></figure><p>对滑动进行封装</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向下滑动</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> times：等待时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swipeDown</span><span class="params">(<span class="keyword">long</span> times)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> width = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    PointOption startPoint = PointOption.point(width / <span class="number">2</span>, height / <span class="number">4</span>);</span><br><span class="line">    PointOption endPoint = PointOption.point(width / <span class="number">2</span>, <span class="number">3</span> * height / <span class="number">4</span>);</span><br><span class="line">    Duration duration = Duration.ofMillis(times);</span><br><span class="line">    WaitOptions waitOptions = WaitOptions.waitOptions(duration);</span><br><span class="line">    touchAction.press(startPoint).waitAction(waitOptions).moveTo(endPoint).release().perform();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向上滑动</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> times：等待时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swipeUp</span><span class="params">(<span class="keyword">long</span> times)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> width = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    PointOption startPoint = PointOption.point(width / <span class="number">2</span>, <span class="number">3</span> * height / <span class="number">4</span>);</span><br><span class="line">    PointOption endPoint = PointOption.point(width / <span class="number">2</span>, height / <span class="number">4</span>);</span><br><span class="line">    Duration duration = Duration.ofMillis(times);</span><br><span class="line">    WaitOptions waitOptions = WaitOptions.waitOptions(duration);</span><br><span class="line">    touchAction.press(startPoint).waitAction(waitOptions).moveTo(endPoint).release().perform();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向左滑动</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> times：等待时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swipeLeft</span><span class="params">(<span class="keyword">long</span> times)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> width = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    PointOption startPoint = PointOption.point(width / <span class="number">4</span>, height / <span class="number">2</span>);</span><br><span class="line">    PointOption endPoint = PointOption.point(<span class="number">3</span> * width / <span class="number">4</span>, height / <span class="number">2</span>);</span><br><span class="line">    Duration duration = Duration.ofMillis(times);</span><br><span class="line">    WaitOptions waitOptions = WaitOptions.waitOptions(duration);</span><br><span class="line">    touchAction.press(startPoint).waitAction(waitOptions).moveTo(endPoint).release().perform();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向右滑动</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> times：等待时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swipeRight</span><span class="params">(<span class="keyword">long</span> times)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> width = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    <span class="keyword">int</span> height = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    PointOption startPoint = PointOption.point(<span class="number">3</span> * width / <span class="number">4</span>, height / <span class="number">2</span>);</span><br><span class="line">    PointOption endPoint = PointOption.point(width / <span class="number">4</span>, height / <span class="number">2</span>);</span><br><span class="line">    Duration duration = Duration.ofMillis(times);</span><br><span class="line">    WaitOptions waitOptions = WaitOptions.waitOptions(duration);</span><br><span class="line">    touchAction.press(startPoint).waitAction(waitOptions).moveTo(endPoint).release().perform();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="手势操作-多点触摸"><a href="#手势操作-多点触摸" class="headerlink" title="手势操作-多点触摸"></a>手势操作-多点触摸</h2><p><code>MultiTouchAction</code>可以模拟用户多点触摸操作</p><ul><li>add:添加</li><li>perform:执行</li></ul><p>实现<code>放大</code>操作</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">    <span class="comment">//手指1</span></span><br><span class="line">    TouchAction action1 = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    <span class="comment">//手指2</span></span><br><span class="line">    TouchAction action2 = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">    <span class="keyword">int</span> y = androidDriver.manage().window().getSize().getHeight();</span><br><span class="line">    <span class="keyword">int</span> x = androidDriver.manage().window().getSize().getWidth();</span><br><span class="line">    PointOption pointA = PointOption.point(x / <span class="number">5</span>, y / <span class="number">5</span>);</span><br><span class="line">    PointOption pointB = PointOption.point(x * <span class="number">2</span> / <span class="number">5</span>, y * <span class="number">2</span> / <span class="number">5</span>);</span><br><span class="line">    PointOption pointC = PointOption.point(x * <span class="number">3</span> / <span class="number">5</span>, y * <span class="number">3</span> / <span class="number">5</span>);</span><br><span class="line">    PointOption pointD = PointOption.point(x * <span class="number">4</span> / <span class="number">5</span>, y * <span class="number">4</span> / <span class="number">5</span>);</span><br><span class="line">    <span class="comment">// 放大 B-&gt;A C-&gt;D</span></span><br><span class="line">    action1.press(pointB).moveTo(pointA).release();</span><br><span class="line">    action2.press(pointC).moveTo(pointD).release();</span><br><span class="line">    MultiTouchAction multiTouchAction = <span class="keyword">new</span> MultiTouchAction(androidDriver);</span><br><span class="line">    multiTouchAction.add(action1);</span><br><span class="line">    multiTouchAction.add(action2);</span><br><span class="line">    multiTouchAction.perform();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-App特殊元素定位-34&quot;&gt;&lt;a href=&quot;#Java自动化测试-App特殊元素定位-34&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(App特殊元素定位 34)&quot;&gt;&lt;/a&gt;Java自动化测试(App特殊元素定位 34)&lt;/h1&gt;&lt;h2 id=&quot;手势操作-滑动&quot;&gt;&lt;a href=&quot;#手势操作-滑动&quot; class=&quot;headerlink&quot; title=&quot;手势操作-滑动&quot;&gt;&lt;/a&gt;手势操作-滑动&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;滑动操作 = 点击屏幕某一点 + 移动 + 松开&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(Android app界面元素 33)</title>
    <link href="http://zx490336534.github.io/article/86e4f985.html"/>
    <id>http://zx490336534.github.io/article/86e4f985.html</id>
    <published>2020-10-08T00:54:48.356Z</published>
    <updated>2021-04-22T13:58:48.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-Android-app界面元素-33"><a href="#Java自动化测试-Android-app界面元素-33" class="headerlink" title="Java自动化测试(Android app界面元素 33)"></a>Java自动化测试(Android app界面元素 33)</h1><h2 id="App分类"><a href="#App分类" class="headerlink" title="App分类"></a>App分类</h2><h3 id="Native-App"><a href="#Native-App" class="headerlink" title="Native App"></a>Native App</h3><p>原生App</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>直接依托于操作系统，交互性最强，性能最好，功能最为强大</p><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>开发成本高，更新缓慢，审核周期慢，维护成本高</p><span id="more"></span><h3 id="Hybrid-App"><a href="#Hybrid-App" class="headerlink" title="Hybrid App"></a>Hybrid App</h3><p>混合型App</p><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><p>开发成本较低，可以跨平台，调试方便，维护成本低，功能可复用，性能和体验要比web app好，更新较自由</p><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><p>相比原生性能仍有较大损耗，不适用于交互性较强的app</p><h3 id="Web-App"><a href="#Web-App" class="headerlink" title="Web App"></a>Web App</h3><p>使用浏览器展示</p><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><p>开发成本低，可以跨平台，调试方便，更新无需通知用户，不需要手动升级，无需安装App，不会占用手机存储空间</p><h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4><p>无法获取系统级别的通知/提醒/动效等，用户留存率低，体验差，设计受限较多</p><h3 id="如何区分"><a href="#如何区分" class="headerlink" title="如何区分"></a>如何区分</h3><p>开启<code>显示布局界面</code>，当看到出现<code>方框</code>则使用的是原生</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjhn91yla7j30sg1bm45f.jpg" alt="定位"></p><h2 id="ActivityName-amp-PackageName"><a href="#ActivityName-amp-PackageName" class="headerlink" title="ActivityName &amp; PackageName"></a>ActivityName &amp; PackageName</h2><h3 id="PackageName「包名」"><a href="#PackageName「包名」" class="headerlink" title="PackageName「包名」"></a>PackageName「包名」</h3><p>应用的唯一身份标示，系统通过包名识别不同的应用，如两个相同包名的应用在安装时会提示覆盖</p><h3 id="ActivityName「类名」"><a href="#ActivityName「类名」" class="headerlink" title="ActivityName「类名」"></a>ActivityName「类名」</h3><p>Activity：android四大组件之一，就是一个和用户交互的界面</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell dumpsys activity | grep <span class="string">"mFocusedActivity"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Android8以上</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb shell dumpsys activity | grep <span class="string">"mResumedActivity"</span></span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjhnuilwmgj311q0u0dyo.jpg" alt="查找当前Activity"></p><p>启动入口appActivity和Activity的区别：</p><p><code>appActivity</code>在App中是唯一的，它的作用是用来启动app的</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> aapt dump badging D:\apk\base.apk | find <span class="string">"launchable-activity"</span></span></span><br></pre></td></tr></tbody></table></figure><h2 id="App页面布局"><a href="#App页面布局" class="headerlink" title="App页面布局"></a>App页面布局</h2><h3 id="布局类型"><a href="#布局类型" class="headerlink" title="布局类型"></a>布局类型</h3><ul><li>框架布局</li></ul><p>所有控件都被放置在左上的区域</p><p>下一个子控件会重叠覆盖上一个控件</p><ul><li>线性布局</li></ul><p>控件的排序方式：垂直/水平</p><ul><li>绝对布局</li></ul><p>采用坐标轴的方式定位控件</p><p>左上角(0,0) </p><p>往右<code>x+</code></p><p>往下<code>y+</code></p><ul><li>相对布局</li></ul><p>根据参照物的位置，来确定控件的位置</p><ul><li>表格布局</li></ul><p>通过表格的行列布局控件位置</p><h2 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h2><p>打开<code>uiautomatorviewer</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /Users/zhongxin/Library/Android/sdk/tools/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sh uiautomatorviewer</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjho0t5rixj313u0u0b29.jpg" alt="uiautomatorviewer"></p><h3 id="id定位"><a href="#id定位" class="headerlink" title="id定位"></a>id定位</h3><p><code>resource-id</code>定位，App是允许「resource-id」相同，如果有相同的resource-id，那么获取第一个元素</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">androidDriver.findElement(MobileBy.id(<span class="string">"com.lemon.lemonban:id/category_title"</span>)).click();</span><br></pre></td></tr></tbody></table></figure><h3 id="text定位"><a href="#text定位" class="headerlink" title="text定位"></a>text定位</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">androidDriver.findElement(MobileBy.AndroidUIAutomator(<span class="string">"new UiSelector().text(\"全程班\")"</span>)).click();</span><br></pre></td></tr></tbody></table></figure><h3 id="className定位"><a href="#className定位" class="headerlink" title="className定位"></a>className定位</h3><p>类似web tagName找到元素类型</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">androidDriver.findElement(MobileBy.className(<span class="string">"android.widget.TextView"</span>)).click();</span><br></pre></td></tr></tbody></table></figure><h3 id="Xpath定位"><a href="#Xpath定位" class="headerlink" title="Xpath定位"></a>Xpath定位</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">androidDriver.findElement(MobileBy.xpath(<span class="string">"//android.widget.TextView[@text='全程班']"</span>)).click();</span><br><span class="line">androidDriver.findElement(MobileBy.xpath(<span class="string">"//android.widget.FrameLayout[@resource-id='com.lemon.lemonban:id/navigation_tiku']"</span>)).click();</span><br></pre></td></tr></tbody></table></figure><h3 id="坐标定位"><a href="#坐标定位" class="headerlink" title="坐标定位"></a>坐标定位</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TouchAction touchAction = <span class="keyword">new</span> TouchAction(androidDriver);</span><br><span class="line">PointOption pointOption = PointOption.point(<span class="number">445</span>, <span class="number">1539</span>);</span><br><span class="line">touchAction.press(pointOption).release().perform();</span><br></pre></td></tr></tbody></table></figure><h3 id="toast元素定位"><a href="#toast元素定位" class="headerlink" title="toast元素定位"></a>toast元素定位</h3><p><code>Toast</code>是一种简单的消息提示框。当视图显示给用户，在应用程序中显示为浮动。和Dialog不一样的是，它永远不会获得焦点，无法被点击。</p><ul><li>获取方式1:隐式等待</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">androidDriver.manage().timeouts().implicitlyWait(<span class="number">8</span>, TimeUnit.SECONDS);</span><br><span class="line">androidDriver.findElement(MobileBy.xpath(<span class="string">"//*[contains(@text,'错误的账号信息')]"</span>));</span><br></pre></td></tr></tbody></table></figure><ul><li>获取方式2:显式等待</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WebDriverWait wait = <span class="keyword">new</span> WebDriverWait(androidDriver, <span class="number">5</span>);</span><br><span class="line">WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(MobileBy.xpath(<span class="string">"//*[contains(@text,'错误的账号信息')]"</span>)));</span><br><span class="line">element.getText();</span><br></pre></td></tr></tbody></table></figure><h2 id="使用Appium定位"><a href="#使用Appium定位" class="headerlink" title="使用Appium定位"></a>使用Appium定位</h2><h3 id="1-填写连接信息"><a href="#1-填写连接信息" class="headerlink" title="1.填写连接信息"></a>1.填写连接信息</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjhp3t9j59j31gg0u0wsc.jpg" alt="填写连接信息"></p><h3 id="2-启动会话"><a href="#2-启动会话" class="headerlink" title="2. 启动会话"></a>2. 启动会话</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gjhp1bfh6tj31gg0u0x3g.jpg" alt="Appium"></p><h2 id="调试代码"><a href="#调试代码" class="headerlink" title="调试代码"></a>调试代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.day03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.appium.java_client.MobileBy;</span><br><span class="line"><span class="keyword">import</span> io.appium.java_client.TouchAction;</span><br><span class="line"><span class="keyword">import</span> io.appium.java_client.android.AndroidDriver;</span><br><span class="line"><span class="keyword">import</span> io.appium.java_client.touch.offset.PointOption;</span><br><span class="line"><span class="keyword">import</span> org.apache.tools.ant.taskdefs.Touch;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.apache.bcel.ExceptionConstants;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebElement;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.ExpectedConditions;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.WebDriverWait;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.AfterTest;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeTest;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElementLocator</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> AndroidDriver androidDriver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> MalformedURLException </span>{</span><br><span class="line">        DesiredCapabilities capabilities = <span class="keyword">new</span> DesiredCapabilities();</span><br><span class="line">        capabilities.setCapability(<span class="string">"platformName"</span>, <span class="string">"Android"</span>);</span><br><span class="line">        capabilities.setCapability(<span class="string">"deviceName"</span>, <span class="string">"127.0.0.1:62001"</span>);</span><br><span class="line">        capabilities.setCapability(<span class="string">"appPackage"</span>, <span class="string">"com.lemon.lemonban"</span>);</span><br><span class="line">        capabilities.setCapability(<span class="string">"appActivity"</span>, <span class="string">"com.lemon.lemonban.activity.WelcomeActivity"</span>);</span><br><span class="line">        URL url = <span class="keyword">new</span> URL(<span class="string">"http://127.0.0.1:4723/wd/hub"</span>);</span><br><span class="line">        androidDriver = <span class="keyword">new</span> AndroidDriver(url, capabilities);</span><br><span class="line">        androidDriver.manage().timeouts().implicitlyWait(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="comment">//        androidDriver.findElement(MobileBy.id("com.lemon.lemonban:id/category_title")).click();</span></span><br><span class="line"><span class="comment">//        androidDriver.findElement(MobileBy.AndroidUIAutomator("new UiSelector().text(\"全程班\")")).click();</span></span><br><span class="line"><span class="comment">//        androidDriver.findElement(MobileBy.className("android.widget.TextView")).click();</span></span><br><span class="line"><span class="comment">//        androidDriver.findElement(MobileBy.xpath("//android.widget.TextView[@text='全程班']")).click();</span></span><br><span class="line"><span class="comment">//        androidDriver.findElement(MobileBy.xpath("//android.widget.FrameLayout[@resource-id='com.lemon.lemonban:id/navigation_tiku']")).click();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        TouchAction touchAction = new TouchAction(androidDriver);</span></span><br><span class="line"><span class="comment">//        PointOption pointOption = PointOption.point(445, 1539);</span></span><br><span class="line"><span class="comment">//        touchAction.press(pointOption).release().perform();</span></span><br><span class="line"></span><br><span class="line">        androidDriver.manage().timeouts().implicitlyWait(<span class="number">8</span>, TimeUnit.SECONDS);</span><br><span class="line">        androidDriver.findElement(MobileBy.xpath(<span class="string">"//*[contains(@text,'错误的账号信息')]"</span>));</span><br><span class="line"></span><br><span class="line">        WebDriverWait wait = <span class="keyword">new</span> WebDriverWait(androidDriver, <span class="number">5</span>);</span><br><span class="line">        WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(MobileBy.xpath(<span class="string">"//*[contains(@text,'错误的账号信息')]"</span>)));</span><br><span class="line">        String text = element.getText();</span><br><span class="line">        System.out.println(text);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tearDown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        androidDriver.quit();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-Android-app界面元素-33&quot;&gt;&lt;a href=&quot;#Java自动化测试-Android-app界面元素-33&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(Android app界面元素 33)&quot;&gt;&lt;/a&gt;Java自动化测试(Android app界面元素 33)&lt;/h1&gt;&lt;h2 id=&quot;App分类&quot;&gt;&lt;a href=&quot;#App分类&quot; class=&quot;headerlink&quot; title=&quot;App分类&quot;&gt;&lt;/a&gt;App分类&lt;/h2&gt;&lt;h3 id=&quot;Native-App&quot;&gt;&lt;a href=&quot;#Native-App&quot; class=&quot;headerlink&quot; title=&quot;Native App&quot;&gt;&lt;/a&gt;Native App&lt;/h3&gt;&lt;p&gt;原生App&lt;/p&gt;
&lt;h4 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h4&gt;&lt;p&gt;直接依托于操作系统，交互性最强，性能最好，功能最为强大&lt;/p&gt;
&lt;h4 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h4&gt;&lt;p&gt;开发成本高，更新缓慢，审核周期慢，维护成本高&lt;/p&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(adb常用命令 32)</title>
    <link href="http://zx490336534.github.io/article/d988ab56.html"/>
    <id>http://zx490336534.github.io/article/d988ab56.html</id>
    <published>2020-09-26T07:23:50.336Z</published>
    <updated>2021-04-22T13:58:48.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-adb常用命令-32"><a href="#Java自动化测试-adb常用命令-32" class="headerlink" title="Java自动化测试(adb常用命令 32)"></a>Java自动化测试(adb常用命令 32)</h1><h1 id="adb"><a href="#adb" class="headerlink" title="adb"></a>adb</h1><p>adb「Android Bebug Bridge」是用来连接安卓和PC的桥梁</p><p>常用操作：</p><ul><li>安装卸载apk</li><li>推送拷贝文件</li><li>查看设备硬件信息</li><li>查看应用程序占用资源</li><li>在设备执行shell命令<span id="more"></span><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2></li></ul><h3 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb <span class="built_in">help</span></span></span><br></pre></td></tr></tbody></table></figure><h3 id="检测连接到电脑的安卓设备"><a href="#检测连接到电脑的安卓设备" class="headerlink" title="检测连接到电脑的安卓设备"></a>检测连接到电脑的安卓设备</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb devices</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb connect 127.0.0.1:62001</span></span><br></pre></td></tr></tbody></table></figure><h3 id="从手机上拉取信息到电脑上"><a href="#从手机上拉取信息到电脑上" class="headerlink" title="从手机上拉取信息到电脑上"></a>从手机上拉取信息到电脑上</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb pull &lt;手机路径&gt; &lt;本地路径&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="从电脑上提交信息到手机上"><a href="#从电脑上提交信息到手机上" class="headerlink" title="从电脑上提交信息到手机上"></a>从电脑上提交信息到手机上</h3><p>路径不能有中文和特殊字符</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb push &lt;本地路径&gt; &lt;手机路径&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb install &lt;本地软件路径&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="卸载软件"><a href="#卸载软件" class="headerlink" title="卸载软件"></a>卸载软件</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb uninstall &lt;包名&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="登录设备进入shell"><a href="#登录设备进入shell" class="headerlink" title="登录设备进入shell"></a>登录设备进入shell</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell</span></span><br></pre></td></tr></tbody></table></figure><h3 id="终止adb服务"><a href="#终止adb服务" class="headerlink" title="终止adb服务"></a>终止adb服务</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb kill-server</span></span><br></pre></td></tr></tbody></table></figure><h3 id="启动adb服务"><a href="#启动adb服务" class="headerlink" title="启动adb服务"></a>启动adb服务</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb start-server</span></span><br></pre></td></tr></tbody></table></figure><h3 id="启动App"><a href="#启动App" class="headerlink" title="启动App"></a>启动App</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell am start -n &lt;包名&gt;/&lt;入口&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="清除应用数据和缓存"><a href="#清除应用数据和缓存" class="headerlink" title="清除应用数据和缓存"></a>清除应用数据和缓存</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell pm clear &lt;包名&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="坐标点击"><a href="#坐标点击" class="headerlink" title="坐标点击"></a>坐标点击</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell input tap x坐标 y坐标</span></span><br></pre></td></tr></tbody></table></figure><h3 id="列出所有包名"><a href="#列出所有包名" class="headerlink" title="列出所有包名"></a>列出所有包名</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell pm list packages</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> -s 系统apk路径及包名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> -3 用户apk路径及包名</span></span><br></pre></td></tr></tbody></table></figure><h3 id="打印日志"><a href="#打印日志" class="headerlink" title="打印日志"></a>打印日志</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb logcat</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> adb logcat &gt; &lt;本地路径&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb shell screencap -p /sdcard/Pictures/Screenshots/a.png</span></span><br></pre></td></tr></tbody></table></figure><h2 id="appium打印内容解析-了解"><a href="#appium打印内容解析-了解" class="headerlink" title="appium打印内容解析(了解)"></a>appium打印内容解析(了解)</h2><h3 id="启动Appium的欢迎信息"><a href="#启动Appium的欢迎信息" class="headerlink" title="启动Appium的欢迎信息"></a>启动Appium的欢迎信息</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[Appium] Welcome to Appium v1.17.1</span><br><span class="line">[Appium] Non-default server args:</span><br><span class="line">[Appium]   address: 127.0.0.1</span><br><span class="line">[Appium]   allowInsecure: {</span><br><span class="line">[Appium]   }</span><br><span class="line">[Appium]   denyInsecure: {</span><br><span class="line">[Appium]   }</span><br><span class="line">[Appium] Appium REST http interface listener started on 127.0.0.1:4723</span><br><span class="line">[HTTP] --&gt; POST /wd/hub/session</span><br><span class="line">[HTTP] {"desiredCapabilities":{"appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","platformName":"Android","deviceName":"127.0.0.1:62001"},"capabilities":{"firstMatch":[{"appium:appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appium:appPackage":"com.lemon.lemonban","appium:deviceName":"127.0.0.1:62001","platformName":"android"}]}}</span><br><span class="line">[W3C] Calling AppiumDriver.createSession() with args: [{"appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","platformName":"Android","deviceName":"127.0.0.1:62001"},null,{"firstMatch":[{"appium:appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appium:appPackage":"com.lemon.lemonban","appium:deviceName":"127.0.0.1:62001","platformName":"android"}]}]</span><br><span class="line">[BaseDriver] Event 'newSessionRequested' logged at 1601112368099 (17:26:08 GMT+0800 (中国标准时间))</span><br><span class="line">[Appium] </span><br><span class="line">[Appium] ======================================================================</span><br><span class="line">[Appium]   DEPRECATION WARNING:</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   The 'automationName' capability was not provided in the desired </span><br><span class="line">[Appium]   capabilities for this Android session</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   Setting 'automationName=UiAutomator2' by default and using the </span><br><span class="line">[Appium]   UiAutomator2 Driver</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   The next major version of Appium (2.x) will **require** the </span><br><span class="line">[Appium]   'automationName' capability to be set for all sessions on all </span><br><span class="line">[Appium]   platforms</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   In previous versions (Appium &lt;= 1.13.x), the default was </span><br><span class="line">[Appium]   'automationName=UiAutomator1'</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   If you wish to use that automation instead of UiAutomator2, please </span><br><span class="line">[Appium]   add 'automationName=UiAutomator1' to your desired capabilities</span><br><span class="line">[Appium] </span><br><span class="line">[Appium]   For more information about drivers, please visit </span><br><span class="line">[Appium]   http://appium.io/docs/en/about-appium/intro/ and explore the </span><br><span class="line">[Appium]   'Drivers' menu</span><br><span class="line">[Appium] </span><br><span class="line">[Appium] ======================================================================</span><br><span class="line">[Appium] </span><br><span class="line">[Appium] Appium v1.17.1 creating new AndroidUiautomator2Driver (v1.44.2) session</span><br><span class="line">[BaseDriver] W3C capabilities and MJSONWP desired capabilities were provided</span><br><span class="line">[BaseDriver] Creating session with W3C capabilities: {</span><br><span class="line">[BaseDriver]   "alwaysMatch": {</span><br><span class="line">[BaseDriver]     "platformName": "android",</span><br><span class="line">[BaseDriver]     "appium:appActivity": "com.lemon.lemonban.activity.WelcomeActivity",</span><br><span class="line">[BaseDriver]     "appium:appPackage": "com.lemon.lemonban",</span><br><span class="line">[BaseDriver]     "appium:deviceName": "127.0.0.1:62001"</span><br><span class="line">[BaseDriver]   },</span><br><span class="line">[BaseDriver]   "firstMatch": [</span><br><span class="line">[BaseDriver]     {}</span><br><span class="line">[BaseDriver]   ]</span><br><span class="line">[BaseDriver] }</span><br><span class="line">[BaseDriver] Session created with session id: 56b02400-065d-4d7e-8a8f-a074c85ef643</span><br><span class="line">[UiAutomator2] Starting 'com.lemon.lemonban' directly on the device</span><br></pre></td></tr></tbody></table></figure><h3 id="使用环境变量中配置的adb-exe"><a href="#使用环境变量中配置的adb-exe" class="headerlink" title="使用环境变量中配置的adb.exe"></a>使用环境变量中配置的adb.exe</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Found 1 'build-tools' folders under '/Users/zhongxin/Library/Android/sdk' (newest first):</span><br><span class="line">[ADB]     /Users/zhongxin/Library/Android/sdk/build-tools/30.0.2</span><br><span class="line">[ADB] Using 'adb' from '/Users/zhongxin/Library/Android/sdk/platform-tools/adb'</span><br><span class="line"></span><br><span class="line">[AndroidDriver] Retrieving device list</span><br><span class="line">[ADB] Trying to find a connected android device</span><br><span class="line">[ADB] Getting connected devices...</span><br><span class="line">[ADB] Connected devices: [{"udid":"127.0.0.1:62001","state":"device"}]</span><br><span class="line">[AndroidDriver] Using device: 127.0.0.1:62001</span><br></pre></td></tr></tbody></table></figure><h3 id="连接设备，并检测设备API版本号"><a href="#连接设备，并检测设备API版本号" class="headerlink" title="连接设备，并检测设备API版本号"></a>连接设备，并检测设备API版本号</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Using 'adb' from '/Users/zhongxin/Library/Android/sdk/platform-tools/adb'</span><br><span class="line">[ADB] Setting device id to 127.0.0.1:62001</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell getprop ro.build.version.sdk'</span><br><span class="line">[ADB] Current device property 'ro.build.version.sdk': 25</span><br><span class="line">[ADB] Device API level: 25</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[AndroidDriver] No app sent in, not parsing package/activity</span><br></pre></td></tr></tbody></table></figure><h3 id="等待设备连接"><a href="#等待设备连接" class="headerlink" title="等待设备连接"></a>等待设备连接</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 wait-for-device'</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell echo ping'</span><br><span class="line"></span><br><span class="line">[AndroidDriver] Pushing settings apk to device...</span><br><span class="line">[ADB] Getting install status for io.appium.settings</span><br></pre></td></tr></tbody></table></figure><h3 id="检测Appium-Setting安装状态"><a href="#检测Appium-Setting安装状态" class="headerlink" title="检测Appium Setting安装状态"></a>检测Appium Setting安装状态</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package io.appium.settings'</span><br><span class="line">[ADB] 'io.appium.settings' is installed</span><br><span class="line"></span><br><span class="line">[ADB] Getting package info for 'io.appium.settings'</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package io.appium.settings'</span><br><span class="line">[ADB] The version name of the installed 'io.appium.settings' is greater or equal to the application version name ('3.1.0' &gt;= '3.1.0')</span><br><span class="line">[ADB] There is no need to install/upgrade '/Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/io.appium.settings/apks/settings_apk-debug.apk'</span><br><span class="line">[ADB] Getting IDs of all 'io.appium.settings' processes</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell 'pgrep --help; echo $?''</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell 'pgrep ^appium\\.settings$ || pgrep ^io\\.appium\\.setti$''</span><br><span class="line">[AndroidDriver] io.appium.settings is already running. There is no need to reset its permissions.</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell appops set io.appium.settings android\:mock_location allow'</span><br><span class="line">[Logcat] Starting logcat capture</span><br></pre></td></tr></tbody></table></figure><h3 id="端口转发Appium-Server端口8200连接到设备部中UiAutomator2-Server-6790"><a href="#端口转发Appium-Server端口8200连接到设备部中UiAutomator2-Server-6790" class="headerlink" title="端口转发Appium Server端口8200连接到设备部中UiAutomator2 Server 6790"></a>端口转发Appium Server端口8200连接到设备部中UiAutomator2 Server 6790</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[UiAutomator2] Forwarding UiAutomator2 Server port 6790 to 8200</span><br><span class="line">[ADB] Forwarding system: 8200 to device: 6790</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 forward tcp\:8200 tcp\:6790'</span><br></pre></td></tr></tbody></table></figure><h3 id="检测uiautomator2-server-uiautomator2-server-test安装状态"><a href="#检测uiautomator2-server-uiautomator2-server-test安装状态" class="headerlink" title="检测uiautomator2.server\uiautomator2.server.test安装状态"></a>检测uiautomator2.server\uiautomator2.server.test安装状态</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Getting install status for io.appium.uiautomator2.server</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package io.appium.uiautomator2.server'</span><br><span class="line">[ADB] 'io.appium.uiautomator2.server' is installed</span><br><span class="line">[ADB] Getting package info for 'io.appium.uiautomator2.server'</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package io.appium.uiautomator2.server'</span><br><span class="line">[ADB] The version name of the installed 'io.appium.uiautomator2.server' is greater or equal to the application version name ('4.5.5' &gt;= '4.5.5')</span><br><span class="line">[UiAutomator2] io.appium.uiautomator2.server installation state: sameVersionInstalled</span><br></pre></td></tr></tbody></table></figure><h3 id="验证uiautomator2-server-uiautomator2-server-test证书"><a href="#验证uiautomator2-server-uiautomator2-server-test证书" class="headerlink" title="验证uiautomator2.server\uiautomator2.server.test证书"></a>验证uiautomator2.server\uiautomator2.server.test证书</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Checking app cert for /Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v4.5.5.apk</span><br><span class="line">[ADB] Using 'apksigner.jar' from '/Users/zhongxin/Library/Android/sdk/build-tools/30.0.2/lib/apksigner.jar'</span><br><span class="line">[ADB] Starting apksigner: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/bin/java -Xmx1024M -Xss1m -jar /Users/zhongxin/Library/Android/sdk/build-tools/30.0.2/lib/apksigner.jar verify --print-certs /Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v4.5.5.apk</span><br><span class="line">[ADB] apksigner stdout: Signer #1 certificate DN: EMAILADDRESS=android@android.com, CN=Android, OU=Android, O=Android, L=Mountain View, ST=California, C=US</span><br><span class="line">[ADB] Signer #1 certificate SHA-256 digest: a40da80a59d170caa950cf15c18c454d47a39b26989d8b640ecd745ba71bf5dc</span><br><span class="line">[ADB] Signer #1 certificate SHA-1 digest: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81</span><br><span class="line">[ADB] Signer #1 certificate MD5 digest: e89b158e4bcf988ebd09eb83f5378e87</span><br><span class="line">[ADB] </span><br><span class="line">[ADB] '/Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v4.5.5.apk' is signed with the default certificate</span><br><span class="line">[ADB] Getting install status for io.appium.uiautomator2.server.test</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package io.appium.uiautomator2.server.test'</span><br><span class="line">[ADB] 'io.appium.uiautomator2.server.test' is installed</span><br><span class="line">[ADB] Checking app cert for /Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk</span><br><span class="line">[ADB] Starting apksigner: /Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/bin/java -Xmx1024M -Xss1m -jar /Users/zhongxin/Library/Android/sdk/build-tools/30.0.2/lib/apksigner.jar verify --print-certs /Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk</span><br><span class="line">[ADB] apksigner stdout: Signer #1 certificate DN: EMAILADDRESS=android@android.com, CN=Android, OU=Android, O=Android, L=Mountain View, ST=California, C=US</span><br><span class="line">[ADB] Signer #1 certificate SHA-256 digest: a40da80a59d170caa950cf15c18c454d47a39b26989d8b640ecd745ba71bf5dc</span><br><span class="line">[ADB] Signer #1 certificate SHA-1 digest: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81</span><br><span class="line">[ADB] Signer #1 certificate MD5 digest: e89b158e4bcf988ebd09eb83f5378e87</span><br><span class="line">[ADB] </span><br><span class="line">[ADB] '/Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk' is signed with the default certificate</span><br><span class="line">[UiAutomator2] Server packages are not going to be (re)installed</span><br><span class="line">[UiAutomator2] Waiting up to 30000ms for services to be available</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell pm list instrumentation'</span><br><span class="line">[UiAutomator2] Instrumentation target 'io.appium.uiautomator2.server.test/androidx.test.runner.AndroidJUnitRunner' is available</span><br><span class="line">[UiAutomator2] No app capability. Assuming it is already on the device</span><br></pre></td></tr></tbody></table></figure><h3 id="检测柠檬班App安装状态"><a href="#检测柠檬班App安装状态" class="headerlink" title="检测柠檬班App安装状态"></a>检测柠檬班App安装状态</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Getting install status for com.lemon.lemonban</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys package com.lemon.lemonban'</span><br><span class="line">[ADB] 'com.lemon.lemonban' is installed</span><br></pre></td></tr></tbody></table></figure><h3 id="强制关闭和清空柠檬班app的缓存"><a href="#强制关闭和清空柠檬班app的缓存" class="headerlink" title="强制关闭和清空柠檬班app的缓存"></a>强制关闭和清空柠檬班app的缓存</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell am force-stop com.lemon.lemonban'</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell pm clear com.lemon.lemonban'</span><br><span class="line">[AndroidDriver] Performed fast reset on the installed 'com.lemon.lemonban' application (stop and clear)</span><br><span class="line">[UiAutomator2] Performing shallow cleanup of automation leftovers</span><br><span class="line">[UiAutomator2] No obsolete sessions have been detected (Error: socket hang up)</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell am force-stop io.appium.uiautomator2.server.test'</span><br><span class="line">[UiAutomator2] Starting UIAutomator2 server 4.5.5</span><br><span class="line">[UiAutomator2] Using UIAutomator2 server from '/Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v4.5.5.apk' and test from '/Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk'</span><br><span class="line">[UiAutomator2] Waiting up to 30000ms for UiAutomator2 to be online...</span><br><span class="line">[ADB] Creating ADB subprocess with args: ["-P",5037,"-s","127.0.0.1:62001","shell","am","instrument","-w","io.appium.uiautomator2.server.test/androidx.test.runner.AndroidJUnitRunner"]</span><br><span class="line">[Instrumentation] io.appium.uiautomator2.server.test.AppiumUiAutomator2Server:</span><br><span class="line">[WD Proxy] Matched '/status' to command name 'getStatus'</span><br><span class="line">[WD Proxy] Proxying [GET /status] to [GET http://127.0.0.1:8200/wd/hub/status] with no body</span><br><span class="line">[WD Proxy] Got response with unknown status: {"code":"ECONNRESET"}</span><br><span class="line">[WD Proxy] Matched '/status' to command name 'getStatus'</span><br><span class="line">[WD Proxy] Proxying [GET /status] to [GET http://127.0.0.1:8200/wd/hub/status] with no body</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"None","value":{"ready":true,"message":"UiAutomator2 Server is ready to accept commands"}}</span><br><span class="line">[UiAutomator2] The initialization of the instrumentation process took 2035ms</span><br><span class="line">[WD Proxy] Matched '/session' to command name 'createSession'</span><br><span class="line">[WD Proxy] Proxying [POST /session] to [POST http://127.0.0.1:8200/wd/hub/session] with body: {"capabilities":{"firstMatch":[{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001"},"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001","deviceUDID":"127.0.0.1:62001"}],"alwaysMatch":{}}}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","capabilities":{"firstMatch":[{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001"},"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001","deviceUDID":"127.0.0.1:62001"}],"alwaysMatch":{}}}}</span><br><span class="line">[WD Proxy] Determined the downstream protocol as 'W3C'</span><br><span class="line">[WD Proxy] Proxying [GET /appium/device/info] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597/appium/device/info] with no body</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{"androidId":"784F438584880000","manufacturer":"samsung","model":"SM-N950N","brand":"samsung","apiVersion":"25","platformVersion":"7.1.2","carrierName":"CMCC","realDisplaySize":"900x1600","displayDensity":320,"networks":[{"type":1,"typeName":"WIFI","subtype":0,"subtypeName":"","isConnected":true,"detailedState":"CONNECTED","state":"CONNECTED","extraInfo":"\"WiredSSID\"","isAvailable":true,"isFailover":false,"isRoaming":false,"capabilities":{"transportTypes":"TRANSPORT_WIFI","networkCapabilities":"NET_CAPABILITY_NOT_METERED,NET_CAPABILITY_NOT_RESTRICTED,NET_CAPABILITY_NOT_VPN,NET_CAPABILITY_NOT_ROAMING,NET_CAPABILITY_INTERNET,NET_CAPABILITY_TRUSTED,NET_CAPABILITY_VALIDATED","linkUpstreamBandwidthKbps":1048576,"linkDownBandwidthKbps":1048576,"signalStrength":-55,"networkSpecifier":null,"SSID":null}}],"locale":"zh_CN","timeZone":"Asia\/Shanghai","bluetooth":{"state":"OFF"}}}</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell dumpsys window'</span><br><span class="line">[AndroidDriver] Screen already unlocked, doing nothing</span><br><span class="line">[UiAutomator2] Starting 'com.lemon.lemonban/com.lemon.lemonban.activity.WelcomeActivity and waiting for 'com.lemon.lemonban/com.lemon.lemonban.activity.WelcomeActivity'</span><br></pre></td></tr></tbody></table></figure><h3 id="启动柠檬班App"><a href="#启动柠檬班App" class="headerlink" title="启动柠檬班App"></a>启动柠檬班App</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell am start -W -n com.lemon.lemonban/com.lemon.lemonban.activity.WelcomeActivity -S'</span><br><span class="line">[WD Proxy] Proxying [GET /appium/device/pixel_ratio] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597/appium/device/pixel_ratio] with body: {}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":2}</span><br><span class="line">[WD Proxy] Matched '/appium/device/system_bars' to command name 'getSystemBars'</span><br><span class="line">[WD Proxy] Proxying [GET /appium/device/system_bars] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597/appium/device/system_bars] with body: {}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{"statusBar":48}}</span><br><span class="line">[WD Proxy] Matched '/window/current/size' to command name 'getWindowSize'</span><br><span class="line">[WD Proxy] Proxying [GET /window/current/size] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597/window/current/size] with body: {}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{"height":1600,"width":900}}</span><br><span class="line">[Appium] New AndroidUiautomator2Driver session created successfully, session 56b02400-065d-4d7e-8a8f-a074c85ef643 added to master session list</span><br><span class="line">[BaseDriver] Event 'newSessionStarted' logged at 1601112375537 (17:26:15 GMT+0800 (中国标准时间))</span><br><span class="line">[W3C (56b02400)] Cached the protocol value 'W3C' for the new session 56b02400-065d-4d7e-8a8f-a074c85ef643</span><br><span class="line">[W3C (56b02400)] Responding to client with driver.createSession() result: {"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001"},"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001","deviceUDID":"127.0.0.1:62001","deviceApiLevel":25,"platformVersion":"7.1.2","deviceScreenSize":"900x1600","deviceScreenDensity":320,"deviceModel":"SM-N950N","deviceManufacturer":"samsung","pixelRatio":2,"statBarHeight":48,"viewportRect":{"left":0,"top":48,"width":900,"height":1552}}}</span><br><span class="line">[HTTP] &lt;-- POST /wd/hub/session 200 7445 ms - 869</span><br><span class="line">[HTTP] </span><br><span class="line">[HTTP] --&gt; GET /wd/hub/session/56b02400-065d-4d7e-8a8f-a074c85ef643</span><br><span class="line">[HTTP] {}</span><br><span class="line">[W3C (56b02400)] Calling AppiumDriver.getSession() with args: ["56b02400-065d-4d7e-8a8f-a074c85ef643"]</span><br><span class="line">[UiAutomator2] Getting session details from server to mix in</span><br><span class="line">[WD Proxy] Matched '/' to command name 'getSession'</span><br><span class="line">[WD Proxy] Proxying [GET /] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597] with body: {}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{}}</span><br><span class="line">[W3C (56b02400)] Responding to client with driver.getSession() result: {"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001"},"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001","deviceUDID":"127.0.0.1:62001","deviceApiLevel":25,"platformVersion":"7.1.2","deviceScreenSize":"900x1600","deviceScreenDensity":320,"deviceModel":"SM-N950N","deviceManufacturer":"samsung","pixelRatio":2,"statBarHeight":48,"viewportRect":{"left":0,"top":48,"width":900,"height":1552}}</span><br><span class="line">[HTTP] &lt;-- GET /wd/hub/session/56b02400-065d-4d7e-8a8f-a074c85ef643 200 8 ms - 801</span><br><span class="line">[HTTP] </span><br><span class="line">[HTTP] --&gt; GET /wd/hub/session/56b02400-065d-4d7e-8a8f-a074c85ef643</span><br><span class="line">[HTTP] {}</span><br><span class="line">[W3C (56b02400)] Calling AppiumDriver.getSession() with args: ["56b02400-065d-4d7e-8a8f-a074c85ef643"]</span><br><span class="line">[UiAutomator2] Getting session details from server to mix in</span><br><span class="line">[WD Proxy] Matched '/' to command name 'getSession'</span><br><span class="line">[WD Proxy] Proxying [GET /] to [GET http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597] with body: {}</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":{}}</span><br><span class="line">[W3C (56b02400)] Responding to client with driver.getSession() result: {"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001"},"platformName":"android","appActivity":"com.lemon.lemonban.activity.WelcomeActivity","appPackage":"com.lemon.lemonban","deviceName":"127.0.0.1:62001","deviceUDID":"127.0.0.1:62001","deviceApiLevel":25,"platformVersion":"7.1.2","deviceScreenSize":"900x1600","deviceScreenDensity":320,"deviceModel":"SM-N950N","deviceManufacturer":"samsung","pixelRatio":2,"statBarHeight":48,"viewportRect":{"left":0,"top":48,"width":900,"height":1552}}</span><br><span class="line">[HTTP] &lt;-- GET /wd/hub/session/56b02400-065d-4d7e-8a8f-a074c85ef643 200 10 ms - 801</span><br><span class="line">[HTTP] </span><br><span class="line">[BaseDriver] Shutting down because we waited 60 seconds for a command</span><br><span class="line">[Appium] Closing session, cause was 'New Command Timeout of 60 seconds expired. Try customizing the timeout using the 'newCommandTimeout' desired capability'</span><br><span class="line">[Appium] Removing session '56b02400-065d-4d7e-8a8f-a074c85ef643' from our master session list</span><br><span class="line">[UiAutomator2] Deleting UiAutomator2 session</span><br><span class="line">[UiAutomator2] Deleting UiAutomator2 server session</span><br><span class="line">[WD Proxy] Matched '/' to command name 'deleteSession'</span><br><span class="line">[WD Proxy] Proxying [DELETE /] to [DELETE http://127.0.0.1:8200/wd/hub/session/9d7c96d1-9a56-41dc-ae9a-82078c4f7597] with no body</span><br><span class="line">[WD Proxy] Got response with status 200: {"sessionId":"9d7c96d1-9a56-41dc-ae9a-82078c4f7597","value":null}</span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 shell am force-stop com.lemon.lemonban'</span><br><span class="line">[Instrumentation] .</span><br><span class="line">[Instrumentation] Time: 63.052</span><br><span class="line">[Instrumentation] </span><br><span class="line">[Instrumentation] OK (1 test)</span><br><span class="line">[Instrumentation] The process has exited with code 0</span><br><span class="line">[Logcat] Stopping logcat capture</span><br><span class="line">[ADB] Removing forwarded port socket connection: 8200 </span><br><span class="line">[ADB] Running '/Users/zhongxin/Library/Android/sdk/platform-tools/adb -P 5037 -s 127.0.0.1\:62001 forward --remove tcp\:8200'</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-adb常用命令-32&quot;&gt;&lt;a href=&quot;#Java自动化测试-adb常用命令-32&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(adb常用命令 32)&quot;&gt;&lt;/a&gt;Java自动化测试(adb常用命令 32)&lt;/h1&gt;&lt;h1 id=&quot;adb&quot;&gt;&lt;a href=&quot;#adb&quot; class=&quot;headerlink&quot; title=&quot;adb&quot;&gt;&lt;/a&gt;adb&lt;/h1&gt;&lt;p&gt;adb「Android Bebug Bridge」是用来连接安卓和PC的桥梁&lt;/p&gt;
&lt;p&gt;常用操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装卸载apk&lt;/li&gt;
&lt;li&gt;推送拷贝文件&lt;/li&gt;
&lt;li&gt;查看设备硬件信息&lt;/li&gt;
&lt;li&gt;查看应用程序占用资源&lt;/li&gt;
&lt;li&gt;在设备执行shell命令&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(app自动化环境搭建 31)</title>
    <link href="http://zx490336534.github.io/article/e9b41654.html"/>
    <id>http://zx490336534.github.io/article/e9b41654.html</id>
    <published>2020-09-23T23:18:46.273Z</published>
    <updated>2021-04-22T13:58:48.595Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-app自动化环境搭建-31"><a href="#Java自动化测试-app自动化环境搭建-31" class="headerlink" title="Java自动化测试(app自动化环境搭建 31)"></a>Java自动化测试(app自动化环境搭建 31)</h1><h2 id="Appium"><a href="#Appium" class="headerlink" title="Appium"></a>Appium</h2><blockquote><p>官网：<a href="http://appium.io/">http://appium.io/</a></p><p>github：<a href="https://github.com/appium/appium">https://github.com/appium/appium</a></p><p>Appium is an open source test automation framework for use with native, <a href="http://appium.io/docs/en/writing-running-appium/web/hybrid/">hybrid</a> and mobile web apps.<br>It drives iOS, Android, and Windows apps using the WebDriver protocol.</p></blockquote><p>第三方自动化工具，扩充了Selenium WebDriver协议，在原有的基础上添加了移动端测试API</p><p>是一个开源的，跨平台的自动化测试工具，可以用于app的自动化测试</p><p>支持<code>android</code>，<code>ios</code>，<code>firefox os</code>等操作系统下的app测试</p><span id="more"></span><h2 id="Appium组件"><a href="#Appium组件" class="headerlink" title="Appium组件"></a>Appium组件</h2><h3 id="Appium-Server"><a href="#Appium-Server" class="headerlink" title="Appium Server"></a>Appium Server</h3><p>Appium的核心，实质上是一个web接口服务器，使用node.js实现</p><h3 id="Appium-GUI"><a href="#Appium-GUI" class="headerlink" title="Appium GUI"></a>Appium GUI</h3><p>Appium Desktop前身，已经停止维护，封装的Appium Server 是1.4.16</p><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1e0b8l2xj30w40u0akx.jpg" alt="Appium GUI"></p><h3 id="Appium-Desktop"><a href="#Appium-Desktop" class="headerlink" title="Appium Desktop"></a>Appium Desktop</h3><p>内嵌了 Appium Server，提供GUI界面，还包括其他工具的整合（如Appium Inspector）</p><h3 id="Appium-Client"><a href="#Appium-Client" class="headerlink" title="Appium Client"></a>Appium Client</h3><p>客户端向Appium Server发起请求，可以用不同语言来实现</p><p>例如java：<a href="https://github.com/appium/java-client">https://github.com/appium/java-client</a></p><h2 id="App自动化测试环境搭建"><a href="#App自动化测试环境搭建" class="headerlink" title="App自动化测试环境搭建"></a>App自动化测试环境搭建</h2><p>配置Android sdk环境</p><ol><li>SDK：软件开发套件</li><li>adb：是android sdk的一个工具，用来连接安卓手机和PC端端桥梁</li></ol><p>在mac上安装：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew cask install android-platform-tools</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">'export PATH=$PATH:~/.android-sdk-macosx/platform-tools/'</span> &gt;&gt; ~/.bash_profile</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.bash_profile</span></span><br></pre></td></tr></tbody></table></figure><p>检查一下是否安装完成：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb version</span></span><br></pre></td></tr></tbody></table></figure><p>  <img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1efk3daej311q0u0qpg.jpg" alt="检查环境"></p><h2 id="模拟器下载"><a href="#模拟器下载" class="headerlink" title="模拟器下载"></a>模拟器下载</h2><blockquote><p><a href="https://www.yeshen.com/">https://www.yeshen.com/</a></p></blockquote><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1ekwvamqj30u01cke81.jpg" alt="模拟器"></p><h2 id="Appium-桌面版下载"><a href="#Appium-桌面版下载" class="headerlink" title="Appium 桌面版下载"></a>Appium 桌面版下载</h2><blockquote><p><a href="https://github.com/appium/appium-desktop/releases/tag/v1.18.0-2">https://github.com/appium/appium-desktop/releases/tag/v1.18.0-2</a></p></blockquote><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1epl0irhj30w40u07f5.jpg" alt="Appium 桌面版"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1eq9gemij30w40u0gwm.jpg" alt="启动"></p><h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><h3 id="配置Maven"><a href="#配置Maven" class="headerlink" title="配置Maven"></a>配置Maven</h3><h4 id="下载-java-client"><a href="#下载-java-client" class="headerlink" title="下载 java-client"></a>下载 java-client</h4><blockquote><p><a href="https://mvnrepository.com/artifact/io.appium/java-client">https://mvnrepository.com/artifact/io.appium/java-client</a></p></blockquote><h3 id="配置设备信息"><a href="#配置设备信息" class="headerlink" title="配置设备信息"></a>配置设备信息</h3><ol><li>设备平台</li><li>设备名称</li><li>APP包名</li><li>App activity名称</li></ol><p>使用<code>adb connect 127.0.0.1:62001</code>连接设备</p><p>其中<code>62001</code>是夜神模拟器的端口</p><h4 id="连接设备"><a href="#连接设备" class="headerlink" title="连接设备"></a>连接设备</h4><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlly1gj1f3ne2vhj311q0u01kx.jpg" alt="连接设备"></p><h4 id="查看包名"><a href="#查看包名" class="headerlink" title="查看包名"></a>查看包名</h4><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> aapt dump badging xxxx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> aapt dump badging /Users/zhongxin/Downloads/app自动化工具包/APK包/lemonban_release_v2.1.2_finally.apk</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> /Applications/NoxAppPlayer.app/Contents/MacOS/aapt dump badging /Users/zhongxin/Downloads/app自动化工具包/APK包/lemonban_release_v2.1.2_finally.apk</span></span><br><span class="line">package: name='com.lemon.lemonban' versionCode='20181113' versionName='2.1.2' platformBuildVersionName='7.1.1'</span><br><span class="line">sdkVersion:'15'</span><br><span class="line">targetSdkVersion:'25'</span><br><span class="line">uses-permission: name='android.permission.ACCESS_NETWORK_STATE'</span><br><span class="line">uses-permission: name='android.permission.INTERNET'</span><br><span class="line">uses-permission: name='android.permission.WRITE_EXTERNAL_STORAGE'</span><br><span class="line">uses-permission: name='android.permission.READ_EXTERNAL_STORAGE'</span><br><span class="line">uses-permission: name='android.permission.CAMERA'</span><br><span class="line">uses-permission: name='android.permission.INTERNET'</span><br><span class="line">uses-permission: name='android.permission.READ_PHONE_STATE'</span><br><span class="line">uses-permission: name='android.permission.ACCESS_NETWORK_STATE'</span><br><span class="line">uses-permission: name='android.permission.CHANGE_WIFI_STATE'</span><br><span class="line">uses-permission: name='android.permission.ACCESS_WIFI_STATE'</span><br><span class="line">uses-permission: name='android.permission.WAKE_LOCK'</span><br><span class="line">uses-permission: name='android.permission.RECEIVE_BOOT_COMPLETED'</span><br><span class="line">uses-permission: name='android.permission.WRITE_EXTERNAL_STORAGE'</span><br><span class="line">uses-permission: name='android.permission.VIBRATE'</span><br><span class="line">uses-permission: name='android.permission.GET_TASKS'</span><br><span class="line">uses-permission: name='android.permission.BLUETOOTH'</span><br><span class="line">uses-permission: name='android.permission.BLUETOOTH_ADMIN'</span><br><span class="line">uses-permission: name='android.permission.ACCESS_FINE_LOCATION'</span><br><span class="line">uses-permission: name='android.permission.ACCESS_COARSE_LOCATION'</span><br><span class="line">uses-permission: name='android.permission.SYSTEM_ALERT_WINDOW'</span><br><span class="line">uses-permission: name='getui.permission.GetuiService.com.lemon.lemonban'</span><br><span class="line">uses-permission: name='android.permission.MOUNT_UNMOUNT_FILESYSTEMS'</span><br><span class="line">application-label:'柠檬班'</span><br><span class="line">application-label-af:'柠檬班'</span><br><span class="line">application-label-am:'柠檬班'</span><br><span class="line">application-label-ar:'柠檬班'</span><br><span class="line">application-label-az-AZ:'柠檬班'</span><br><span class="line">application-label-be-BY:'柠檬班'</span><br><span class="line">application-label-bg:'柠檬班'</span><br><span class="line">application-label-bn-BD:'柠檬班'</span><br><span class="line">application-label-bs-BA:'柠檬班'</span><br><span class="line">application-label-ca:'柠檬班'</span><br><span class="line">application-label-cs:'柠檬班'</span><br><span class="line">application-label-da:'柠檬班'</span><br><span class="line">application-label-de:'柠檬班'</span><br><span class="line">application-label-el:'柠檬班'</span><br><span class="line">application-label-en-AU:'柠檬班'</span><br><span class="line">application-label-en-GB:'柠檬班'</span><br><span class="line">application-label-en-IN:'柠檬班'</span><br><span class="line">application-label-es:'柠檬班'</span><br><span class="line">application-label-es-US:'柠檬班'</span><br><span class="line">application-label-et-EE:'柠檬班'</span><br><span class="line">application-label-eu-ES:'柠檬班'</span><br><span class="line">application-label-fa:'柠檬班'</span><br><span class="line">application-label-fi:'柠檬班'</span><br><span class="line">application-label-fr:'柠檬班'</span><br><span class="line">application-label-fr-CA:'柠檬班'</span><br><span class="line">application-label-gl-ES:'柠檬班'</span><br><span class="line">application-label-gu-IN:'柠檬班'</span><br><span class="line">application-label-hi:'柠檬班'</span><br><span class="line">application-label-hr:'柠檬班'</span><br><span class="line">application-label-hu:'柠檬班'</span><br><span class="line">application-label-hy-AM:'柠檬班'</span><br><span class="line">application-label-in:'柠檬班'</span><br><span class="line">application-label-is-IS:'柠檬班'</span><br><span class="line">application-label-it:'柠檬班'</span><br><span class="line">application-label-iw:'柠檬班'</span><br><span class="line">application-label-ja:'柠檬班'</span><br><span class="line">application-label-ka-GE:'柠檬班'</span><br><span class="line">application-label-kk-KZ:'柠檬班'</span><br><span class="line">application-label-km-KH:'柠檬班'</span><br><span class="line">application-label-kn-IN:'柠檬班'</span><br><span class="line">application-label-ko:'柠檬班'</span><br><span class="line">application-label-ky-KG:'柠檬班'</span><br><span class="line">application-label-lo-LA:'柠檬班'</span><br><span class="line">application-label-lt:'柠檬班'</span><br><span class="line">application-label-lv:'柠檬班'</span><br><span class="line">application-label-mk-MK:'柠檬班'</span><br><span class="line">application-label-ml-IN:'柠檬班'</span><br><span class="line">application-label-mn-MN:'柠檬班'</span><br><span class="line">application-label-mr-IN:'柠檬班'</span><br><span class="line">application-label-ms-MY:'柠檬班'</span><br><span class="line">application-label-my-MM:'柠檬班'</span><br><span class="line">application-label-nb:'柠檬班'</span><br><span class="line">application-label-ne-NP:'柠檬班'</span><br><span class="line">application-label-nl:'柠檬班'</span><br><span class="line">application-label-pa-IN:'柠檬班'</span><br><span class="line">application-label-pl:'柠檬班'</span><br><span class="line">application-label-pt:'柠檬班'</span><br><span class="line">application-label-pt-BR:'柠檬班'</span><br><span class="line">application-label-pt-PT:'柠檬班'</span><br><span class="line">application-label-ro:'柠檬班'</span><br><span class="line">application-label-ru:'柠檬班'</span><br><span class="line">application-label-si-LK:'柠檬班'</span><br><span class="line">application-label-sk:'柠檬班'</span><br><span class="line">application-label-sl:'柠檬班'</span><br><span class="line">application-label-sq-AL:'柠檬班'</span><br><span class="line">application-label-sr:'柠檬班'</span><br><span class="line">application-label-sr-Latn:'柠檬班'</span><br><span class="line">application-label-sv:'柠檬班'</span><br><span class="line">application-label-sw:'柠檬班'</span><br><span class="line">application-label-ta-IN:'柠檬班'</span><br><span class="line">application-label-te-IN:'柠檬班'</span><br><span class="line">application-label-th:'柠檬班'</span><br><span class="line">application-label-tl:'柠檬班'</span><br><span class="line">application-label-tr:'柠檬班'</span><br><span class="line">application-label-uk:'柠檬班'</span><br><span class="line">application-label-ur-PK:'柠檬班'</span><br><span class="line">application-label-uz-UZ:'柠檬班'</span><br><span class="line">application-label-vi:'柠檬班'</span><br><span class="line">application-label-zh:'柠檬班'</span><br><span class="line">application-label-zh-CN:'柠檬班'</span><br><span class="line">application-label-zh-HK:'柠檬班'</span><br><span class="line">application-label-zh-TW:'柠檬班'</span><br><span class="line">application-label-zu:'柠檬班'</span><br><span class="line">application-icon-120:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-160:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-240:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-320:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-480:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-640:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application-icon-65534:'res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">application: label='柠檬班' icon='res/mipmap-anydpi-v26/ic_launcher.xml'</span><br><span class="line">launchable-activity: name='com.lemon.lemonban.activity.WelcomeActivity'  label='' icon=''</span><br><span class="line">feature-group: label=''</span><br><span class="line">  uses-feature: name='android.hardware.bluetooth'</span><br><span class="line">  uses-implied-feature: name='android.hardware.bluetooth' reason='requested android.permission.BLUETOOTH permission, requested android.permission.BLUETOOTH_ADMIN permission, and targetSdkVersion &gt; 4'</span><br><span class="line">  uses-feature: name='android.hardware.camera'</span><br><span class="line">  uses-implied-feature: name='android.hardware.camera' reason='requested android.permission.CAMERA permission'</span><br><span class="line">  uses-feature: name='android.hardware.faketouch'</span><br><span class="line">  uses-implied-feature: name='android.hardware.faketouch' reason='default feature for all apps'</span><br><span class="line">  uses-feature: name='android.hardware.location'</span><br><span class="line">  uses-implied-feature: name='android.hardware.location' reason='requested android.permission.ACCESS_COARSE_LOCATION permission, and requested android.permission.ACCESS_FINE_LOCATION permission'</span><br><span class="line">  uses-feature: name='android.hardware.screen.portrait'</span><br><span class="line">  uses-implied-feature: name='android.hardware.screen.portrait' reason='one or more activities have specified a portrait orientation'</span><br><span class="line">  uses-feature: name='android.hardware.wifi'</span><br><span class="line">  uses-implied-feature: name='android.hardware.wifi' reason='requested android.permission.ACCESS_WIFI_STATE permission, and requested android.permission.CHANGE_WIFI_STATE permission'</span><br><span class="line">main</span><br><span class="line">other-activities</span><br><span class="line">other-receivers</span><br><span class="line">other-services</span><br><span class="line">supports-screens: 'small' 'normal' 'large' 'xlarge'</span><br><span class="line">supports-any-density: 'true'</span><br><span class="line">locales: '--_--' 'af' 'am' 'ar' 'az-AZ' 'be-BY' 'bg' 'bn-BD' 'bs-BA' 'ca' 'cs' 'da' 'de' 'el' 'en-AU' 'en-GB' 'en-IN' 'es' 'es-US' 'et-EE' 'eu-ES' 'fa' 'fi' 'fr' 'fr-CA' 'gl-ES' 'gu-IN' 'hi' 'hr' 'hu' 'hy-AM' 'in' 'is-IS' 'it' 'iw' 'ja' 'ka-GE' 'kk-KZ' 'km-KH' 'kn-IN' 'ko' 'ky-KG' 'lo-LA' 'lt' 'lv' 'mk-MK' 'ml-IN' 'mn-MN' 'mr-IN' 'ms-MY' 'my-MM' 'nb' 'ne-NP' 'nl' 'pa-IN' 'pl' 'pt' 'pt-BR' 'pt-PT' 'ro' 'ru' 'si-LK' 'sk' 'sl' 'sq-AL' 'sr' 'sr-Latn' 'sv' 'sw' 'ta-IN' 'te-IN' 'th' 'tl' 'tr' 'uk' 'ur-PK' 'uz-UZ' 'vi' 'zh' 'zh-CN' 'zh-HK' 'zh-TW' 'zu'</span><br><span class="line">densities: '120' '160' '240' '320' '480' '640' '65534'</span><br><span class="line">(base) zhongxindeMacBook-Pro:~ zhongxin$ </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="代码上连接设备"><a href="#代码上连接设备" class="headerlink" title="代码上连接设备"></a>代码上连接设备</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppDemo</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="comment">//配置设备信息</span></span><br><span class="line">        DesiredCapabilities capabilities = <span class="keyword">new</span> DesiredCapabilities();</span><br><span class="line">        <span class="comment">//1.设备平台</span></span><br><span class="line">        capabilities.setCapability(<span class="string">"platformName"</span>, <span class="string">"Android"</span>);</span><br><span class="line">        <span class="comment">//2.设备名称</span></span><br><span class="line">        capabilities.setCapability(<span class="string">"deviceName"</span>, <span class="string">"127.0.0.1:62001"</span>);</span><br><span class="line">        <span class="comment">//3.APP包名</span></span><br><span class="line">        capabilities.setCapability(<span class="string">"appPackage"</span>, <span class="string">"com.lemon.lemonban"</span>);</span><br><span class="line">        <span class="comment">//4.App activity名称</span></span><br><span class="line">        capabilities.setCapability(<span class="string">"appActivity"</span>, <span class="string">"com.lemon.lemonban.activity.WelcomeActivity"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-app自动化环境搭建-31&quot;&gt;&lt;a href=&quot;#Java自动化测试-app自动化环境搭建-31&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(app自动化环境搭建 31)&quot;&gt;&lt;/a&gt;Java自动化测试(app自动化环境搭建 31)&lt;/h1&gt;&lt;h2 id=&quot;Appium&quot;&gt;&lt;a href=&quot;#Appium&quot; class=&quot;headerlink&quot; title=&quot;Appium&quot;&gt;&lt;/a&gt;Appium&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;官网：&lt;a href=&quot;http://appium.io/&quot;&gt;http://appium.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github：&lt;a href=&quot;https://github.com/appium/appium&quot;&gt;https://github.com/appium/appium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Appium is an open source test automation framework for use with native, &lt;a href=&quot;http://appium.io/docs/en/writing-running-appium/web/hybrid/&quot;&gt;hybrid&lt;/a&gt; and mobile web apps.&lt;br&gt;It drives iOS, Android, and Windows apps using the WebDriver protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第三方自动化工具，扩充了Selenium WebDriver协议，在原有的基础上添加了移动端测试API&lt;/p&gt;
&lt;p&gt;是一个开源的，跨平台的自动化测试工具，可以用于app的自动化测试&lt;/p&gt;
&lt;p&gt;支持&lt;code&gt;android&lt;/code&gt;，&lt;code&gt;ios&lt;/code&gt;，&lt;code&gt;firefox os&lt;/code&gt;等操作系统下的app测试&lt;/p&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(无头浏览器 30)</title>
    <link href="http://zx490336534.github.io/article/133e5506.html"/>
    <id>http://zx490336534.github.io/article/133e5506.html</id>
    <published>2020-09-21T22:54:46.805Z</published>
    <updated>2021-04-22T13:58:48.648Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-无头浏览器-30"><a href="#Java自动化测试-无头浏览器-30" class="headerlink" title="Java自动化测试(无头浏览器 30)"></a>Java自动化测试(无头浏览器 30)</h1><h2 id="什么是chrome无头浏览器"><a href="#什么是chrome无头浏览器" class="headerlink" title="什么是chrome无头浏览器"></a>什么是chrome无头浏览器</h2><p>后台运行浏览器</p><h2 id="设置无头浏览器"><a href="#设置无头浏览器" class="headerlink" title="设置无头浏览器"></a>设置无头浏览器</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ChromeOptions chromeOptions = <span class="keyword">new</span> ChromeOptions();</span><br><span class="line">chromeOptions.addArguments(<span class="string">"--headless"</span>);</span><br><span class="line">driver = <span class="keyword">new</span> ChromeDriver(chromeOptions);</span><br></pre></td></tr></tbody></table></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-无头浏览器-30&quot;&gt;&lt;a href=&quot;#Java自动化测试-无头浏览器-30&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(无头浏览器 30)&quot;&gt;&lt;/a&gt;Java自动化测试(无头浏览器 30)&lt;/h1&gt;&lt;h2 id=&quot;什么是chrome无头浏览器&quot;&gt;&lt;a href=&quot;#什么是chrome无头浏览器&quot; class=&quot;headerlink&quot; title=&quot;什么是chrome无头浏览器&quot;&gt;&lt;/a&gt;什么是chrome无头浏览器&lt;/h2&gt;&lt;p&gt;后台运行浏览器&lt;/p&gt;
&lt;h2 id=&quot;设置无头浏览器&quot;&gt;&lt;a href=&quot;#设置无头浏览器&quot; class=&quot;headerlink&quot; title=&quot;设置无头浏览器&quot;&gt;&lt;/a&gt;设置无头浏览器&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ChromeOptions chromeOptions = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ChromeOptions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chromeOptions.addArguments(&lt;span class=&quot;string&quot;&gt;&quot;--headless&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;driver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ChromeDriver(chromeOptions);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(web自动化测试框架2 29)</title>
    <link href="http://zx490336534.github.io/article/badd5c71.html"/>
    <id>http://zx490336534.github.io/article/badd5c71.html</id>
    <published>2020-09-16T23:11:50.643Z</published>
    <updated>2021-04-22T13:58:48.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-web自动化测试框架2-29"><a href="#Java自动化测试-web自动化测试框架2-29" class="headerlink" title="Java自动化测试(web自动化测试框架2 29)"></a>Java自动化测试(web自动化测试框架2 29)</h1><blockquote><p>项目地址:<a href="https://github.com/zx490336534/java_web_base">https://github.com/zx490336534/java_web_base</a></p></blockquote><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><span id="more"></span><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhongxin.common.BaseCase;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.OutputType;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.TakesScreenshot;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScreenShotDemo</span> <span class="keyword">extends</span> <span class="title">BaseCase</span> </span>{</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        WebDriver driver = open(<span class="string">"chrome"</span>);</span><br><span class="line">        driver.get(<span class="string">"htts://www.baidu.com"</span>);</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        TakesScreenshot screenshot = (TakesScreenshot) driver;</span><br><span class="line">        File file = screenshot.getScreenshotAs(OutputType.FILE);</span><br><span class="line">        System.out.println(file.getAbsoluteFile());</span><br><span class="line">        File destFile = <span class="keyword">new</span> File(<span class="string">"aaa.png"</span>);</span><br><span class="line">        FileUtils.moveFile(file, destFile);</span><br><span class="line">        close(driver);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>强制类型转换<code>driver</code></p><p><code>TakesScreenshot screenshot = (TakesScreenshot) driver;</code></p><p>在执行测试的时候，使用截图的场景为：当执行失败的时候进行截图</p><p>需要使用<code>监听</code>，判断执行是否成功</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhongxin.cases.LoginCase;</span><br><span class="line"><span class="keyword">import</span> com.zhongxin.common.BaseCase;</span><br><span class="line"><span class="keyword">import</span> com.zhongxin.utils.ScreenShotUtils;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookCallBack;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookable;</span><br><span class="line"><span class="keyword">import</span> org.testng.ITestResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScreenShotListener</span> <span class="keyword">implements</span> <span class="title">IHookable</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(IHookCallBack iHookCallBack, ITestResult iTestResult)</span> </span>{</span><br><span class="line">        <span class="comment">// iHookCallBack 用例执行@Test方法的</span></span><br><span class="line">        <span class="comment">// iTestResult @Test方法的结果(@Test对象/方法名/是否抛出异常)</span></span><br><span class="line">        iHookCallBack.runTestMethod(iTestResult);</span><br><span class="line">        Throwable throwable = iTestResult.getThrowable();</span><br><span class="line">        <span class="keyword">if</span> (throwable != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="comment">//throwable不等于异常说明@Test出现异常了，执行截图</span></span><br><span class="line">            Object object = iTestResult.getInstance();</span><br><span class="line">            BaseCase logincase = (BaseCase) object;</span><br><span class="line">            <span class="comment">//获取当前@Test方法名</span></span><br><span class="line">            String methodName = iTestResult.getName();</span><br><span class="line">            <span class="comment">//获取当前@Test类名</span></span><br><span class="line">            String className = iTestResult.getInstanceName();</span><br><span class="line">            String destFilename = className + <span class="string">"_"</span> + methodName + <span class="string">"_"</span> + System.currentTimeMillis() + <span class="string">".png"</span>;</span><br><span class="line">            ScreenShotUtils.screenShot(logincase.driver, destFilename);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在<code>testng.xml</code>中添加</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">suite</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://testng.org/testng-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">"futureloan"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listeners</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.zhongxin.listeners.ScreenShotListener"</span>&gt;</span><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listeners</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">"登录测试"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.zhongxin.cases.LoginCase"</span>&gt;</span><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="将截图展示在Allure报告中"><a href="#将截图展示在Allure报告中" class="headerlink" title="将截图展示在Allure报告中"></a>将截图展示在Allure报告中</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhongxin.common.BaseCase;</span><br><span class="line"><span class="keyword">import</span> io.qameta.allure.Attachment;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.OutputType;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.TakesScreenshot;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookCallBack;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookable;</span><br><span class="line"><span class="keyword">import</span> org.testng.ITestResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllureReportListener</span> <span class="keyword">implements</span> <span class="title">IHookable</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Attachment(value = "Page screenshot", type = "image/png")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] saveScreenshot(<span class="keyword">byte</span>[] screenShot) {</span><br><span class="line">        <span class="keyword">return</span> screenShot;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(IHookCallBack iHookCallBack, ITestResult iTestResult)</span> </span>{</span><br><span class="line">        iHookCallBack.runTestMethod(iTestResult);</span><br><span class="line">        Throwable throwable = iTestResult.getThrowable();</span><br><span class="line">        <span class="keyword">if</span> (throwable != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="comment">//throwable不等于异常说明@Test出现异常了，执行截图</span></span><br><span class="line">            Object object = iTestResult.getInstance();</span><br><span class="line">            BaseCase baseCase = (BaseCase) object;</span><br><span class="line">            TakesScreenshot screenshot = (TakesScreenshot) baseCase.driver;</span><br><span class="line">            <span class="keyword">byte</span>[] screenshotAs = screenshot.getScreenshotAs(OutputType.BYTES);</span><br><span class="line">            saveScreenshot(screenshotAs);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在<code>testng.xml</code>中</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listeners</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.zhongxin.listeners.AllureReportListener"</span>&gt;</span><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listeners</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="重试"><a href="#重试" class="headerlink" title="重试"></a>重试</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.IRetryAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.testng.ITestResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRetry</span> <span class="keyword">implements</span> <span class="title">IRetryAnalyzer</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> retryCount = <span class="number">0</span>;<span class="comment">//当前重试次数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> maxRetryCount = <span class="number">3</span>;<span class="comment">//最大重试次数</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">retry</span><span class="params">(ITestResult iTestResult)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (retryCount &lt; maxRetryCount) {</span><br><span class="line">            retryCount++;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在测试代码头部增加</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test(retryAnalyzer = MyRetry.class)</span></span><br></pre></td></tr></tbody></table></figure><h3 id="全部添加重试"><a href="#全部添加重试" class="headerlink" title="全部添加重试"></a>全部添加重试</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhongxin.common.BaseCase;</span><br><span class="line"><span class="keyword">import</span> io.qameta.allure.Attachment;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.OutputType;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.TakesScreenshot;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookCallBack;</span><br><span class="line"><span class="keyword">import</span> org.testng.IHookable;</span><br><span class="line"><span class="keyword">import</span> org.testng.ITestResult;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AllureReportListener</span> <span class="keyword">implements</span> <span class="title">IHookable</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Attachment(value = "Page screenshot", type = "image/png")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] saveScreenshot(<span class="keyword">byte</span>[] screenShot) {</span><br><span class="line">        <span class="keyword">return</span> screenShot;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(IHookCallBack iHookCallBack, ITestResult iTestResult)</span> </span>{</span><br><span class="line">        iHookCallBack.runTestMethod(iTestResult);</span><br><span class="line">        Throwable throwable = iTestResult.getThrowable();</span><br><span class="line">        <span class="keyword">if</span> (throwable != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="comment">//throwable不等于异常说明@Test出现异常了，执行截图</span></span><br><span class="line">            Object object = iTestResult.getInstance();</span><br><span class="line">            BaseCase baseCase = (BaseCase) object;</span><br><span class="line">            TakesScreenshot screenshot = (TakesScreenshot) baseCase.driver;</span><br><span class="line">            <span class="keyword">byte</span>[] screenshotAs = screenshot.getScreenshotAs(OutputType.BYTES);</span><br><span class="line">            saveScreenshot(screenshotAs);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在<code>testng.xml</code>中</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.zhongxin.listeners.RetryListener"</span>&gt;</span><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-web自动化测试框架2-29&quot;&gt;&lt;a href=&quot;#Java自动化测试-web自动化测试框架2-29&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(web自动化测试框架2 29)&quot;&gt;&lt;/a&gt;Java自动化测试(web自动化测试框架2 29)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;项目地址:&lt;a href=&quot;https://github.com/zx490336534/java_web_base&quot;&gt;https://github.com/zx490336534/java_web_base&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;截图&quot;&gt;&lt;a href=&quot;#截图&quot; class=&quot;headerlink&quot; title=&quot;截图&quot;&gt;&lt;/a&gt;截图&lt;/h2&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(web自动化测试框架 28)</title>
    <link href="http://zx490336534.github.io/article/ea141f.html"/>
    <id>http://zx490336534.github.io/article/ea141f.html</id>
    <published>2020-09-07T22:59:47.134Z</published>
    <updated>2021-04-22T13:58:48.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-web自动化测试框架-28"><a href="#Java自动化测试-web自动化测试框架-28" class="headerlink" title="Java自动化测试(web自动化测试框架 28)"></a>Java自动化测试(web自动化测试框架 28)</h1><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><h3 id="测试地址"><a href="#测试地址" class="headerlink" title="测试地址"></a>测试地址</h3><p><a href="http://120.78.128.25:8765/">http://120.78.128.25:8765/</a></p><span id="more"></span><h3 id="投资人"><a href="#投资人" class="headerlink" title="投资人"></a>投资人</h3><p>13323234545</p><p>lemon123456</p><h3 id="借款人"><a href="#借款人" class="headerlink" title="借款人"></a>借款人</h3><p>13323234444</p><p>lemonbest</p><h3 id="后台地址"><a href="#后台地址" class="headerlink" title="后台地址"></a>后台地址</h3><p><a href="http://120.78.128.25:8765/Admin/Index/login.html">http://120.78.128.25:8765/Admin/Index/login.html</a></p><p>lemon7</p><p>lemonbest</p><h2 id="Page-Object"><a href="#Page-Object" class="headerlink" title="Page Object"></a>Page Object</h2><h3 id="PO简介"><a href="#PO简介" class="headerlink" title="PO简介"></a>PO简介</h3><blockquote><p><a href="https://www.selenium.dev/documentation/en/guidelines_and_recommendations/page_object_models/">https://www.selenium.dev/documentation/en/guidelines_and_recommendations/page_object_models/</a></p></blockquote><p><strong>Page Object</strong> 是 Selenium 自动化测试项目开发实践的最佳设计模式之一，Page Object 的主要体现于<strong>对界面交互细节的封装</strong>，这样可以使测试案例更关注与业务而非界面细节，提高测试案例的可读性。</p><p><strong>Page Object 设计模式的优点如下：</strong></p><ul><li>减少代码的重复；</li><li>提高测试用例的可读性；</li><li>提高测试用例的可维护性，特别是针对 UI 频繁变化的项目；</li></ul><p><strong>Paget Object 使用注意：</strong></p><ul><li>public方法代表Page提供的功能</li><li>尽量不要暴露Page的内部细节</li><li>不要assertion</li><li>方法可以返回其他Page Objects</li><li>Page Objects不用代表整个页面，可以是任意一个部分</li><li>一样的操作，不同的结果应该分开（正确登录，错误登录）</li></ul><p>使用po是对页面进行抽象或者说建模的过程，需要把页面当作一个对象。</p><p>面向对象编程语言中，进行面向对象编程需要考虑以下两点：</p><ol><li>对象的属性「全局变量」 == web页面的元素「定位方法，定位值」</li><li>对象的行为「方法」 == web页面的元素的操作</li></ol><h2 id="编写页面操作基类"><a href="#编写页面操作基类" class="headerlink" title="编写页面操作基类"></a>编写页面操作基类</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.pages;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.By;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebElement;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.ExpectedConditions;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.WebDriverWait;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasePage</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> WebDriver driver;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BasePage</span><span class="params">(WebDriver driver)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.driver = driver;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封装显式等待</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> by 元素定位信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 元素对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebElement <span class="title">waitElementBisibility</span><span class="params">(By by)</span> </span>{</span><br><span class="line">        WebElement element = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//5秒元素可见显式等待</span></span><br><span class="line">            WebDriverWait wait = <span class="keyword">new</span> WebDriverWait(driver, <span class="number">5</span>);</span><br><span class="line">            element = wait.until(ExpectedConditions.visibilityOfElementLocated(by));</span><br><span class="line">            <span class="keyword">return</span> element;</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            System.out.println(<span class="string">"元素定位异常"</span> + e.getMessage());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="登陆页面封装"><a href="#登陆页面封装" class="headerlink" title="登陆页面封装"></a>登陆页面封装</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.pages;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.By;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebElement;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.ExpectedConditions;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.WebDriverWait;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span> <span class="keyword">extends</span> <span class="title">BasePage</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WebDriver driver;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// phone元素定位信息</span></span><br><span class="line">    <span class="keyword">private</span> By phoneBy = By.name(<span class="string">"phone"</span>);</span><br><span class="line">    <span class="comment">//password元素定位信息</span></span><br><span class="line">    <span class="keyword">private</span> By passwordBy = By.name(<span class="string">"password"</span>);</span><br><span class="line">    <span class="comment">//登陆按钮元素定位信息</span></span><br><span class="line">    <span class="keyword">private</span> By loginBtnBy = By.xpath(<span class="string">"//button[@class='btn btn-special']"</span>);</span><br><span class="line">    <span class="comment">//页面中央错误提示</span></span><br><span class="line">    <span class="keyword">private</span> By centerErrorBy = By.className(<span class="string">"layui-layer-content"</span>);</span><br><span class="line">    <span class="comment">//页面手机红色错误提示</span></span><br><span class="line">    <span class="keyword">private</span> By phoneformErrorBy = By.xpath(<span class="string">"//input[@name='phone']//following-sibling::div"</span>);</span><br><span class="line">    <span class="comment">//页面密码红色错误提示</span></span><br><span class="line">    <span class="keyword">private</span> By passwordformErrorBy = By.xpath(<span class="string">"//input[@name='password']//following-sibling::div"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoginPage</span><span class="params">(WebDriver driver)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(driver);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//对手机框进行输入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inputPhone</span><span class="params">(String phone)</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(phoneBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            element.clear();</span><br><span class="line">            element.sendKeys(phone);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对密码框进行输入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inputPassword</span><span class="params">(String password)</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(passwordBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            element.clear();</span><br><span class="line">            element.sendKeys(password);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击登陆按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clickLoginBtn</span><span class="params">()</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(loginBtnBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            element.click();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取页面中央错误提示文本</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCenterErrorText</span><span class="params">()</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(centerErrorBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> element.getText();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取页面手机红色错误提示</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPhoneFormErrorText</span><span class="params">()</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(phoneformErrorBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> element.getText();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取页面手机红色错误提示</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPasswordFormErrorText</span><span class="params">()</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(passwordformErrorBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> element.getText();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="首页封装"><a href="#首页封装" class="headerlink" title="首页封装"></a>首页封装</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.pages;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.By;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebElement;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.WebDriverWait;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexPage</span> <span class="keyword">extends</span> <span class="title">BasePage</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> WebDriver driver;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//昵称</span></span><br><span class="line">    <span class="keyword">private</span> By nicknameBy = By.xpath(<span class="string">"//a[contains(text(),'我的帐户[自动化测试帐号1]')]"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IndexPage</span><span class="params">(WebDriver driver)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(driver);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 昵称是否可见</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">nicknameIsVisibility</span><span class="params">()</span> </span>{</span><br><span class="line">        WebElement element = waitElementBisibility(nicknameBy);</span><br><span class="line">        <span class="keyword">if</span> (element != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> element.isDisplayed();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhongxin.cases;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zhongxin.pages.IndexPage;</span><br><span class="line"><span class="keyword">import</span> com.zhongxin.pages.LoginPage;</span><br><span class="line"><span class="keyword">import</span> okio.Timeout;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.*;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.chrome.ChromeDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.firefox.FirefoxDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.ie.InternetExplorerDriver;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.remote.DesiredCapabilities;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.ExpectedConditions;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.support.ui.WebDriverWait;</span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.AfterClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.BeforeClass;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.DataProvider;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginCase</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> WebDriver driver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">//打开浏览器</span></span><br><span class="line">        driver = open(<span class="string">"chrome"</span>);</span><br><span class="line">        <span class="comment">//访问登陆页面</span></span><br><span class="line">        driver.get(<span class="string">"http://120.78.128.25:8765/Index/login.html"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFailed01</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(<span class="string">"13212312312"</span>);</span><br><span class="line">        loginpage.inputPassword(<span class="string">"123123123"</span>);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        String actual = loginpage.getCenterErrorText();</span><br><span class="line">        String expected = <span class="string">"此账号没有经过授权，请联系管理员!"</span>;</span><br><span class="line">        Assert.assertEquals(actual, expected);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFailed02</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(<span class="string">""</span>);</span><br><span class="line">        loginpage.inputPassword(<span class="string">"123123123"</span>);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        String actual = loginpage.getPhoneFormErrorText();</span><br><span class="line">        String expected = <span class="string">"请输入手机号"</span>;</span><br><span class="line">        Assert.assertEquals(actual, expected);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test(dataProvider = "datas")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFailed03</span><span class="params">(String phone, String password, String expected)</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(phone);</span><br><span class="line">        loginpage.inputPassword(password);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        String actual = loginpage.getPhoneFormErrorText();</span><br><span class="line">        Assert.assertEquals(actual, expected);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFailed04</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(<span class="string">"15859019251"</span>);</span><br><span class="line">        loginpage.inputPassword(<span class="string">""</span>);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        String actual = loginpage.getPasswordFormErrorText();</span><br><span class="line">        Assert.assertEquals(actual, <span class="string">"请输入密码"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFailed05</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(<span class="string">"13323234545"</span>);</span><br><span class="line">        loginpage.inputPassword(<span class="string">"123123123"</span>);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        String actual = loginpage.getCenterErrorText();</span><br><span class="line">        Assert.assertEquals(actual, <span class="string">"帐号或密码错误!"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSuccess</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        LoginPage loginpage = <span class="keyword">new</span> LoginPage(driver);</span><br><span class="line">        loginpage.inputPhone(<span class="string">"13323234545"</span>);</span><br><span class="line">        loginpage.inputPassword(<span class="string">"lemon123456"</span>);</span><br><span class="line">        loginpage.clickLoginBtn();</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        IndexPage indexPage = <span class="keyword">new</span> IndexPage(driver);</span><br><span class="line">        <span class="keyword">boolean</span> flag = indexPage.nicknameIsVisibility();</span><br><span class="line">        Assert.assertTrue(flag);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DataProvider</span></span><br><span class="line">    <span class="keyword">public</span> Object[][] datas() {</span><br><span class="line">        Object[][] datas = {</span><br><span class="line">                {<span class="string">""</span>, <span class="string">"123123123"</span>, <span class="string">"请输入手机号"</span>},</span><br><span class="line">                {<span class="string">"1585901925"</span>, <span class="string">"123123123"</span>, <span class="string">"请输入正确的手机号"</span>},</span><br><span class="line">                {<span class="string">"158590192534"</span>, <span class="string">"123123123"</span>, <span class="string">"请输入正确的手机号"</span>},</span><br><span class="line">                {<span class="string">"1585901925%"</span>, <span class="string">"123123123"</span>, <span class="string">"请输入正确的手机号"</span>},</span><br><span class="line">        };</span><br><span class="line">        <span class="keyword">return</span> datas;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tearDown</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        <span class="comment">//关闭浏览器</span></span><br><span class="line">        close(driver);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(WebDriver driver)</span> <span class="keyword">throws</span> InterruptedException </span>{</span><br><span class="line">        Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        driver.quit();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WebDriver <span class="title">open</span><span class="params">(String type)</span> </span>{</span><br><span class="line">        WebDriver driver = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"chrome"</span>.equalsIgnoreCase(type)) {</span><br><span class="line">            System.setProperty(<span class="string">"webdriver.chrome.driver"</span>, <span class="string">"src/test/resources/chromedriver"</span>);</span><br><span class="line">            driver = <span class="keyword">new</span> ChromeDriver();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"ie"</span>.equalsIgnoreCase(type)) {</span><br><span class="line">            <span class="comment">// 设置ie启动项</span></span><br><span class="line">            DesiredCapabilities capabilities = <span class="keyword">new</span> DesiredCapabilities();</span><br><span class="line">            <span class="comment">// 忽略缩放</span></span><br><span class="line">            capabilities.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, <span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 忽略保护模式</span></span><br><span class="line">            capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, <span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 设置初始化浏览器地址</span></span><br><span class="line">            capabilities.setCapability(InternetExplorerDriver.INITIAL_BROWSER_URL, <span class="string">"https://www.baidu.com"</span>);</span><br><span class="line">            <span class="comment">// 配置ie驱动位置</span></span><br><span class="line">            System.setProperty(<span class="string">"webdriver.ie.driver"</span>, <span class="string">"src/test/resources/IEDriverServer.exe"</span>);</span><br><span class="line">            <span class="comment">// 创建ie驱动对象</span></span><br><span class="line">            driver = <span class="keyword">new</span> InternetExplorerDriver();</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"firefox"</span>.equalsIgnoreCase(type)) {</span><br><span class="line">            System.setProperty(<span class="string">"webdriver.firefox.bin"</span>, <span class="string">"D:\\Mozilla Firefox\\firefox.exe"</span>);</span><br><span class="line">            System.setProperty(<span class="string">"webdriver.firefox.driver"</span>, <span class="string">"src/test/resources/geckodriver.exe"</span>);</span><br><span class="line">            driver = <span class="keyword">new</span> FirefoxDriver();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> driver;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-web自动化测试框架-28&quot;&gt;&lt;a href=&quot;#Java自动化测试-web自动化测试框架-28&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(web自动化测试框架 28)&quot;&gt;&lt;/a&gt;Java自动化测试(web自动化测试框架 28)&lt;/h1&gt;&lt;h2 id=&quot;测试数据&quot;&gt;&lt;a href=&quot;#测试数据&quot; class=&quot;headerlink&quot; title=&quot;测试数据&quot;&gt;&lt;/a&gt;测试数据&lt;/h2&gt;&lt;h3 id=&quot;测试地址&quot;&gt;&lt;a href=&quot;#测试地址&quot; class=&quot;headerlink&quot; title=&quot;测试地址&quot;&gt;&lt;/a&gt;测试地址&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://120.78.128.25:8765/&quot;&gt;http://120.78.128.25:8765/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Java自动化测试(自动化测试背景与流程 27)</title>
    <link href="http://zx490336534.github.io/article/3d748498.html"/>
    <id>http://zx490336534.github.io/article/3d748498.html</id>
    <published>2020-09-07T22:34:25.353Z</published>
    <updated>2021-04-22T13:58:48.670Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java自动化测试-自动化测试背景与流程-27"><a href="#Java自动化测试-自动化测试背景与流程-27" class="headerlink" title="Java自动化测试(自动化测试背景与流程 27)"></a>Java自动化测试(自动化测试背景与流程 27)</h1><h2 id="自动化测试背景"><a href="#自动化测试背景" class="headerlink" title="自动化测试背景"></a>自动化测试背景</h2><h3 id="什么是自动化测试"><a href="#什么是自动化测试" class="headerlink" title="什么是自动化测试"></a>什么是自动化测试</h3><p>机器代替手工测试，自动验证结果是否符合预期</p><h3 id="自动化测试优点"><a href="#自动化测试优点" class="headerlink" title="自动化测试优点"></a>自动化测试优点</h3><ol><li>替代大量重复手工测试</li><li>提升回归测试效率，适合敏捷开发</li><li>在非工作时间自动执行，工作时间查看测试报告</li><li>保证每次测试执行的一致性与正确性，避免人为错误</li></ol><h3 id="自动化测试劣势"><a href="#自动化测试劣势" class="headerlink" title="自动化测试劣势"></a>自动化测试劣势</h3><ol><li>一般用于回归测试，项目开发初期不适合使用自动化</li><li>不能全部取代手工测试，只能替代手工测试中机械化，重复度高的操作，自动化测试极少能够达到100%覆盖率</li><li>自动化测试非常脆弱，特别是UI自动化</li><li>自动化测试工作量(框架设计+脚本开发)比单次手工测试大很多，当自动化多次执行时，性价比才会凸显<span id="more"></span><h3 id="自动化测试实施流程"><a href="#自动化测试实施流程" class="headerlink" title="自动化测试实施流程"></a>自动化测试实施流程</h3></li></ol><h3 id="1-评估自动化测试实施可行性"><a href="#1-评估自动化测试实施可行性" class="headerlink" title="1.评估自动化测试实施可行性"></a>1.评估自动化测试实施可行性</h3><p>想要开展自动化测试，应该遵循以下几个前提条件：</p><ol><li>需求稳定，不会频繁变更</li><li>研发和维护周期长，需要频繁执行回归测试</li><li>项目资源足够「人力」</li></ol><h3 id="2-测试需求分析"><a href="#2-测试需求分析" class="headerlink" title="2.测试需求分析"></a>2.测试需求分析</h3><p>自动化测试到底要做到什么程度</p><p>自动化测试覆盖范围：</p><ul><li>主业务流程</li><li>历史BUG较多的模块</li><li>基础重复的功能</li><li>优先级</li></ul><h3 id="3-制定测试计划"><a href="#3-制定测试计划" class="headerlink" title="3.制定测试计划"></a>3.制定测试计划</h3><p>测试工具/框架选型</p><ul><li>接口自动化：TestNG+HttpClient+Maven+Allure+Log4j</li><li>web自动化：TestNG+Selenium</li></ul><p>框架设计，自动化测试脚本开发时间计划表</p><p>脚本执行的策略，冒烟测试/回归测试的频率</p><p>定义自动化测试的输出，测试框架，测试脚本，测试数据，发现的缺陷，测试报告</p><h4 id="测试数据生成"><a href="#测试数据生成" class="headerlink" title="测试数据生成"></a>测试数据生成</h4><ol><li>UI方法：人工方式造数据</li><li>接口方法：效率高 用的最多 有保证的</li><li>数据库：效率高 添加数据影响到其他的数据表 不能确保正确性</li></ol><h3 id="4-搭建自动化测试环境，设计框架"><a href="#4-搭建自动化测试环境，设计框架" class="headerlink" title="4.搭建自动化测试环境，设计框架"></a>4.搭建自动化测试环境，设计框架</h3><h3 id="5-开发自动化测试脚本"><a href="#5-开发自动化测试脚本" class="headerlink" title="5.开发自动化测试脚本"></a>5.开发自动化测试脚本</h3><p>手工测试用例转自动化测试用例的过程</p><h3 id="6-执行自动化测试"><a href="#6-执行自动化测试" class="headerlink" title="6.执行自动化测试"></a>6.执行自动化测试</h3><p>本地执行：IDE调试/执行</p><p>持续集成平台：jenkins</p><h3 id="7-分析自动化测试结果"><a href="#7-分析自动化测试结果" class="headerlink" title="7.分析自动化测试结果"></a>7.分析自动化测试结果</h3><p>自动化用例失败了</p><ul><li>BUG</li><li>脚本设计/稳定性问题</li></ul><h3 id="8-框架-脚本维护"><a href="#8-框架-脚本维护" class="headerlink" title="8.框架/脚本维护"></a>8.框架/脚本维护</h3><p>周期最长</p><ul><li>框架优化</li><li>需求变更</li></ul><h3 id="9-成功展示「落地」"><a href="#9-成功展示「落地」" class="headerlink" title="9.成功展示「落地」"></a>9.成功展示「落地」</h3><ul><li><p>自动化测试用例覆盖，一般为20%的自动化测试，80%的手工测试</p></li><li><p>节省的时间成本：手工测试花费的时间-自动化测试所花的时间</p></li><li><p>自动化测试发现的缺陷数：保证质量，不能保证发现很多BUG</p></li><li><p>自动化测试的投入产出ROI「越高越好」</p></li></ul><p>(手工测试的成本-自动化测试成本)/自动化测试脚本</p><h2 id="自动化测试可以达到100-覆盖率吗"><a href="#自动化测试可以达到100-覆盖率吗" class="headerlink" title="自动化测试可以达到100%覆盖率吗"></a>自动化测试可以达到100%覆盖率吗</h2><p>有些用例场景无法被自动化</p><p>一些验证易用性，友好性，美观的用例不适合做自动化</p><p>有些边缘用例很少被重复执行，从ROI角度考虑不适合做自动化</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java自动化测试-自动化测试背景与流程-27&quot;&gt;&lt;a href=&quot;#Java自动化测试-自动化测试背景与流程-27&quot; class=&quot;headerlink&quot; title=&quot;Java自动化测试(自动化测试背景与流程 27)&quot;&gt;&lt;/a&gt;Java自动化测试(自动化测试背景与流程 27)&lt;/h1&gt;&lt;h2 id=&quot;自动化测试背景&quot;&gt;&lt;a href=&quot;#自动化测试背景&quot; class=&quot;headerlink&quot; title=&quot;自动化测试背景&quot;&gt;&lt;/a&gt;自动化测试背景&lt;/h2&gt;&lt;h3 id=&quot;什么是自动化测试&quot;&gt;&lt;a href=&quot;#什么是自动化测试&quot; class=&quot;headerlink&quot; title=&quot;什么是自动化测试&quot;&gt;&lt;/a&gt;什么是自动化测试&lt;/h3&gt;&lt;p&gt;机器代替手工测试，自动验证结果是否符合预期&lt;/p&gt;
&lt;h3 id=&quot;自动化测试优点&quot;&gt;&lt;a href=&quot;#自动化测试优点&quot; class=&quot;headerlink&quot; title=&quot;自动化测试优点&quot;&gt;&lt;/a&gt;自动化测试优点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;替代大量重复手工测试&lt;/li&gt;
&lt;li&gt;提升回归测试效率，适合敏捷开发&lt;/li&gt;
&lt;li&gt;在非工作时间自动执行，工作时间查看测试报告&lt;/li&gt;
&lt;li&gt;保证每次测试执行的一致性与正确性，避免人为错误&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;自动化测试劣势&quot;&gt;&lt;a href=&quot;#自动化测试劣势&quot; class=&quot;headerlink&quot; title=&quot;自动化测试劣势&quot;&gt;&lt;/a&gt;自动化测试劣势&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;一般用于回归测试，项目开发初期不适合使用自动化&lt;/li&gt;
&lt;li&gt;不能全部取代手工测试，只能替代手工测试中机械化，重复度高的操作，自动化测试极少能够达到100%覆盖率&lt;/li&gt;
&lt;li&gt;自动化测试非常脆弱，特别是UI自动化&lt;/li&gt;
&lt;li&gt;自动化测试工作量(框架设计+脚本开发)比单次手工测试大很多，当自动化多次执行时，性价比才会凸显&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java自动化测试" scheme="http://zx490336534.github.io/categories/Java%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Java" scheme="http://zx490336534.github.io/tags/Java/"/>
    
    <category term="自动化测试" scheme="http://zx490336534.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
